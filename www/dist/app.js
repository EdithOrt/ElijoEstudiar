window.VERSION = "0.0.1";var pmb_im={controllers:angular.module("pmb_im.controllers",[]),services:angular.module("pmb_im.services",[])};pmb_im.app=angular.module("pmb_im",["ionic","ionic.wizard","ion-autocomplete","leaflet-directive","pmb_im.controllers","pmb_im.services","ngCordova"]).constant("ApiImEndpoint",{url:"http://www.montevideo.gub.uy"}).constant("ApiDataEndpoint",{url:"http://backend.educacion.thor.datauy.org"}).run(["$ionicPlatform","$rootScope","$cordovaKeyboard",function(e,t,n){t.VERSION=window.VERSION,e.ready(function(){window.cordova&&window.cordova.plugins.Keyboard&&(cordova.plugins.Keyboard.hideKeyboardAccessoryBar(!1),cordova.plugins.Keyboard.disableScroll(!1)),ionic.Platform.isFullScreen=!0,window.StatusBar&&StatusBar.styleDefault()})}]).config(["$stateProvider","$urlRouterProvider","$compileProvider","$ionicConfigProvider",function(e,t,n,o){n.debugInfoEnabled(!1),e.state("app",{cache:!1,url:"/app","abstract":!0,templateUrl:"templates/menu.html",controller:"AbsController"}).state("app.form",{cache:!1,url:"/form",views:{menuContent:{templateUrl:"templates/form.html",controller:"FormCtrl"},mapView:{templateUrl:"templates/map.html",controller:"MapController"}}}).state("app.intro",{cache:!1,url:"/intro",views:{menuContent:{templateUrl:"templates/intro.html",controller:"IntroCtrl"}}}).state("app.search",{cache:!1,url:"/search",views:{menuContent:{templateUrl:"templates/search.html",controller:"SearchCtrl"},mapView:{templateUrl:"templates/map.html",controller:"MapController"}}}),t.otherwise("/app/intro")}]),pmb_im.controllers.controller("AbsController",["$scope",function(e){}]),pmb_im.controllers.controller("FormCtrl",["$scope","$state","$cordovaGeolocation","$stateParams","$ionicPlatform","$ionicPopup","LocationsService","ApiService","DBService","$ionicSlideBoxDelegate","$ionicScrollDelegate",function(e,t,n,o,r,a,i,s,l,c,u){e.form={},e.form.edad=16,e.form.ultimo_nivel_aprobado="primaria",e.form.ultimo_anio_aprobado="",e.form.plan="",e.form.lugar="",e.form.que="",e.form.donde="",e.form.turno="matutino",e.form.SearchQueResults={},e.form.SearchDondeResults={},e.form.searchQue="",e.form.searchDonde="",e.form.option="list",e.establecimientos=null,e.restarEdad=function(){parseInt(e.form.edad)>4&&(e.form.edad=parseInt(e.form.edad)-1)},e.sumarEdad=function(){e.form.edad=parseInt(e.form.edad)+1},e.selectUltimoNivel=function(t){var n,o=document.getElementsByClassName("nivel");for(n=0;n<o.length;n++)o[n].className="nivel_"+o[n].id+" nivel hidden";var r=document.getElementById(t);r.className="nivel_"+r.id+" nivel",e.form.ultimo_nivel_aprobado=t},e.select_turno=function(t){var n,o=document.getElementsByClassName("turnos");for(n=0;n<o.length;n++)o[n].className="turnos turno_"+o[n].id+"_off";var r=document.getElementById(t);r.className="turnos turno_"+t,e.form.turno=t},e.select_option=function(t){var n,o=document.getElementsByClassName("options");for(n=0;n<o.length;n++)o[n].className="options option_"+o[n].id+"_off";var r=document.getElementById(t);r.className="options option_"+t,e.form.option=t,"map"==t&&(document.getElementById("map_wrapper").style.display="block",document.getElementById("map_container").style.display="block",document.getElementById("map_container").style.visibility="visible",document.getElementById("list_container").style.display="none",document.getElementById("form_container").style.minHeight="370px"),"list"==t&&(document.getElementById("map_wrapper").style.display="none",document.getElementById("list_container").style.display="block",document.getElementById("map_container").style.visibility="hidden",document.getElementById("map_container").style.display="none",document.getElementById("form_container").style.minHeight="640px")},e.onSearchChangeQue=function(){var t=document.getElementById("que_estudiar"),n=t.value.trim();n.length>=3?s.searchQueEstudiar(n).then(function(t){e.form.SearchQueResults=t.data,document.getElementById("SearchQueResults").style.display="block"}):e.hideSearchQueResults()},e.hideSearchQueResults=function(){document.getElementById("SearchQueResults").style.display="none"},e.selectQueEstudiarItem=function(t){e.form.que=t,e.hideSearchQueResults(),e.form.searchQue=t.nombre},e.listAllQueEstudiar=function(){var t="api-get-all";s.searchQueEstudiar(t).then(function(t){e.form.SearchQueResults=t.data,document.getElementById("SearchQueResults").style.display="block"})},e.onSearchChangeDonde=function(){var t=document.getElementById("donde_estudiar"),n=t.value.trim();n.length>=3?s.searchDondeEstudiar(n).then(function(t){e.form.SearchDondeResults=t.data,document.getElementById("SearchDondeResults").style.display="block"}):e.hideSearchDondeResults()},e.hideSearchDondeResults=function(){document.getElementById("SearchDondeResults").style.display="none"},e.selectDondeEstudiarItem=function(t){e.form.donde=t,e.hideSearchDondeResults(),e.form.searchDonde=t.loc_dep},e.editSearch=function(){c.previous(),c.previous()},e.next=function(){c.next()},e.previous=function(){c.previous()},e.slideHasChanged=function(t){e.select_option("list"),2==t&&(document.getElementById("map_container").style.display="none",s.updateFilters(e.form),null!=s.filters&&(s.getEstablecimientosByFilters().then(function(t){console.log(t),s.lastSearchResponseEstablecimientos=t,e.establecimientos=t,s.updateMapPins(e.establecimientos)}),null==e.establecimientos&&(e.establecimientos=[{nombre:"Liceo Nº 1",id:1214,lat:-34.906346,lon:-56.172065},{nombre:"Liceo Nº 2",id:2434,lat:-34.902754,lon:-56.164127},{nombre:"Liceo Nº 7",id:4324},{nombre:"Liceo Juan Zorrilla",id:5345}],s.updateMapPins(e.establecimientos))))}}]),pmb_im.controllers.controller("IntroCtrl",["$scope","$state","$cordovaGeolocation","$stateParams","$ionicPlatform","$ionicPopup","LocationsService",function(e,t,n,o,r,a,i){e.$on("$ionicView.beforeEnter",function(){document.getElementById("form_container").style.minHeight="640px"}),e.$on("$ionicView.afterEnter",function(){document.getElementById("map_wrapper").style.display="none"}),e.geolocate=function(){var e={timeout:3500,enableHighAccuracy:!0};n.getCurrentPosition(e).then(function(e){i.save_initial_position(e),t.go("app.form")},function(e){t.go("app.form")})},e.go_to_form=function(){document.getElementById("map_wrapper").style.display="block",t.go("app.form")},e.go_to_search=function(){document.getElementById("map_wrapper").style.display="block",t.go("app.search")}}]),pmb_im.controllers.controller("MapController",["$scope","_","$cordovaGeolocation","leafletData","ConfigService","PinService","$interval","$location","MapService","ModalService","ApiService","$timeout",function(e,t,n,o,r,a,i,s,l,c,u,d){e.baseURL=r.baseURL,e.AppName=r.AppName,e.one_value_popup=null,e.myIntervals=new Array,e.$on("$ionicView.beforeEnter",function(){c.checkNoModalIsOpen(),u.mapScope=e,e.create_online_map(),document.getElementById("spinner").style.display="none",document.getElementById("pinspinner").style.display="none"}),e.filtersUpdated=function(){console.log(u.filters),e.loadPinsLayer()},e.create_online_map=function(){e.map={defaults:{tileLayer:"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",minZoom:1,maxZoom:18,zoomControlPosition:"topleft"},markers:{},events:{map:{enable:["context"],logic:"emit"}},center:{lat:-34.901113,lng:-56.164531,zoom:16}},d(function(){document.getElementById("map_wrapper").style.display="none"},1e3)},e.locate=function(){n.getCurrentPosition().then(function(t){e.map.center.lat=t.coords.latitude,e.map.center.lng=t.coords.longitude,e.map.center.zoom=15,e.map.markers.now={lat:t.coords.latitude,lng:t.coords.longitude,message:"Estás aquí",focus:!0,draggable:!1}},function(e){})},e.hideOffScreenPins=function(){},e.loadPinsLayer=function(e){console.log(e),null!=e&&o.getMap().then(function(t){e.forEach(function(e){if(e.lat&&e.lon){var n=L.marker([e.lat,e.lon]);n.bindPopup("<b>"+e.nombre+"</b>").openPopup(),n.addTo(t)}})})}}]),pmb_im.controllers.controller("SearchCtrl",["$scope","$state","$cordovaGeolocation","$stateParams","$ionicPlatform","$ionicPopup","LocationsService","ApiService","DBService","$ionicSlideBoxDelegate","$ionicScrollDelegate",function(e,t,n,o,r,a,i,s,l,c,u){e.form={},e.form.lugar="",e.form.nombre_centro="",e.form.option="list",e.establecimientos=null,e.$on("$ionicView.beforeEnter",function(){document.getElementById("form_container").style.minHeight="460px"}),e.onSearchChange=function(){},e.hideSearchQueResults=function(){document.getElementById("SearchQueResults").style.display="none"},e.showMap=function(){document.getElementById("map_wrapper").style.display="block",document.getElementById("map_container").style.display="block",document.getElementById("map_container").style.visibility="visible",document.getElementById("form_container").style.minHeight="210px",document.getElementById("search_view_list_button").style.display="block",document.getElementById("search_view_map_button").style.display="none"},e.showList=function(){document.getElementById("map_wrapper").style.display="none",document.getElementById("map_container").style.display="none",document.getElementById("map_container").style.visibility="hidden",document.getElementById("form_container").style.minHeight="460px",document.getElementById("search_view_map_button").style.display="block",document.getElementById("search_view_list_button").style.display="none"}}]),pmb_im.services.factory("ApiService",["$http","ConfigService",function(e,t){function n(e){angular.extend(this,e)}var o=t.baseURL+"/api/";return n.searchQueEstudiar=function(t){return e.get(o+"search/"+t,{cache:!1,params:{hash_id:Math.random()}})},n.searchDondeEstudiar=function(t){return e.get(o+"searchByLocalidadDepartamento/"+t,{cache:!1,params:{hash_id:Math.random()}})},n.filters=null,n.mapScope=null,n.formScope={},n.lastSearchResponseEstablecimientos=null,n.updateFilters=function(e){n.filters=e,null!=n.mapScope&&n.mapScope.filtersUpdated()},n.createFilterParamsForGetRequest=function(){var e={hash_id:Math.random(),edad:n.filters.edad,ultimo_nivel_aprobado:n.filters.ultimo_nivel_aprobado,ultimo_anio_aprobado:n.filters.ultimo_anio_aprobado,turno:n.filters.turno};return""!=n.filters.que&&(e.queEstudiarId=n.filters.que.id,e.queEstudiarNombre=n.filters.que.nombre,e.queEstudiarTagUno=n.filters.que.tag[0],e.queEstudiarTagDos=n.filters.que.tag[1]),""!=n.filters.donde&&(e.dondeEstudiarDepartamento=n.filters.donde.departamento,e.dondeEstudiarLocalidad=n.filters.donde.localidad,e.dondeEstudiarLat=n.filters.donde.coordenadas.lat,e.dondeEstudiarLon=n.filters.donde.coordenadas.lon),e="tipo"==n.filters.que.tipo?n.filters.que.id+"/all":"all/"+n.filters.que.id},n.getEstablecimientosByFilters=function(){if(null!=n.filters){var t=n.createFilterParamsForGetRequest();return console.log(t),e.get(o+"establecimiento-por-tipo/"+t)}},n.updateMapPins=function(e){n.mapScope.loadPinsLayer(e)},n}]),pmb_im.services.factory("AuthService",["$http","$cordovaFileTransfer","ConfigService","ValidationService",function(e,t,n,o){var r=n.baseURL+"/api/";return{log_in:function(t,n){var o="user="+t+"&password="+n;return e.post(r+"login",o,{withCredentials:!0,headers:{"Content-Type":"application/x-www-form-urlencoded"}})},sign_out:function(t,n){return e.get(r+"sign_out",{withCredentials:!0,params:{password_sign_in:t,email:n}})},create_user:function(n){if(n.picture_url&&o.isMobileDevice()){var a={fileKey:"photo",withCredentials:!0,params:{user:n.username,password:n.password,email:n.email,gender:n.gender,interested:n.interested,status:n.status,show_location:n.show_location}},i=!0;return t.upload(r+"create_user",n.picture_url,a,i)}if(n.picture_url){var s=new FormData;return s.append("photo",n.picture_url),s.append("user",n.username),s.append("password",n.password),s.append("email",n.email),s.append("gender",n.gender),s.append("interested",n.interested),s.append("status",n.status),s.append("show_location",n.show_location),e.post(r+"create_user",s,{headers:{"Content-Type":void 0},transformRequest:angular.identity})}var l="user="+n.username+"&password="+n.password+"&email="+n.email+"&gender="+n.gender;return l=l+"&interested="+n.interested+"&status="+n.status+"&show_location="+n.show_location,e.post(r+"create_user",l,{withCredentials:!0,headers:{"Content-Type":"application/x-www-form-urlencoded"}})},password_recovery:function(t){return e.get(r+"forgot_password",{params:{login_email:t}})},password_change:function(t,n,o,a){var i="email="+t+"&password_sign_in="+n+"&new_password="+o+"&confirm="+a;return e.post(r+"change_password",i,{headers:{"Content-Type":"application/x-www-form-urlencoded"}})},edit_user:function(n){if(n.picture_url&&o.isMobileDevice()){var a={fileKey:"photo",withCredentials:!0,params:{user:n.username,password:n.password,email:n.email,gender:n.gender,interested:n.interested,status:n.status,show_location:n.show_location}},i=!0;return t.upload(r+"edit_profile",n.picture_url,a,i)}var s="user="+n.username+"&password="+n.password+"&email="+n.email+"&gender="+n.gender;if(s=s+"&interested="+n.interested+"&status="+n.status+"&show_location="+n.show_location,n.picture_url){var l=new FormData;return l.append("photo",n.picture_url),l.append("user",n.username),l.append("password",n.password),l.append("email",n.email),l.append("gender",n.gender),l.append("interested",n.interested),l.append("status",n.status),l.append("show_location",n.show_location),e.post(r+"edit_profile",l,{headers:{"Content-Type":void 0},transformRequest:angular.identity})}return e.post(r+"edit_profile",s,{withCredentials:!0,headers:{"Content-Type":"application/x-www-form-urlencoded"}})}}}]),pmb_im.services.factory("ConfigService",["$http",function(e){var t={};return t.baseURL="http://ee_backend.development.datauy.org",ionic.Platform.isWebView()?t.baseURL="http://ee_backend.development.datauy.org":t.baseURL="/backend",t.AppName="Elijo Estudiar",t}]),pmb_im.services.factory("ConnectivityService",["$cordovaNetwork",function(e){return{isOnline:function(){return!0},isOffline:function(){return!1}}}]),pmb_im.services.factory("DBService",["$q",function(e){function t(e,t,o,r,a,i,s,l){var c={_id:"user-logged",name:e,password:t,picture_url:o,show_location:r,uid:a,status:i,gender:s,interested:l};n().then(function(e){return c._rev=e._rev,m.put(c)})["catch"](function(e){return m.put(c)})}function n(){return m.get("user-logged")}function o(){m.get("user-logged").then(function(e){return m.remove(e)})}function r(){return m=new PouchDB("tomamosuna_local_db")}function a(e){var t=new Date,n="report_"+t.getFullYear()+(t.getMonth()+1)+t.getDate()+t.getMilliseconds();return e._id=n,m.put(e)}function i(e){return m.put(e)}function s(){return m.get("categories-list")}function l(e){s().then(function(t){return e._rev=t._rev,m.put(e)})["catch"](function(t){return e._id="categories-list",m.put(e)})}function c(e){return m.get(e)}function u(){return m.allDocs({include_docs:!0,attachments:!1,startkey:"report_",endkey:"report_￿"})}function d(e){m.get(e).then(function(e){return m.remove(e)})}function p(e){return m.remove(e)}var m;return{initDB:r,saveUser:t,getUser:n,eraseUser:o,saveReport:a,getReport:c,getAllReports:u,updateReport:i,deleteReport:d,deleteGivenReport:p,getCategories:s,saveCategories:l}}]),pmb_im.services.factory("ErrorService",["$http","$ionicPopup","ValidationService",function(e,t,n){return{http_response_is_successful:function(e,t){var n=document.getElementById(t);return e.data&&"success"==e.data.Status||"success"==e.Status?(n.style.display="none",!0):(e.data?n.innerHTML="<h3>"+e.data.Message+"</h3>":n.innerHTML="<h3>"+e.Message+"</h3>",n.style.display="block",!1)},http_response_is_successful_ajax:function(e){return 0!=e.data.result},http_response_is_successful_popup:function(e){if(0==e.data.result){var n=t.alert({title:"Error",template:e.data.message});return n.then(function(e){return!1}),!1}return!0},http_data_response_is_successful:function(e,t){var n=document.getElementById(t);return"success"!=e.Status?(n.innerHTML="<h3>"+e.Message+"</h3>",n.style.display="block",!1):(n.style.display="none",!0)},http_data_response_is_successful_ajax:function(e){return 0!=e.result},show_error_message:function(e,t){var n=document.getElementById(e);return n.innerHTML="<h3>"+t+"</h3>",n.style.display="block",!1},show_error_message_popup:function(e){var n=t.alert({title:"Error",template:e});return n.then(function(e){return!1}),!1},check_fields:function(e,t){var o="";if(e.forEach(function(e){"notNull"==e.type&&(n.validate_not_empty(e.value)||(o=o+'<h3>- El campo "'+e.name+'" no puede estar vacío.</h3>')),"email"==e.type&&(n.validate_email(e.value)||(o=o+'<h3>- El campo "'+e.name+'" no es una dirección de correo válida.</h3>')),"iddoc_uy"==e.type&&(n.validate_iddoc_uy(e.value)||(o=o+'<h3>- El campo "'+e.name+'" no es una cédula uruguaya válida.</h3>')),"two_words"==e.type&&(n.validate_two_words(e.value)||(o=o+'<h3>- El campo "'+e.name+'" debe contener al menos dos palabras.</h3>')),"equalsTo"==e.type&&(n.validate_equalsTo(e.value,e.secondValue)||(o=o+'<h3>- Los campos "'+e.name+'" no coinciden.</h3>'))}),""==o)return!0;var r=document.getElementById(t);return r.innerHTML=o,r.style.display="block",!1}}}]),pmb_im.services.factory("Loader",["$ionicLoading","$timeout","$ionicPopup",function(e,t,n){var o={showLoading:function(t){t=t||"Loading...",e.show({template:t})},hideLoading:function(){e.hide()},toggleLoadingWithMessage:function(e,n){var o=this;o.showLoading(e),t(function(){o.hideLoading()},n||3e3)},confirmPopup:function(e,t){var o=n.confirm({title:e,template:t});return o},showAlert:function(e,t){var o=n.alert({title:e,template:t});return o}};return o}]),pmb_im.services.factory("LocationsService",[function(){var e={};return e.initial_lat="",e.initial_lng="",e.last_user_lat="",e.last_user_lng="",e.council_modal=null,e.selected_council=null,e.selectCouncil=function(t){e.selected_council=t},e.save_initial_position=function(t){e.initial_lat=t.coords.latitude,e.initial_lng=t.coords.longitude},e.save_last_user_position=function(t,n){e.last_user_lat=t,e.last_user_lng=n},e.savedLocations=[],e}]),pmb_im.services.factory("MapService",["leafletData","$compile",function(e,t){proj4.defs("EPSG:32721","+proj=utm +zone=21 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs");var n={};return n.goToPlace=function(n,o,r,a){var i={type:"FeatureCollection",crs:{type:"name",properties:{name:"urn:ogc:def:crs:EPSG::32721"}},features:[{type:"Feature",geometry:{type:"Point",coordinates:[o,r]},properties:{nombre:n}}]};e.getMap().then(function(e){var n,o=L.Proj.geoJson(i,{pointToLayer:function(e,o){n=o;var r="<p align='center'>"+e.properties.nombre+" <br/> <a ng-click='new_report_from_latlon("+n.lat+","+n.lng+");'>Iniciar reporte aquí</a></p>",i=t(r)(a);return L.marker(o).bindPopup(i[0])}});o.addTo(e),e.setView(n,18),o.openPopup()})},n.centerMapOnCoords=function(t,n,o){e.getMap().then(function(e){e.setView(new L.LatLng(t,n),o)})},n}]),pmb_im.services.factory("ModalService",[function(){var e={};return e.activeModal=null,e.checkNoModalIsOpen=function(){e.activeModal&&(e.activeModal.hide(),e.activeModal.remove())},e}]),pmb_im.services.factory("PinService",["$http","leafletData","ConfigService",function(e,t,n){function o(e){angular.extend(this,e)}var r=n.baseURL+"/oferta.geojson/-34.828518,-55.951376/MATUTINO",a=n.baseURL+"/api/";return o.getAll=function(){return e.get(r,{cache:!1,params:{hash_id:Math.random()}})},o.sendUserLocation=function(t,n,o,r,i){var s="user="+o+"&password="+r+"&lat="+t+"&lon="+n+"&uid="+i;return e.post(a+"send_user_position",s,{withCredentials:!0,headers:{"Content-Type":"application/x-www-form-urlencoded"}})},o._all=[],o.current={},o.lastPinsResponse=null,o.build=function(e){return new o(e)},o.prototype.setLatLng=function(e){this.lat=e.lat,this.lon=e.lng},o}]),pmb_im.services.factory("PopUpService",["$ionicPopup","ValidationService",function(e,t){return{show_alert:function(t,n){var o=e.alert({title:t,template:n});return o.then(function(e){return!0}),!0},confirmPopup:function(t,n){var o=e.confirm({title:t,template:n});return o},askForOneValuePopUp:function(n,o,r,a,i){$scope=n;var s=e.show({template:a+': <input type="text" id="one_value_popup"><div id="error_container_inside"></div>',title:o,subTitle:r,scope:$scope,buttons:[{text:"Cancelar"},{text:"<b>Enviar</b>",type:"button-positive",onTap:function(e){var n="",o=document.getElementById("one_value_popup").value;if("notNull"==i&&(t.validate_not_empty(o)||(n=n+'<h3>- El campo "'+a+'" no puede estar vacío.</h3>')),"email"==i&&(t.validate_email(o)||(n=n+'<h3>- El campo "'+a+'" no es una dirección de correo válida.</h3>')),"iddoc_uy"==i&&(t.validate_iddoc_uy(o)||(n=n+'<h3>- El campo "'+a+'" no es una cédula uruguaya válida.</h3>')),"two_words"==i&&(t.validate_two_words(o)||(n=n+'<h3>- El campo "'+a+'" debe contener al menos dos palabras.</h3>')),""==n)return o;var r=document.getElementById("error_container_inside");r.innerHTML=n,r.style.display="block",e.preventDefault()}}]});return s}}}]),pmb_im.services.factory("SemaphoreService",[function(){var e={};return e.semaphores=new Array,e.semaphores["open-modal"]="available",e.semaphores["submit-form"]="available",e.semaphores["submit-location"]="available",e.semaphores.can_talk="available",e.takeIfAvailable=function(t){return"available"==e.semaphores[t]&&(e.semaphores[t]="occupied",!0)},e.makeAvailableAgain=function(t){return"occupied"==e.semaphores[t]&&(e.semaphores[t]="available",!0)},e}]),pmb_im.services.factory("locationAPI",["$http","$q","ApiImEndpoint","ApiDataEndpoint","ConfigService","LocationsService",function(e,t,n,o,r,a){var i="ubicacionesRestProd",s={};return s.searchLocationByStr=function(t){var n=r.baseURL+"/ajax/geocode?term="+a.selected_council+","+t;return e.get(n,{method:"GET",params:{}})},s.searchEsquinaByStr=function(t){var n=r.baseURL+"/ajax/geocode?term="+a.selected_council+","+t.calle+","+t.esquina;return e.get(n,{method:"GET",params:{}})},s.getLocationGeom=function(t){for(var o=n.url+"/"+i+s.getParamPathByTipo(t.tipo),r=0;r<t.pathParams.length;r++)o+="/"+t.pathParams[r];return e.get(baseURL).then(function(e){return e.data})},s.getLocationGeomPMB=function(t,n,o){var i=r.baseURL+"/ajax/geocode?term="+a.selected_council+","+t+","+n+","+o;return e.get(i)},s.getParamPathByTipo=function(e){var t={ESQUINA:"/esquina",DIRECCION:"/direccion"};return t[e]},s}]),pmb_im.services.factory("_",[function(){return window._}]),pmb_im.services.factory("UserService",["$http",function(e){var t={};return t.uid=null,t.name=null,t.email=null,t.password=null,t.picture_url="url(./img/icon-user-anonymous.png)",t.show_location=null,t.save_user_data=function(e,n,o,r,a,i,s,l){t.uid=a,t.name=e,t.password=n,t.picture_url=o,t.show_location=r,t.status=i,t.gender=s,t.interested=l},t.erase_user_data=function(){t.name=null,t.email=null,t.password=null,t.identity_document=null,t.phone=null,t.picture_url=null},t.get_user_data=function(){},t.add_photo=function(e){t.picture_url=e},t.isLogged=function(){return null!=t.name&&""!=t.name},t}]),pmb_im.services.factory("ValidationService",["$http","$ionicPopup",function(e,t){return{isMobileDevice:function(){return!!window.cordova},validate_not_empty:function(e){return null!=e&&"undefined"!=e&&""!=e},validate_two_words:function(e){if(null!=e&&"undefined"!=e&&""!=e){var t=e.split(" ").filter(function(e){return""!==e});return t.length>1}return!1},validate_equalsTo:function(e,t){return e==t},validate_email:function(e){if(null!=e&&"undefined"!=e&&""!=e){var t=/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;return t.test(e)}return!1},validate_iddoc_uy:function(e){if(null!=e&&"undefined"!=e&&""!=e){e=e.replace(/\D/g,"");var t=e[e.length-1],n=0,o=0;if(e.length<=6)for(o=e.length;o<7;o++)e="0"+e;for(o=0;o<7;o++)n+=parseInt("2987634"[o])*parseInt(e[o])%10;var r;return r=n%10===0?0:10-n%10,t==r}return!1}}}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyIsImNvbnRyb2xsZXJzL2Ficy5jdHJsLmpzIiwiY29udHJvbGxlcnMvZm9ybS5jcnRsLmpzIiwiY29udHJvbGxlcnMvaW50cm8uY3RybC5qcyIsImNvbnRyb2xsZXJzL21hcC5jdHJsLmpzIiwiY29udHJvbGxlcnMvc2VhcmNoLmNydGwuanMiLCJzZXJ2aWNlcy9hcGkuc2VydmljZS5qcyIsInNlcnZpY2VzL2F1dGguc2VydmljZXMuanMiLCJzZXJ2aWNlcy9jb25maWcuc2VydmljZXMuanMiLCJzZXJ2aWNlcy9jb25uZWN0aXZpdHkuc2VydmljZXMuanMiLCJzZXJ2aWNlcy9kYi5zZXJ2aWNlcy5qcyIsInNlcnZpY2VzL2Vycm9yLnNlcnZpY2VzLmpzIiwic2VydmljZXMvbG9hZGVyLnNlcnZpY2VzLmpzIiwic2VydmljZXMvbG9jYXRpb25zU2VydmljZS5qcyIsInNlcnZpY2VzL21hcC5zZXJ2aWNlcy5qcyIsInNlcnZpY2VzL21vZGFsU2VydmljZS5qcyIsInNlcnZpY2VzL3Bpbi5zZXJ2aWNlLmpzIiwic2VydmljZXMvcG9wdXAuc2VydmljZXMuanMiLCJzZXJ2aWNlcy9zZW1hcGhvcmUuc2VydmljZS5qcyIsInNlcnZpY2VzL3ViaWNhY2lvbmVzLnNlcnZpY2VzLmpzIiwic2VydmljZXMvdW5kZXJzY29yZS5zZXJ2aWNlLmpzIiwic2VydmljZXMvdXNlci5zZXJ2aWNlcy5qcyIsInNlcnZpY2VzL3ZhbGlkYXRpb24uc2VydmljZXMuanMiXSwibmFtZXMiOlsicG1iX2ltIiwiY29udHJvbGxlcnMiLCJhbmd1bGFyIiwibW9kdWxlIiwic2VydmljZXMiLCJhcHAiLCJjb25zdGFudCIsInVybCIsInJ1biIsIiRpb25pY1BsYXRmb3JtIiwiJHJvb3RTY29wZSIsIiRjb3Jkb3ZhS2V5Ym9hcmQiLCJWRVJTSU9OIiwid2luZG93IiwicmVhZHkiLCJjb3Jkb3ZhIiwicGx1Z2lucyIsIktleWJvYXJkIiwiaGlkZUtleWJvYXJkQWNjZXNzb3J5QmFyIiwiZGlzYWJsZVNjcm9sbCIsImlvbmljIiwiUGxhdGZvcm0iLCJpc0Z1bGxTY3JlZW4iLCJTdGF0dXNCYXIiLCJzdHlsZURlZmF1bHQiLCJjb25maWciLCIkc3RhdGVQcm92aWRlciIsIiR1cmxSb3V0ZXJQcm92aWRlciIsIiRjb21waWxlUHJvdmlkZXIiLCIkaW9uaWNDb25maWdQcm92aWRlciIsImRlYnVnSW5mb0VuYWJsZWQiLCJzdGF0ZSIsImNhY2hlIiwiYWJzdHJhY3QiLCJ0ZW1wbGF0ZVVybCIsImNvbnRyb2xsZXIiLCJ2aWV3cyIsIm1lbnVDb250ZW50IiwibWFwVmlldyIsIm90aGVyd2lzZSIsIiRzY29wZSIsIiRzdGF0ZSIsIiRjb3Jkb3ZhR2VvbG9jYXRpb24iLCIkc3RhdGVQYXJhbXMiLCIkaW9uaWNQb3B1cCIsIkxvY2F0aW9uc1NlcnZpY2UiLCJBcGlTZXJ2aWNlIiwiREJTZXJ2aWNlIiwiJGlvbmljU2xpZGVCb3hEZWxlZ2F0ZSIsIiRpb25pY1Njcm9sbERlbGVnYXRlIiwiZm9ybSIsImVkYWQiLCJ1bHRpbW9fbml2ZWxfYXByb2JhZG8iLCJ1bHRpbW9fYW5pb19hcHJvYmFkbyIsInBsYW4iLCJsdWdhciIsInF1ZSIsImRvbmRlIiwidHVybm8iLCJTZWFyY2hRdWVSZXN1bHRzIiwiU2VhcmNoRG9uZGVSZXN1bHRzIiwic2VhcmNoUXVlIiwic2VhcmNoRG9uZGUiLCJvcHRpb24iLCJlc3RhYmxlY2ltaWVudG9zIiwicmVzdGFyRWRhZCIsInBhcnNlSW50Iiwic3VtYXJFZGFkIiwic2VsZWN0VWx0aW1vTml2ZWwiLCJpZE5pdmVsIiwiaSIsIngiLCJkb2N1bWVudCIsImdldEVsZW1lbnRzQnlDbGFzc05hbWUiLCJsZW5ndGgiLCJjbGFzc05hbWUiLCJpZCIsInNlbGVjdGVkIiwiZ2V0RWxlbWVudEJ5SWQiLCJzZWxlY3RfdHVybm8iLCJpZFR1cm5vIiwic2VsZWN0X29wdGlvbiIsImlkT3B0aW9uIiwic3R5bGUiLCJkaXNwbGF5IiwidmlzaWJpbGl0eSIsIm1pbkhlaWdodCIsIm9uU2VhcmNoQ2hhbmdlUXVlIiwic2VhcmNoIiwic2VhcmNoX3N0ciIsInZhbHVlIiwidHJpbSIsInNlYXJjaFF1ZUVzdHVkaWFyIiwidGhlbiIsInJlc3BvbnNlIiwiZGF0YSIsImhpZGVTZWFyY2hRdWVSZXN1bHRzIiwic2VsZWN0UXVlRXN0dWRpYXJJdGVtIiwiY3Vyc28iLCJub21icmUiLCJsaXN0QWxsUXVlRXN0dWRpYXIiLCJvblNlYXJjaENoYW5nZURvbmRlIiwic2VhcmNoRG9uZGVFc3R1ZGlhciIsImhpZGVTZWFyY2hEb25kZVJlc3VsdHMiLCJzZWxlY3REb25kZUVzdHVkaWFySXRlbSIsImxvY19kZXAiLCJlZGl0U2VhcmNoIiwicHJldmlvdXMiLCJuZXh0Iiwic2xpZGVIYXNDaGFuZ2VkIiwiaW5kZXgiLCJ1cGRhdGVGaWx0ZXJzIiwiZmlsdGVycyIsImdldEVzdGFibGVjaW1pZW50b3NCeUZpbHRlcnMiLCJjb25zb2xlIiwibG9nIiwibGFzdFNlYXJjaFJlc3BvbnNlRXN0YWJsZWNpbWllbnRvcyIsInVwZGF0ZU1hcFBpbnMiLCJsYXQiLCJsb24iLCIkb24iLCJnZW9sb2NhdGUiLCJwb3NPcHRpb25zIiwidGltZW91dCIsImVuYWJsZUhpZ2hBY2N1cmFjeSIsImdldEN1cnJlbnRQb3NpdGlvbiIsInBvc2l0aW9uIiwic2F2ZV9pbml0aWFsX3Bvc2l0aW9uIiwiZ28iLCJlcnIiLCJnb190b19mb3JtIiwiZ29fdG9fc2VhcmNoIiwiXyIsImxlYWZsZXREYXRhIiwiQ29uZmlnU2VydmljZSIsIlBpblNlcnZpY2UiLCIkaW50ZXJ2YWwiLCIkbG9jYXRpb24iLCJNYXBTZXJ2aWNlIiwiTW9kYWxTZXJ2aWNlIiwiJHRpbWVvdXQiLCJiYXNlVVJMIiwiQXBwTmFtZSIsIm9uZV92YWx1ZV9wb3B1cCIsIm15SW50ZXJ2YWxzIiwiQXJyYXkiLCJjaGVja05vTW9kYWxJc09wZW4iLCJtYXBTY29wZSIsImNyZWF0ZV9vbmxpbmVfbWFwIiwiZmlsdGVyc1VwZGF0ZWQiLCJsb2FkUGluc0xheWVyIiwibWFwIiwiZGVmYXVsdHMiLCJ0aWxlTGF5ZXIiLCJtaW5ab29tIiwibWF4Wm9vbSIsInpvb21Db250cm9sUG9zaXRpb24iLCJtYXJrZXJzIiwiZXZlbnRzIiwiZW5hYmxlIiwibG9naWMiLCJjZW50ZXIiLCJsbmciLCJ6b29tIiwibG9jYXRlIiwiY29vcmRzIiwibGF0aXR1ZGUiLCJsb25naXR1ZGUiLCJub3ciLCJtZXNzYWdlIiwiZm9jdXMiLCJkcmFnZ2FibGUiLCJoaWRlT2ZmU2NyZWVuUGlucyIsImdldE1hcCIsImZvckVhY2giLCJmZWF0dXJlIiwibWFya2VyIiwiTCIsImJpbmRQb3B1cCIsIm9wZW5Qb3B1cCIsImFkZFRvIiwibm9tYnJlX2NlbnRybyIsIm9uU2VhcmNoQ2hhbmdlIiwic2hvd01hcCIsInNob3dMaXN0IiwiZmFjdG9yeSIsIiRodHRwIiwiQXBpT2JqZWN0IiwiX2RhdGEiLCJleHRlbmQiLCJ0aGlzIiwiYXBpVVJMIiwic3RyIiwiZ2V0IiwicGFyYW1zIiwiaGFzaF9pZCIsIk1hdGgiLCJyYW5kb20iLCJmb3JtU2NvcGUiLCJmaWx0ZXJzT2JqZWN0IiwiY3JlYXRlRmlsdGVyUGFyYW1zRm9yR2V0UmVxdWVzdCIsInF1ZUVzdHVkaWFySWQiLCJxdWVFc3R1ZGlhck5vbWJyZSIsInF1ZUVzdHVkaWFyVGFnVW5vIiwidGFnIiwicXVlRXN0dWRpYXJUYWdEb3MiLCJkb25kZUVzdHVkaWFyRGVwYXJ0YW1lbnRvIiwiZGVwYXJ0YW1lbnRvIiwiZG9uZGVFc3R1ZGlhckxvY2FsaWRhZCIsImxvY2FsaWRhZCIsImRvbmRlRXN0dWRpYXJMYXQiLCJjb29yZGVuYWRhcyIsImRvbmRlRXN0dWRpYXJMb24iLCJ0aXBvIiwicGFyYW1ldGVycyIsIiRjb3Jkb3ZhRmlsZVRyYW5zZmVyIiwiVmFsaWRhdGlvblNlcnZpY2UiLCJsb2dfaW4iLCJ1c2VyIiwicGFzc3dvcmQiLCJib2R5IiwicG9zdCIsIndpdGhDcmVkZW50aWFscyIsImhlYWRlcnMiLCJDb250ZW50LVR5cGUiLCJzaWduX291dCIsImVtYWlsIiwicGFzc3dvcmRfc2lnbl9pbiIsImNyZWF0ZV91c2VyIiwidXNlck9iaiIsInBpY3R1cmVfdXJsIiwiaXNNb2JpbGVEZXZpY2UiLCJvcHRpb25zIiwiZmlsZUtleSIsInVzZXJuYW1lIiwiZ2VuZGVyIiwiaW50ZXJlc3RlZCIsInN0YXR1cyIsInNob3dfbG9jYXRpb24iLCJ0cnVzdEFsbEhvc3RzIiwidXBsb2FkIiwiZm9ybURhdGEiLCJGb3JtRGF0YSIsImFwcGVuZCIsInVuZGVmaW5lZCIsInRyYW5zZm9ybVJlcXVlc3QiLCJpZGVudGl0eSIsInBhc3N3b3JkX3JlY292ZXJ5IiwibG9naW5fZW1haWwiLCJwYXNzd29yZF9jaGFuZ2UiLCJvbGRQYXNzd29yZCIsIm5ld1Bhc3N3b3JkIiwiY29uZmlybVBhc3N3b3JkIiwiZWRpdF91c2VyIiwiQ29uZmlnT2JqIiwiaXNXZWJWaWV3IiwiJGNvcmRvdmFOZXR3b3JrIiwiaXNPbmxpbmUiLCJpc09mZmxpbmUiLCIkcSIsInNhdmVVc2VyIiwidXNlcl9uYW1lIiwidXNlcl9wYXNzd29yZCIsInVzZXJfcGljdHVyZV91cmwiLCJ1aWQiLCJfaWQiLCJuYW1lIiwiZ2V0VXNlciIsImRvYyIsIl9yZXYiLCJfZGIiLCJwdXQiLCJlcmFzZVVzZXIiLCJyZW1vdmUiLCJpbml0REIiLCJQb3VjaERCIiwic2F2ZVJlcG9ydCIsInJlcG9ydCIsImRhdGUiLCJEYXRlIiwibmV3X3JlcG9ydF9pZCIsImdldEZ1bGxZZWFyIiwiZ2V0TW9udGgiLCJnZXREYXRlIiwiZ2V0TWlsbGlzZWNvbmRzIiwidXBkYXRlUmVwb3J0IiwiZ2V0Q2F0ZWdvcmllcyIsInNhdmVDYXRlZ29yaWVzIiwiY2F0ZWdvcmllcyIsImdldFJlcG9ydCIsInJlcG9ydElkIiwiZ2V0QWxsUmVwb3J0cyIsImFsbERvY3MiLCJpbmNsdWRlX2RvY3MiLCJhdHRhY2htZW50cyIsInN0YXJ0a2V5IiwiZW5ka2V5IiwiZGVsZXRlUmVwb3J0IiwicmVwb3J0X2lkIiwiZGVsZXRlR2l2ZW5SZXBvcnQiLCJodHRwX3Jlc3BvbnNlX2lzX3N1Y2Nlc3NmdWwiLCJqc29uUmVzdWx0IiwiZXJyb3JDb250YWluZXJJZCIsImVycm9yRGl2IiwiU3RhdHVzIiwiaW5uZXJIVE1MIiwiTWVzc2FnZSIsImh0dHBfcmVzcG9uc2VfaXNfc3VjY2Vzc2Z1bF9hamF4IiwicmVzdWx0IiwiaHR0cF9yZXNwb25zZV9pc19zdWNjZXNzZnVsX3BvcHVwIiwiYWxlcnRQb3B1cCIsImFsZXJ0IiwidGl0bGUiLCJ0ZW1wbGF0ZSIsInJlcyIsImh0dHBfZGF0YV9yZXNwb25zZV9pc19zdWNjZXNzZnVsIiwiaHR0cF9kYXRhX3Jlc3BvbnNlX2lzX3N1Y2Nlc3NmdWxfYWpheCIsInNob3dfZXJyb3JfbWVzc2FnZSIsInNob3dfZXJyb3JfbWVzc2FnZV9wb3B1cCIsImNoZWNrX2ZpZWxkcyIsImZpZWxkcyIsImVycm9ycyIsImZpZWxkIiwidHlwZSIsInZhbGlkYXRlX25vdF9lbXB0eSIsInZhbGlkYXRlX2VtYWlsIiwidmFsaWRhdGVfaWRkb2NfdXkiLCJ2YWxpZGF0ZV90d29fd29yZHMiLCJ2YWxpZGF0ZV9lcXVhbHNUbyIsInNlY29uZFZhbHVlIiwiJGlvbmljTG9hZGluZyIsIkxPQURFUkFQSSIsInNob3dMb2FkaW5nIiwidGV4dCIsInNob3ciLCJoaWRlTG9hZGluZyIsImhpZGUiLCJ0b2dnbGVMb2FkaW5nV2l0aE1lc3NhZ2UiLCJzZWxmIiwiY29uZmlybVBvcHVwIiwiY29uZmlybSIsInNob3dBbGVydCIsIl90aXRsZSIsIl90ZW1wbGF0ZSIsImxvY2F0aW9uc09iaiIsImluaXRpYWxfbGF0IiwiaW5pdGlhbF9sbmciLCJsYXN0X3VzZXJfbGF0IiwibGFzdF91c2VyX2xuZyIsImNvdW5jaWxfbW9kYWwiLCJzZWxlY3RlZF9jb3VuY2lsIiwic2VsZWN0Q291bmNpbCIsImNvdW5jaWxOYW1lIiwic2F2ZV9sYXN0X3VzZXJfcG9zaXRpb24iLCJzYXZlZExvY2F0aW9ucyIsIiRjb21waWxlIiwicHJvajQiLCJkZWZzIiwibWFwU2VydmljZSIsImdvVG9QbGFjZSIsInNjb3BlIiwiX2dlb0pzb24iLCJjcnMiLCJwcm9wZXJ0aWVzIiwiZmVhdHVyZXMiLCJnZW9tZXRyeSIsImNvb3JkaW5hdGVzIiwiX2xhdGxuZyIsImxheWVyIiwiUHJvaiIsImdlb0pzb24iLCJwb2ludFRvTGF5ZXIiLCJsYXRsbmciLCJodG1sUG9wVXAiLCJjb21waWxlZCIsInNldFZpZXciLCJjZW50ZXJNYXBPbkNvb3JkcyIsIkxhdExuZyIsIm1vZGFsT0JKIiwiYWN0aXZlTW9kYWwiLCJQaW4iLCJwaW5zVVJMIiwiZ2V0QWxsIiwic2VuZFVzZXJMb2NhdGlvbiIsIl9hbGwiLCJjdXJyZW50IiwibGFzdFBpbnNSZXNwb25zZSIsImJ1aWxkIiwicHJvdG90eXBlIiwic2V0TGF0TG5nIiwic2hvd19hbGVydCIsImFsZXJ0X3RpdGxlIiwiYWxlcnRfbWVzc2FnZSIsImFza0Zvck9uZVZhbHVlUG9wVXAiLCJmaWVsZF9uYW1lIiwidmFsaWRhdGlvblR5cGUiLCJteVBvcHVwIiwic3ViVGl0bGUiLCJidXR0b25zIiwib25UYXAiLCJlIiwicHJldmVudERlZmF1bHQiLCJzZW1hcGhvcmVPYmoiLCJzZW1hcGhvcmVzIiwidGFrZUlmQXZhaWxhYmxlIiwic2VtYXBob3JlSWQiLCJtYWtlQXZhaWxhYmxlQWdhaW4iLCJBcGlJbUVuZHBvaW50IiwiQXBpRGF0YUVuZHBvaW50IiwicmVzdFByZWZmaXgiLCJsb2NhdGlvbkFQSSIsInNlYXJjaExvY2F0aW9uQnlTdHIiLCJfbG9jYXRpb24iLCJtZXRob2QiLCJzZWFyY2hFc3F1aW5hQnlTdHIiLCJjYWxsZSIsImVzcXVpbmEiLCJnZXRMb2NhdGlvbkdlb20iLCJnZXRQYXJhbVBhdGhCeVRpcG8iLCJwYXRoUGFyYW1zIiwiZ2V0TG9jYXRpb25HZW9tUE1CIiwiZXNxdWluYV9udW1lcm8iLCJfdGlwbyIsInJlc3RHZW9EYXRhU2VydmljZVBhdGgiLCJFU1FVSU5BIiwiRElSRUNDSU9OIiwiVXNlck9iaiIsInNhdmVfdXNlcl9kYXRhIiwiZXJhc2VfdXNlcl9kYXRhIiwiaWRlbnRpdHlfZG9jdW1lbnQiLCJwaG9uZSIsImdldF91c2VyX2RhdGEiLCJhZGRfcGhvdG8iLCJpc0xvZ2dlZCIsInZhbHVlcyIsInNwbGl0IiwiZmlsdGVyIiwidiIsInJlIiwidGVzdCIsInJlcGxhY2UiLCJkaWciLCJhIl0sIm1hcHBpbmdzIjoiQUFPQSxHQUFJQSxTQUNGQyxZQUFhQyxRQUFRQyxPQUFPLHlCQUM1QkMsU0FBVUYsUUFBUUMsT0FBTyxzQkFHM0JILFFBQU9LLElBQU1ILFFBQVFDLE9BQU8sVUFBVyxRQUFRLGVBQWUsbUJBQW1CLG9CQUFxQixxQkFBc0Isa0JBQW1CLGNBRTlJRyxTQUFTLGlCQUNSQyxJQUFLLGlDQUdORCxTQUFTLG1CQUNSQyxJQUFLLDZDQUlOQyxLQUFBLGlCQUFBLGFBQUEsbUJBQUksU0FBU0MsRUFBZ0JDLEVBQVlDLEdBQ3hDRCxFQUFXRSxRQUFVQyxPQUFPRCxRQUM1QkgsRUFBZUssTUFBTSxXQUdmRCxPQUFPRSxTQUFXRixPQUFPRSxRQUFRQyxRQUFRQyxXQUMzQ0YsUUFBUUMsUUFBUUMsU0FBU0MsMEJBQXlCLEdBQ2xESCxRQUFRQyxRQUFRQyxTQUFTRSxlQUFjLElBSXpDQyxNQUFNQyxTQUFTQyxjQUFlLEVBQzFCVCxPQUFPVSxXQUVUQSxVQUFVQyxvQkFLZkMsUUFBQSxpQkFBQSxxQkFBQSxtQkFBQSx1QkFBTyxTQUFTQyxFQUFnQkMsRUFBb0JDLEVBQWtCQyxHQUNyRUQsRUFBaUJFLGtCQUFpQixHQU9sQ0osRUFFREssTUFBTSxPQUNIQyxPQUFPLEVBQ1B6QixJQUFLLE9BQ0wwQixZQUFVLEVBQ1ZDLFlBQWEsc0JBQ2JDLFdBQVksa0JBR2ZKLE1BQU0sWUFDTEMsT0FBTyxFQUNQekIsSUFBSyxRQUNMNkIsT0FDRUMsYUFDRUgsWUFBYSxzQkFDYkMsV0FBYSxZQUVmRyxTQUNFSixZQUFhLHFCQUNiQyxXQUFhLG9CQUtsQkosTUFBTSxhQUNMQyxPQUFPLEVBQ1B6QixJQUFLLFNBQ0w2QixPQUNFQyxhQUNFSCxZQUFhLHVCQUNi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b0IsU0FBVTdPLEdBQzFCLEdBQVUsTUFBUEEsR0FBc0IsYUFBUEEsR0FBNkIsSUFBUEEsRUFBVSxDQUNoRCxHQUFJd1YsR0FBU3hWLEVBQU15VixNQUFNLEtBQUtDLE9BQU8sU0FBU0MsR0FBRyxNQUFXLEtBQUpBLEdBQ3hELE9BQUlILEdBQU94VyxPQUFTLEVBUXBCLE9BQU8sR0FJYjhQLGtCQUFtQixTQUFVOU8sRUFBTStPLEdBQ2pDLE1BQUcvTyxJQUFPK08sR0FPWkosZUFBZ0IsU0FBVTNPLEdBQ3RCLEdBQVUsTUFBUEEsR0FBc0IsYUFBUEEsR0FBNkIsSUFBUEEsRUFBVSxDQUNoRCxHQUFJNFYsR0FBSyx3SkFDVCxPQUFPQSxHQUFHQyxLQUFLN1YsR0FFZixPQUFPLEdBSWI0TyxrQkFBbUIsU0FBVTVPLEdBQzNCLEdBQVUsTUFBUEEsR0FBc0IsYUFBUEEsR0FBNkIsSUFBUEEsRUFBVSxDQUM5Q0EsRUFBUUEsRUFBTThWLFFBQVEsTUFBTyxHQUM3QixJQUFJQyxHQUFNL1YsRUFBTUEsRUFBTWhCLE9BQVMsR0FDM0JnWCxFQUFJLEVBQU9wWCxFQUFJLENBQ25CLElBQUdvQixFQUFNaEIsUUFBVSxFQUNqQixJQUFJSixFQUFJb0IsRUFBTWhCLE9BQVFKLEVBQUksRUFBR0EsSUFDM0JvQixFQUFRLElBQU1BLENBR2xCLEtBQUlwQixFQUFJLEVBQUdBLEVBQUksRUFBR0EsSUFDaEJvWCxHQUFNeFgsU0FBUyxVQUFVSSxJQUFNSixTQUFTd0IsRUFBTXBCLElBQU8sRUFFdkQsSUFBSThPLEVBTUosT0FKRUEsR0FEQ3NJLEVBQUUsS0FBTyxFQUNELEVBRUEsR0FBS0EsRUFBSSxHQUVqQkQsR0FBT3JJLEVBTVosT0FBTyIsImZpbGUiOiJhcHAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJb25pYyBTdGFydGVyIEFwcFxuXG4vLyBhbmd1bGFyLm1vZHVsZSBpcyBhIGdsb2JhbCBwbGFjZSBmb3IgY3JlYXRpbmcsIHJlZ2lzdGVyaW5nIGFuZCByZXRyaWV2aW5nIEFuZ3VsYXIgbW9kdWxlc1xuLy8gJ3BtYl9pbScgaXMgdGhlIG5hbWUgb2YgdGhpcyBhbmd1bGFyIG1vZHVsZSBleGFtcGxlIChhbHNvIHNldCBpbiBhIDxib2R5PiBhdHRyaWJ1dGUgaW4gaW5kZXguaHRtbClcbi8vIHRoZSAybmQgcGFyYW1ldGVyIGlzIGFuIGFycmF5IG9mICdyZXF1aXJlcydcbi8vICdzdGFydGVyLnNlcnZpY2VzJyBpcyBmb3VuZCBpbiBzZXJ2aWNlcy5qc1xuLy8gJ3N0YXJ0ZXIuY29udHJvbGxlcnMnIGlzIGZvdW5kIGluIGNvbnRyb2xsZXJzLmpzXG52YXIgcG1iX2ltID0ge1xuICBjb250cm9sbGVyczogYW5ndWxhci5tb2R1bGUoJ3BtYl9pbS5jb250cm9sbGVycycsIFtdKSxcbiAgc2VydmljZXM6IGFuZ3VsYXIubW9kdWxlKCdwbWJfaW0uc2VydmljZXMnLCBbXSlcbn07XG5cbnBtYl9pbS5hcHAgPSBhbmd1bGFyLm1vZHVsZSgncG1iX2ltJywgWydpb25pYycsJ2lvbmljLndpemFyZCcsJ2lvbi1hdXRvY29tcGxldGUnLCdsZWFmbGV0LWRpcmVjdGl2ZScsICdwbWJfaW0uY29udHJvbGxlcnMnLCAncG1iX2ltLnNlcnZpY2VzJywgJ25nQ29yZG92YSddKVxuXG4uY29uc3RhbnQoJ0FwaUltRW5kcG9pbnQnLCB7XG4gIHVybDogJ2h0dHA6Ly93d3cubW9udGV2aWRlby5ndWIudXknXG59KVxuXG4uY29uc3RhbnQoJ0FwaURhdGFFbmRwb2ludCcsIHtcbiAgdXJsOiAnaHR0cDovL2JhY2tlbmQuZWR1Y2FjaW9uLnRob3IuZGF0YXV5Lm9yZydcbn0pXG5cblxuLnJ1bihmdW5jdGlvbigkaW9uaWNQbGF0Zm9ybSwgJHJvb3RTY29wZSwgJGNvcmRvdmFLZXlib2FyZCkge1xuICAkcm9vdFNjb3BlLlZFUlNJT04gPSB3aW5kb3cuVkVSU0lPTjtcbiAgJGlvbmljUGxhdGZvcm0ucmVhZHkoZnVuY3Rpb24oKSB7XG4gICAgLy8gSGlkZSB0aGUgYWNjZXNzb3J5IGJhciBieSBkZWZhdWx0IChyZW1vdmUgdGhpcyB0byBzaG93IHRoZSBhY2Nlc3NvcnkgYmFyIGFib3ZlIHRoZSBrZXlib2FyZFxuICAgIC8vIGZvciBmb3JtIGlucHV0cylcbiAgICBpZiAod2luZG93LmNvcmRvdmEgJiYgd2luZG93LmNvcmRvdmEucGx1Z2lucy5LZXlib2FyZCkge1xuICAgICAgY29yZG92YS5wbHVnaW5zLktleWJvYXJkLmhpZGVLZXlib2FyZEFjY2Vzc29yeUJhcihmYWxzZSk7XG4gICAgICBjb3Jkb3ZhLnBsdWdpbnMuS2V5Ym9hcmQuZGlzYWJsZVNjcm9sbChmYWxzZSk7XG4gICAgfVxuICAgIC8vJGNvcmRvdmFLZXlib2FyZC5oaWRlQWNjZXNzb3J5QmFyKGZhbHNlKVxuICAgIC8vJGNvcmRvdmFLZXlib2FyZC5kaXNhYmxlU2Nyb2xsKGZhbHNlKVxuICAgIGlvbmljLlBsYXRmb3JtLmlzRnVsbFNjcmVlbiA9IHRydWU7XG4gICAgaWYgKHdpbmRvdy5TdGF0dXNCYXIpIHtcbiAgICAgIC8vIG9yZy5hcGFjaGUuY29yZG92YS5zdGF0dXNiYXIgcmVxdWlyZWRcbiAgICAgIFN0YXR1c0Jhci5zdHlsZURlZmF1bHQoKTtcbiAgICB9XG4gIH0pO1xufSlcblxuLmNvbmZpZyhmdW5jdGlvbigkc3RhdGVQcm92aWRlciwgJHVybFJvdXRlclByb3ZpZGVyLCAkY29tcGlsZVByb3ZpZGVyLCAkaW9uaWNDb25maWdQcm92aWRlcikge1xuICAkY29tcGlsZVByb3ZpZGVyLmRlYnVnSW5mb0VuYWJsZWQoZmFsc2UpO1xuICAvLyRpb25pY0NvbmZpZ1Byb3ZpZGVyLnNjcm9sbGluZy5qc1Njcm9sbGluZyh0cnVlKTtcblxuICAvLyBJb25pYyB1c2VzIEFuZ3VsYXJVSSBSb3V0ZXIgd2hpY2ggdXNlcyB0aGUgY29uY2VwdCBvZiBzdGF0ZXNcbiAgLy8gTGVhcm4gbW9yZSBoZXJlOiBodHRwczovL2dpdGh1Yi5jb20vYW5ndWxhci11aS91aS1yb3V0ZXJcbiAgLy8gU2V0IHVwIHRoZSB2YXJpb3VzIHN0YXRlcyB3aGljaCB0aGUgYXBwIGNhbiBiZSBpbi5cbiAgLy8gRWFjaCBzdGF0ZSdzIGNvbnRyb2xsZXIgY2FuIGJlIGZvdW5kIGluIGNvbnRyb2xsZXJzLmpzXG4gICRzdGF0ZVByb3ZpZGVyXG5cbi5zdGF0ZSgnYXBwJywge1xuICAgIGNhY2hlOiBmYWxzZSxcbiAgICB1cmw6IFwiL2FwcFwiLFxuICAgIGFic3RyYWN0OiB0cnVlLFxuICAgIHRlbXBsYXRlVXJsOiBcInRlbXBsYXRlcy9tZW51Lmh0bWxcIixcbiAgICBjb250cm9sbGVyOiAnQWJzQ29udHJvbGxlcidcbiAgfSlcblxuLnN0YXRlKCdhcHAuZm9ybScsIHtcbiAgY2FjaGU6IGZhbHNlLFxuICB1cmw6IFwiL2Zvcm1cIixcbiAgdmlld3M6IHtcbiAgICAnbWVudUNvbnRlbnQnIDp7XG4gICAgICB0ZW1wbGF0ZVVybDogXCJ0ZW1wbGF0ZXMvZm9ybS5odG1sXCIsXG4gICAgICBjb250cm9sbGVyIDogXCJGb3JtQ3RybFwiXG4gICAgfSxcbiAgICAnbWFwVmlldycgOntcbiAgICAgIHRlbXBsYXRlVXJsOiBcInRlbXBsYXRlcy9tYXAuaHRtbFwiLFxuICAgICAgY29udHJvbGxlciA6IFwiTWFwQ29udHJvbGxlclwiXG4gICAgfVxuICB9XG59KVxuXG4uc3RhdGUoJ2FwcC5pbnRybycsIHtcbiAgY2FjaGU6IGZhbHNlLFxuICB1cmw6IFwiL2ludHJvXCIsXG4gIHZpZXdzOiB7XG4gICAgJ21lbnVDb250ZW50JyA6e1xuICAgICAgdGVtcGxhdGVVcmw6IFwidGVtcGxhdGVzL2ludHJvLmh0bWxcIixcbiAgICAgIGNvbnRyb2xsZXIgOiBcIkludHJvQ3RybFwiXG4gICAgfVxuICB9XG59KVxuXG4uc3RhdGUoJ2FwcC5zZWFyY2gnLCB7XG4gIGNhY2hlOiBmYWxzZSxcbiAgdXJsOiBcIi9zZWFyY2hcIixcbiAgdmlld3M6IHtcbiAgICAnbWVudUNvbnRlbnQnIDp7XG4gICAgICB0ZW1wbGF0ZVVybDogXCJ0ZW1wbGF0ZXMvc2VhcmNoLmh0bWxcIixcbiAgICAgIGNvbnRyb2xsZXIgOiBcIlNlYXJjaEN0cmxcIlxuICAgIH0sXG4gICAgJ21hcFZpZXcnIDp7XG4gICAgICB0ZW1wbGF0ZVVybDogXCJ0ZW1wbGF0ZXMvbWFwLmh0bWxcIixcbiAgICAgIGNvbnRyb2xsZXIgOiBcIk1hcENvbnRyb2xsZXJcIlxuICAgIH1cbiAgfVxufSlcblxuLy8gaWYgbm9uZSBvZiB0aGUgYWJvdmUgc3RhdGVzIGFyZSBtYXRjaGVkLCB1c2UgdGhpcyBhcyB0aGUgZmFsbGJhY2tcbiR1cmxSb3V0ZXJQcm92aWRlci5vdGhlcndpc2UoJy9hcHAvaW50cm8nKTtcblxufSk7XG4iLCJwbWJfaW0uY29udHJvbGxlcnMuY29udHJvbGxlcignQWJzQ29udHJvbGxlcicsXG5bJyRzY29wZScsXG5mdW5jdGlvbigkc2NvcGUpIHtcblxufV0pO1xuIiwicG1iX2ltLmNvbnRyb2xsZXJzLmNvbnRyb2xsZXIoJ0Zvcm1DdHJsJywgWyckc2NvcGUnLCAnJHN0YXRlJyxcbiAgJyRjb3Jkb3ZhR2VvbG9jYXRpb24nLFxuICAnJHN0YXRlUGFyYW1zJyxcbiAgJyRpb25pY1BsYXRmb3JtJyxcbiAgJyRpb25pY1BvcHVwJyxcbiAgJ0xvY2F0aW9uc1NlcnZpY2UnLFxuICAnQXBpU2VydmljZScsXG4gICdEQlNlcnZpY2UnLFxuICAnJGlvbmljU2xpZGVCb3hEZWxlZ2F0ZScsXG4gICckaW9uaWNTY3JvbGxEZWxlZ2F0ZScsXG4gIGZ1bmN0aW9uKCRzY29wZSwgJHN0YXRlLCAkY29yZG92YUdlb2xvY2F0aW9uLCAkc3RhdGVQYXJhbXMsICRpb25pY1BsYXRmb3JtLCAkaW9uaWNQb3B1cCwgTG9jYXRpb25zU2VydmljZSwgQXBpU2VydmljZSwgREJTZXJ2aWNlLCAkaW9uaWNTbGlkZUJveERlbGVnYXRlLFxuICAkaW9uaWNTY3JvbGxEZWxlZ2F0ZSkge1xuXG4gICAgJHNjb3BlLmZvcm0gPSB7fTtcbiAgICAkc2NvcGUuZm9ybS5lZGFkID0gMTY7XG4gICAgJHNjb3BlLmZvcm0udWx0aW1vX25pdmVsX2Fwcm9iYWRvID0gXCJwcmltYXJpYVwiO1xuICAgICRzY29wZS5mb3JtLnVsdGltb19hbmlvX2Fwcm9iYWRvID0gXCJcIjtcbiAgICAkc2NvcGUuZm9ybS5wbGFuID0gXCJcIjtcbiAgICAkc2NvcGUuZm9ybS5sdWdhciA9IFwiXCI7XG4gICAgJHNjb3BlLmZvcm0ucXVlID0gXCJcIjtcbiAgICAkc2NvcGUuZm9ybS5kb25kZSA9IFwiXCI7XG4gICAgJHNjb3BlLmZvcm0udHVybm8gPSBcIm1hdHV0aW5vXCI7XG4gICAgJHNjb3BlLmZvcm0uU2VhcmNoUXVlUmVzdWx0cyA9IHt9O1xuICAgICRzY29wZS5mb3JtLlNlYXJjaERvbmRlUmVzdWx0cyA9IHt9O1xuICAgICRzY29wZS5mb3JtLnNlYXJjaFF1ZSA9IFwiXCI7XG4gICAgJHNjb3BlLmZvcm0uc2VhcmNoRG9uZGUgPSBcIlwiO1xuICAgICRzY29wZS5mb3JtLm9wdGlvbiA9IFwibGlzdFwiO1xuICAgICRzY29wZS5lc3RhYmxlY2ltaWVudG9zID0gbnVsbDtcblxuICAgICRzY29wZS5yZXN0YXJFZGFkID0gZnVuY3Rpb24oKXtcbiAgICAgIGlmKHBhcnNlSW50KCRzY29wZS5mb3JtLmVkYWQpID4gNCl7XG4gICAgICAgICRzY29wZS5mb3JtLmVkYWQgPSBwYXJzZUludCgkc2NvcGUuZm9ybS5lZGFkKSAtIDE7XG4gICAgICB9XG4gICAgfTtcblxuICAgICRzY29wZS5zdW1hckVkYWQgPSBmdW5jdGlvbigpe1xuICAgICAgJHNjb3BlLmZvcm0uZWRhZCA9IHBhcnNlSW50KCRzY29wZS5mb3JtLmVkYWQpICsgMTtcbiAgICB9O1xuXG4gICAgJHNjb3BlLnNlbGVjdFVsdGltb05pdmVsID0gZnVuY3Rpb24oaWROaXZlbCl7XG4gICAgICB2YXIgeCA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJuaXZlbFwiKTtcbiAgICAgIHZhciBpO1xuICAgICAgZm9yIChpID0gMDsgaSA8IHgubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICB4W2ldLmNsYXNzTmFtZSA9IFwibml2ZWxfXCIreFtpXS5pZCArXCIgbml2ZWwgaGlkZGVuXCI7XG4gICAgICB9XG4gICAgICB2YXIgc2VsZWN0ZWQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChpZE5pdmVsKTtcbiAgICAgIHNlbGVjdGVkLmNsYXNzTmFtZSA9IFwibml2ZWxfXCIrc2VsZWN0ZWQuaWQgK1wiIG5pdmVsXCI7XG4gICAgICAkc2NvcGUuZm9ybS51bHRpbW9fbml2ZWxfYXByb2JhZG8gPSBpZE5pdmVsO1xuICAgIH1cblxuICAgICRzY29wZS5zZWxlY3RfdHVybm8gPSBmdW5jdGlvbihpZFR1cm5vKXtcbiAgICAgIHZhciB4ID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcInR1cm5vc1wiKTtcbiAgICAgIHZhciBpO1xuICAgICAgZm9yIChpID0gMDsgaSA8IHgubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICB4W2ldLmNsYXNzTmFtZSA9IFwidHVybm9zIHR1cm5vX1wiKyB4W2ldLmlkICtcIl9vZmZcIjtcbiAgICAgIH1cbiAgICAgIHZhciBzZWxlY3RlZCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlkVHVybm8pO1xuICAgICAgc2VsZWN0ZWQuY2xhc3NOYW1lID0gXCJ0dXJub3MgdHVybm9fXCIrIGlkVHVybm87XG4gICAgICAkc2NvcGUuZm9ybS50dXJubyA9IGlkVHVybm87XG4gICAgfVxuXG4gICAgJHNjb3BlLnNlbGVjdF9vcHRpb24gPSBmdW5jdGlvbihpZE9wdGlvbil7XG4gICAgICB2YXIgeCA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJvcHRpb25zXCIpO1xuICAgICAgdmFyIGk7XG4gICAgICBmb3IgKGkgPSAwOyBpIDwgeC5sZW5ndGg7IGkrKykge1xuICAgICAgICAgIHhbaV0uY2xhc3NOYW1lID0gXCJvcHRpb25zIG9wdGlvbl9cIisgeFtpXS5pZCArXCJfb2ZmXCI7XG4gICAgICB9XG4gICAgICB2YXIgc2VsZWN0ZWQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChpZE9wdGlvbik7XG4gICAgICBzZWxlY3RlZC5jbGFzc05hbWUgPSBcIm9wdGlvbnMgb3B0aW9uX1wiKyBpZE9wdGlvbjtcbiAgICAgICRzY29wZS5mb3JtLm9wdGlvbiA9IGlkT3B0aW9uO1xuICAgICAgaWYoaWRPcHRpb249PVwibWFwXCIpe1xuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1hcF93cmFwcGVyXCIpLnN0eWxlLmRpc3BsYXk9XCJibG9ja1wiO1xuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1hcF9jb250YWluZXJcIikuc3R5bGUuZGlzcGxheT1cImJsb2NrXCI7XG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWFwX2NvbnRhaW5lclwiKS5zdHlsZS52aXNpYmlsaXR5PVwidmlzaWJsZVwiO1xuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImxpc3RfY29udGFpbmVyXCIpLnN0eWxlLmRpc3BsYXk9XCJub25lXCI7XG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZm9ybV9jb250YWluZXJcIikuc3R5bGUubWluSGVpZ2h0PVwiMzcwcHhcIjtcbiAgICAgIH1cbiAgICAgIGlmKGlkT3B0aW9uPT1cImxpc3RcIil7XG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWFwX3dyYXBwZXJcIikuc3R5bGUuZGlzcGxheT1cIm5vbmVcIjtcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJsaXN0X2NvbnRhaW5lclwiKS5zdHlsZS5kaXNwbGF5PVwiYmxvY2tcIjtcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtYXBfY29udGFpbmVyXCIpLnN0eWxlLnZpc2liaWxpdHk9XCJoaWRkZW5cIjtcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtYXBfY29udGFpbmVyXCIpLnN0eWxlLmRpc3BsYXk9XCJub25lXCI7XG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZm9ybV9jb250YWluZXJcIikuc3R5bGUubWluSGVpZ2h0PVwiNjQwcHhcIjtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAkc2NvcGUub25TZWFyY2hDaGFuZ2VRdWUgPSBmdW5jdGlvbigpe1xuICAgICAgdmFyIHNlYXJjaCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicXVlX2VzdHVkaWFyXCIpO1xuICAgICAgdmFyIHNlYXJjaF9zdHIgPSBzZWFyY2gudmFsdWUudHJpbSgpO1xuICAgICAgaWYoc2VhcmNoX3N0ci5sZW5ndGg+PTMpe1xuICAgICAgICBBcGlTZXJ2aWNlLnNlYXJjaFF1ZUVzdHVkaWFyKHNlYXJjaF9zdHIpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG4gICAgICAgICAgLy9jb25zb2xlLmxvZyhyZXNwb25zZSk7XG4gICAgICAgICAgJHNjb3BlLmZvcm0uU2VhcmNoUXVlUmVzdWx0cyA9IHJlc3BvbnNlLmRhdGE7XG4gICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJTZWFyY2hRdWVSZXN1bHRzXCIpLnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XG4gICAgICAgIH0pO1xuICAgICAgfWVsc2V7XG4gICAgICAgICRzY29wZS5oaWRlU2VhcmNoUXVlUmVzdWx0cygpO1xuICAgICAgfVxuICAgIH1cblxuICAgICRzY29wZS5oaWRlU2VhcmNoUXVlUmVzdWx0cyA9IGZ1bmN0aW9uKCl7XG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIlNlYXJjaFF1ZVJlc3VsdHNcIikuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgIH1cblxuICAgICRzY29wZS5zZWxlY3RRdWVFc3R1ZGlhckl0ZW0gPSBmdW5jdGlvbihjdXJzbyl7XG4gICAgICAkc2NvcGUuZm9ybS5xdWUgPSBjdXJzbztcbiAgICAgICRzY29wZS5oaWRlU2VhcmNoUXVlUmVzdWx0cygpO1xuICAgICAgJHNjb3BlLmZvcm0uc2VhcmNoUXVlID0gY3Vyc28ubm9tYnJlO1xuICAgIH1cblxuICAgICRzY29wZS5saXN0QWxsUXVlRXN0dWRpYXIgPSBmdW5jdGlvbigpe1xuICAgICAgdmFyIHNlYXJjaF9zdHIgPSBcImFwaS1nZXQtYWxsXCI7XG4gICAgICAgIEFwaVNlcnZpY2Uuc2VhcmNoUXVlRXN0dWRpYXIoc2VhcmNoX3N0cikudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHtcbiAgICAgICAgICAvL2NvbnNvbGUubG9nKHJlc3BvbnNlKTtcbiAgICAgICAgICAkc2NvcGUuZm9ybS5TZWFyY2hRdWVSZXN1bHRzID0gcmVzcG9uc2UuZGF0YTtcbiAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIlNlYXJjaFF1ZVJlc3VsdHNcIikuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgJHNjb3BlLm9uU2VhcmNoQ2hhbmdlRG9uZGUgPSBmdW5jdGlvbigpe1xuICAgICAgdmFyIHNlYXJjaCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZG9uZGVfZXN0dWRpYXJcIik7XG4gICAgICB2YXIgc2VhcmNoX3N0ciA9IHNlYXJjaC52YWx1ZS50cmltKCk7XG4gICAgICBpZihzZWFyY2hfc3RyLmxlbmd0aD49Myl7XG4gICAgICAgIEFwaVNlcnZpY2Uuc2VhcmNoRG9uZGVFc3R1ZGlhcihzZWFyY2hfc3RyKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkge1xuICAgICAgICAgIC8vY29uc29sZS5sb2cocmVzcG9uc2UpO1xuICAgICAgICAgICRzY29wZS5mb3JtLlNlYXJjaERvbmRlUmVzdWx0cyA9IHJlc3BvbnNlLmRhdGE7XG4gICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJTZWFyY2hEb25kZVJlc3VsdHNcIikuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcbiAgICAgICAgfSk7XG4gICAgICB9ZWxzZXtcbiAgICAgICAgJHNjb3BlLmhpZGVTZWFyY2hEb25kZVJlc3VsdHMoKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAkc2NvcGUuaGlkZVNlYXJjaERvbmRlUmVzdWx0cyA9IGZ1bmN0aW9uKCl7XG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIlNlYXJjaERvbmRlUmVzdWx0c1wiKS5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgfVxuXG4gICAgJHNjb3BlLnNlbGVjdERvbmRlRXN0dWRpYXJJdGVtID0gZnVuY3Rpb24oZG9uZGUpe1xuICAgICAgJHNjb3BlLmZvcm0uZG9uZGUgPSBkb25kZTtcbiAgICAgICRzY29wZS5oaWRlU2VhcmNoRG9uZGVSZXN1bHRzKCk7XG4gICAgICAkc2NvcGUuZm9ybS5zZWFyY2hEb25kZSA9IGRvbmRlLmxvY19kZXA7XG4gICAgfVxuXG4gICAgJHNjb3BlLmVkaXRTZWFyY2ggPSBmdW5jdGlvbigpe1xuICAgICAgJGlvbmljU2xpZGVCb3hEZWxlZ2F0ZS5wcmV2aW91cygpO1xuICAgICAgJGlvbmljU2xpZGVCb3hEZWxlZ2F0ZS5wcmV2aW91cygpO1xuICAgIH1cblxuXHQgICRzY29wZS5uZXh0ID0gZnVuY3Rpb24oKSB7XG5cdCAgICAkaW9uaWNTbGlkZUJveERlbGVnYXRlLm5leHQoKTtcblx0ICB9O1xuXG5cdCAgJHNjb3BlLnByZXZpb3VzID0gZnVuY3Rpb24oKSB7XG5cdCAgICAkaW9uaWNTbGlkZUJveERlbGVnYXRlLnByZXZpb3VzKCk7XG5cdCAgfTtcblxuICAgICRzY29wZS5zbGlkZUhhc0NoYW5nZWQgPSBmdW5jdGlvbihpbmRleCl7XG4gICAgICAkc2NvcGUuc2VsZWN0X29wdGlvbihcImxpc3RcIik7XG4gICAgICBpZihpbmRleD09Mil7XG4gICAgICAgIC8vaW5kZXggMiBlcyBlbCBzbGlkZSBxdWUgdGllbmUgZWwgYm90w7NuIGRlbCBtYXBhIHkgZGUgZWwgbGlzdGFkb1xuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1hcF9jb250YWluZXJcIikuc3R5bGUuZGlzcGxheT1cIm5vbmVcIjtcbiAgICAgICAgQXBpU2VydmljZS51cGRhdGVGaWx0ZXJzKCRzY29wZS5mb3JtKTtcbiAgICAgICAgaWYoQXBpU2VydmljZS5maWx0ZXJzIT1udWxsKXtcbiAgICAgICAgICAgIEFwaVNlcnZpY2UuZ2V0RXN0YWJsZWNpbWllbnRvc0J5RmlsdGVycygpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG4gICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlKTtcbiAgICAgICAgICAgICAgQXBpU2VydmljZS5sYXN0U2VhcmNoUmVzcG9uc2VFc3RhYmxlY2ltaWVudG9zID0gcmVzcG9uc2U7XG4gICAgICAgICAgICAgIC8vRUwgU0VSVklDSU8gREUgTEEgQVBJIEFDVFVBTElaQSBBTCBDT05UUk9MQURPUiBERUwgTUFQQVxuICAgICAgICAgICAgICAkc2NvcGUuZXN0YWJsZWNpbWllbnRvcyA9IHJlc3BvbnNlO1xuICAgICAgICAgICAgICBBcGlTZXJ2aWNlLnVwZGF0ZU1hcFBpbnMoJHNjb3BlLmVzdGFibGVjaW1pZW50b3MpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBpZigkc2NvcGUuZXN0YWJsZWNpbWllbnRvcz09bnVsbCl7XG4gICAgICAgICAgICAgIC8vRVNUTyBTRSBQUkVDQVJHQSBQQVJBIExBIFJFVU5JT04gQ09OIFJPTUFOTyBFTiBDQVNPIERFIFFVRSBOTyBFU1RFIExBIEFQSSBRVUUgUkVDSUJFIExPUyBGSUxUUk9TIFkgREVWVUVMVkUgTE9TIEVTVEFCTEVDSU1JRU5UT1NcbiAgICAgICAgICAgICAgICRzY29wZS5lc3RhYmxlY2ltaWVudG9zID0gW1xuICAgICAgICAgICAgICAgICB7bm9tYnJlOiBcIkxpY2VvIE7CuiAxXCIsIGlkOiAxMjE0LCBsYXQ6IC0zNC45MDYzNDYsIGxvbjogLTU2LjE3MjA2NSB9LFxuICAgICAgICAgICAgICAgICB7bm9tYnJlOiBcIkxpY2VvIE7CuiAyXCIsIGlkOiAyNDM0LCBsYXQ6IC0zNC45MDI3NTQsIGxvbjogLTU2LjE2NDEyNyB9LFxuICAgICAgICAgICAgICAgICB7bm9tYnJlOiBcIkxpY2VvIE7CuiA3XCIsIGlkOiA0MzI0fSxcbiAgICAgICAgICAgICAgICAge25vbWJyZTogXCJMaWNlbyBKdWFuIFpvcnJpbGxhXCIsIGlkOiA1MzQ1fVxuICAgICAgICAgICAgICAgXTtcbiAgICAgICAgICAgICAgIEFwaVNlcnZpY2UudXBkYXRlTWFwUGlucygkc2NvcGUuZXN0YWJsZWNpbWllbnRvcyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cblx0ICAvKiRzY29wZS5nb190b19tYXAgPSBmdW5jdGlvbigpe1xuXHQgICAgJHN0YXRlLmdvKFwiYXBwLm1hcFwiKTtcblx0ICB9Ki9cblxuICB9XG5dKTtcbiIsInBtYl9pbS5jb250cm9sbGVycy5jb250cm9sbGVyKCdJbnRyb0N0cmwnLCBbJyRzY29wZScsICckc3RhdGUnLFxuICAnJGNvcmRvdmFHZW9sb2NhdGlvbicsXG4gICckc3RhdGVQYXJhbXMnLFxuICAnJGlvbmljUGxhdGZvcm0nLFxuICAnJGlvbmljUG9wdXAnLFxuICAnTG9jYXRpb25zU2VydmljZScsXG4gIGZ1bmN0aW9uKCRzY29wZSwgJHN0YXRlLCAkY29yZG92YUdlb2xvY2F0aW9uLCAkc3RhdGVQYXJhbXMsICRpb25pY1BsYXRmb3JtLCAkaW9uaWNQb3B1cCwgTG9jYXRpb25zU2VydmljZSkge1xuXG4gICAgJHNjb3BlLiRvbihcIiRpb25pY1ZpZXcuYmVmb3JlRW50ZXJcIiwgZnVuY3Rpb24oKSB7XG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImZvcm1fY29udGFpbmVyXCIpLnN0eWxlLm1pbkhlaWdodCA9IFwiNjQwcHhcIjtcbiAgICB9KTtcblxuICAgICRzY29wZS4kb24oXCIkaW9uaWNWaWV3LmFmdGVyRW50ZXJcIiwgZnVuY3Rpb24oKSB7XG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1hcF93cmFwcGVyXCIpLnN0eWxlLmRpc3BsYXk9XCJub25lXCI7XG4gICAgfSk7XG5cblxuICAkc2NvcGUuZ2VvbG9jYXRlID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgIHZhciBwb3NPcHRpb25zID0ge3RpbWVvdXQ6IDM1MDAsIGVuYWJsZUhpZ2hBY2N1cmFjeTogdHJ1ZX07XG4gICAgICAkY29yZG92YUdlb2xvY2F0aW9uXG4gICAgICAgIC5nZXRDdXJyZW50UG9zaXRpb24ocG9zT3B0aW9ucylcbiAgICAgICAgLnRoZW4oZnVuY3Rpb24ocG9zaXRpb24pIHtcbiAgICAgICAgICBMb2NhdGlvbnNTZXJ2aWNlLnNhdmVfaW5pdGlhbF9wb3NpdGlvbihwb3NpdGlvbik7XG4gICAgICAgICAgJHN0YXRlLmdvKFwiYXBwLmZvcm1cIik7XG4gICAgICAgIH0sIGZ1bmN0aW9uKGVycikge1xuICAgICAgICAgICRzdGF0ZS5nbyhcImFwcC5mb3JtXCIpO1xuICAgICAgICB9KTtcbiAgICB9O1xuXG4gICRzY29wZS5nb190b19mb3JtID0gZnVuY3Rpb24oKXtcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1hcF93cmFwcGVyXCIpLnN0eWxlLmRpc3BsYXk9XCJibG9ja1wiO1xuICAgICRzdGF0ZS5nbyhcImFwcC5mb3JtXCIpO1xuICB9XG5cbiAgJHNjb3BlLmdvX3RvX3NlYXJjaCA9IGZ1bmN0aW9uKCl7XG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtYXBfd3JhcHBlclwiKS5zdHlsZS5kaXNwbGF5PVwiYmxvY2tcIjtcbiAgICAkc3RhdGUuZ28oXCJhcHAuc2VhcmNoXCIpO1xuICB9XG5cbiAgIC8qJHNjb3BlLiRvbignJGlvbmljVmlldy5lbnRlcicsIGZ1bmN0aW9uKCl7XG4gICB9KTsqL1xuXG5cblxuICB9XG5dKTtcbiIsInBtYl9pbS5jb250cm9sbGVycy5jb250cm9sbGVyKCdNYXBDb250cm9sbGVyJywgW1xuICAnJHNjb3BlJyxcbiAgJ18nLFxuICAnJGNvcmRvdmFHZW9sb2NhdGlvbicsXG4gICdsZWFmbGV0RGF0YScsXG4gICdDb25maWdTZXJ2aWNlJyxcbiAgJ1BpblNlcnZpY2UnLFxuICAnJGludGVydmFsJyxcbiAgJyRsb2NhdGlvbicsXG4gICdNYXBTZXJ2aWNlJyxcbiAgJ01vZGFsU2VydmljZScsXG4gICdBcGlTZXJ2aWNlJyxcbiAgJyR0aW1lb3V0JyxcbiAgZnVuY3Rpb24oXG4gICAgJHNjb3BlLFxuICAgIF8sXG4gICAgJGNvcmRvdmFHZW9sb2NhdGlvbixcbiAgICBsZWFmbGV0RGF0YSxcbiAgICBDb25maWdTZXJ2aWNlLFxuICAgIFBpblNlcnZpY2UsXG4gICAgJGludGVydmFsLFxuICAgICRsb2NhdGlvbixcbiAgICBNYXBTZXJ2aWNlLFxuICAgIE1vZGFsU2VydmljZSxcbiAgICBBcGlTZXJ2aWNlLFxuICAgICR0aW1lb3V0XG4gICkge1xuXG4gICAgLyoqXG4gICAgICogT25jZSBzdGF0ZSBsb2FkZWQsIGdldCBwdXQgbWFwIG9uIHNjb3BlLlxuICAgICAqL1xuICAgIC8qJHNjb3BlLm9ubGluZV91c2VyX2dlbyA9IHt9O1xuICAgICRzY29wZS5vbmxpbmVfdXNlcl9nZW9fYXJyYXkgPSBuZXcgQXJyYXkoKTsqL1xuICAgICRzY29wZS5iYXNlVVJMID0gQ29uZmlnU2VydmljZS5iYXNlVVJMO1xuICAgICRzY29wZS5BcHBOYW1lID0gQ29uZmlnU2VydmljZS5BcHBOYW1lO1xuICAgICRzY29wZS5vbmVfdmFsdWVfcG9wdXAgPSBudWxsO1xuICAgICRzY29wZS5teUludGVydmFscyA9IG5ldyBBcnJheSgpO1xuXG4gICAgJHNjb3BlLiRvbihcIiRpb25pY1ZpZXcuYmVmb3JlRW50ZXJcIiwgZnVuY3Rpb24oKSB7XG4gICAgICBNb2RhbFNlcnZpY2UuY2hlY2tOb01vZGFsSXNPcGVuKCk7XG4gICAgICAvL0RCU2VydmljZS5pbml0REIoKTtcbiAgICAgIEFwaVNlcnZpY2UubWFwU2NvcGUgPSAkc2NvcGU7XG4gICAgICAkc2NvcGUuY3JlYXRlX29ubGluZV9tYXAoKTtcbiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic3Bpbm5lclwiKS5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInBpbnNwaW5uZXJcIikuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgIH0pO1xuXG4gICAgLyokc2NvcGUuJG9uKFwiJGlvbmljVmlldy5hZnRlckVudGVyXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtYXBfd3JhcHBlclwiKS5zdHlsZS5kaXNwbGF5PVwibm9uZVwiO1xuICAgIH0pOyovXG5cbiAgICAkc2NvcGUuZmlsdGVyc1VwZGF0ZWQgPSBmdW5jdGlvbigpe1xuICAgICAgY29uc29sZS5sb2coQXBpU2VydmljZS5maWx0ZXJzKTtcbiAgICAgICRzY29wZS5sb2FkUGluc0xheWVyKCk7XG4gICAgfVxuXG5cbiAgICAkc2NvcGUuY3JlYXRlX29ubGluZV9tYXAgPSBmdW5jdGlvbigpe1xuICAgICAgJHNjb3BlLm1hcCA9IHtcbiAgICAgICAgZGVmYXVsdHM6IHtcbiAgICAgICAgICB0aWxlTGF5ZXI6ICdodHRwczovL3tzfS50aWxlLm9wZW5zdHJlZXRtYXAub3JnL3t6fS97eH0ve3l9LnBuZycsXG4gICAgICAgICAgbWluWm9vbTogMSxcbiAgICAgICAgICBtYXhab29tOiAxOCxcbiAgICAgICAgICB6b29tQ29udHJvbFBvc2l0aW9uOiAndG9wbGVmdCcsXG4gICAgICAgIH0sXG4gICAgICAgIG1hcmtlcnM6IHt9LFxuICAgICAgICBldmVudHM6IHtcbiAgICAgICAgICBtYXA6IHtcbiAgICAgICAgICAgIGVuYWJsZTogWydjb250ZXh0J10sXG4gICAgICAgICAgICBsb2dpYzogJ2VtaXQnXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBjZW50ZXI6IHtcbiAgICAgICAgICBsYXQ6IC0zNC45MDExMTMsXG4gICAgICAgICAgbG5nOiAtNTYuMTY0NTMxLFxuICAgICAgICAgIHpvb206IDE2XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICAkdGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtYXBfd3JhcHBlclwiKS5zdHlsZS5kaXNwbGF5PVwibm9uZVwiO1xuICAgICAgfSwxMDAwKTtcbiAgICAgIC8qbGVhZmxldERhdGEuZ2V0TWFwKCkudGhlbihmdW5jdGlvbihtYXApIHtcbiAgICAgICAgbWFwLm9uKCdtb3ZlZW5kJywgJHNjb3BlLmhpZGVPZmZTY3JlZW5QaW5zKTtcbiAgICAgIH0pOyovXG4gICAgfTtcblxuXG5cbiAgICAgIC8qKlxuICAgICAqIENlbnRlciBtYXAgb24gdXNlcidzIGN1cnJlbnQgcG9zaXRpb25cbiAgICAgKi9cbiAgICAkc2NvcGUubG9jYXRlID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICRjb3Jkb3ZhR2VvbG9jYXRpb25cbiAgICAgICAgLmdldEN1cnJlbnRQb3NpdGlvbigpXG4gICAgICAgIC50aGVuKGZ1bmN0aW9uKHBvc2l0aW9uKSB7XG4gICAgICAgICAgJHNjb3BlLm1hcC5jZW50ZXIubGF0ID0gcG9zaXRpb24uY29vcmRzLmxhdGl0dWRlO1xuICAgICAgICAgICRzY29wZS5tYXAuY2VudGVyLmxuZyA9IHBvc2l0aW9uLmNvb3Jkcy5sb25naXR1ZGU7XG4gICAgICAgICAgJHNjb3BlLm1hcC5jZW50ZXIuem9vbSA9IDE1O1xuXG4gICAgICAgICAgJHNjb3BlLm1hcC5tYXJrZXJzLm5vdyA9IHtcbiAgICAgICAgICAgIGxhdDogcG9zaXRpb24uY29vcmRzLmxhdGl0dWRlLFxuICAgICAgICAgICAgbG5nOiBwb3NpdGlvbi5jb29yZHMubG9uZ2l0dWRlLFxuICAgICAgICAgICAgbWVzc2FnZTogXCJFc3TDoXMgYXF1w61cIixcbiAgICAgICAgICAgIGZvY3VzOiB0cnVlLFxuICAgICAgICAgICAgZHJhZ2dhYmxlOiBmYWxzZVxuICAgICAgICAgIH07XG5cbiAgICAgICAgfSwgZnVuY3Rpb24oZXJyKSB7XG4gICAgICAgICAgLy8gZXJyb3JcbiAgICAgICAgICAvL2NvbnNvbGUubG9nKFwiTG9jYXRpb24gZXJyb3IhXCIpO1xuICAgICAgICAgIC8vY29uc29sZS5sb2coZXJyKTtcbiAgICAgICAgfSk7XG5cbiAgICB9O1xuXG5cblxuICAgICRzY29wZS5oaWRlT2ZmU2NyZWVuUGlucyA9IGZ1bmN0aW9uKCkge1xuICAgICAgLypsZWFmbGV0RGF0YS5nZXRNYXAoKS50aGVuKGZ1bmN0aW9uKG1hcCkge1xuICAgICAgICB2YXIgbWFwQm91bmRzID0gbWFwLmdldEJvdW5kcygpO1xuICAgICAgICAkc2NvcGUudXNlcnNWaXNpYmxlID0gW107XG4gICAgICAgICAgJHNjb3BlLm9ubGluZV91c2VyX2dlb19hcnJheS5mb3JFYWNoKGZ1bmN0aW9uKGxheWVyLGtleSl7XG4gICAgICAgICAgICB2YXIgc2hvdWxkQmVWaXNpYmxlID0gbWFwQm91bmRzLmNvbnRhaW5zKGxheWVyLmdldExhdExuZygpKTtcbiAgICAgICAgICAgIGlmICghc2hvdWxkQmVWaXNpYmxlKSB7XG4gICAgICAgICAgICAgICAgbWFwLnJlbW92ZUxheWVyKGxheWVyKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoc2hvdWxkQmVWaXNpYmxlKSB7XG4gICAgICAgICAgICAgICAgbWFwLmFkZExheWVyKGxheWVyKTtcbiAgICAgICAgICAgICAgICAkc2NvcGUudXNlcnNWaXNpYmxlLnB1c2gobGF5ZXIuZmVhdHVyZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSlcbiAgICAgIH0pOyovXG4gICAgfVxuXG4gICAgJHNjb3BlLmxvYWRQaW5zTGF5ZXIgPSBmdW5jdGlvbihlc3RhYmxlY2ltaWVudG9zKXtcbiAgICAgIGNvbnNvbGUubG9nKGVzdGFibGVjaW1pZW50b3MpO1xuICAgICAgaWYoZXN0YWJsZWNpbWllbnRvcyE9bnVsbCl7XG4gICAgICAgIC8vUmVjb3JyZXIgbG9zIGVzdGFibGljaW1pZW50b3MgeSBjcmVhciBsb3MgcGluZXNcbiAgICAgICAgbGVhZmxldERhdGEuZ2V0TWFwKCkudGhlbihmdW5jdGlvbihtYXApIHtcbiAgICAgICAgICBlc3RhYmxlY2ltaWVudG9zLmZvckVhY2goZnVuY3Rpb24oZmVhdHVyZSl7XG4gICAgICAgICAgICBpZihmZWF0dXJlLmxhdCAmJiBmZWF0dXJlLmxvbil7XG4gICAgICAgICAgICAgIHZhciBtYXJrZXIgPSBMLm1hcmtlcihbZmVhdHVyZS5sYXQsIGZlYXR1cmUubG9uXSk7XG4gICAgICAgICAgICAgIG1hcmtlci5iaW5kUG9wdXAoXCI8Yj5cIitmZWF0dXJlLm5vbWJyZStcIjwvYj5cIikub3BlblBvcHVwKCk7XG4gICAgICAgICAgICAgIG1hcmtlci5hZGRUbyhtYXApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pXG4gICAgICAgIH0pXG4gICAgICB9ZWxzZXtcbiAgICAgICAgLy9jb25zb2xlLmxvZyhcIk5vIGhheSBlc3RhYmxlY2ltaWVudG9zIGNhcmdhZG9zXCIpO1xuICAgICAgfVxuICAgIH1cblxuXG4gIH1cblxuXSk7XG4iLCJwbWJfaW0uY29udHJvbGxlcnMuY29udHJvbGxlcignU2VhcmNoQ3RybCcsIFsnJHNjb3BlJywgJyRzdGF0ZScsXG4gICckY29yZG92YUdlb2xvY2F0aW9uJyxcbiAgJyRzdGF0ZVBhcmFtcycsXG4gICckaW9uaWNQbGF0Zm9ybScsXG4gICckaW9uaWNQb3B1cCcsXG4gICdMb2NhdGlvbnNTZXJ2aWNlJyxcbiAgJ0FwaVNlcnZpY2UnLFxuICAnREJTZXJ2aWNlJyxcbiAgJyRpb25pY1NsaWRlQm94RGVsZWdhdGUnLFxuICAnJGlvbmljU2Nyb2xsRGVsZWdhdGUnLFxuICBmdW5jdGlvbigkc2NvcGUsICRzdGF0ZSwgJGNvcmRvdmFHZW9sb2NhdGlvbiwgJHN0YXRlUGFyYW1zLCAkaW9uaWNQbGF0Zm9ybSwgJGlvbmljUG9wdXAsIExvY2F0aW9uc1NlcnZpY2UsIEFwaVNlcnZpY2UsIERCU2VydmljZSwgJGlvbmljU2xpZGVCb3hEZWxlZ2F0ZSxcbiAgJGlvbmljU2Nyb2xsRGVsZWdhdGUpIHtcblxuICAgICRzY29wZS5mb3JtID0ge307XG4gICAgJHNjb3BlLmZvcm0ubHVnYXIgPSBcIlwiO1xuICAgICRzY29wZS5mb3JtLm5vbWJyZV9jZW50cm8gPSBcIlwiO1xuICAgICRzY29wZS5mb3JtLm9wdGlvbiA9IFwibGlzdFwiO1xuICAgICRzY29wZS5lc3RhYmxlY2ltaWVudG9zID0gbnVsbDtcblxuICAgICRzY29wZS4kb24oXCIkaW9uaWNWaWV3LmJlZm9yZUVudGVyXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJmb3JtX2NvbnRhaW5lclwiKS5zdHlsZS5taW5IZWlnaHQgPSBcIjQ2MHB4XCI7XG4gICAgfSk7XG5cbiAgICAkc2NvcGUub25TZWFyY2hDaGFuZ2UgPSBmdW5jdGlvbigpe1xuICAgICAgLyp2YXIgc2VhcmNoID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJxdWVfZXN0dWRpYXJcIik7XG4gICAgICB2YXIgc2VhcmNoX3N0ciA9IHNlYXJjaC52YWx1ZS50cmltKCk7XG4gICAgICBpZihzZWFyY2hfc3RyLmxlbmd0aD49Myl7XG4gICAgICAgIEFwaVNlcnZpY2Uuc2VhcmNoUXVlRXN0dWRpYXIoc2VhcmNoX3N0cikudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHtcbiAgICAgICAgICAvL2NvbnNvbGUubG9nKHJlc3BvbnNlKTtcbiAgICAgICAgICAkc2NvcGUuZm9ybS5TZWFyY2hRdWVSZXN1bHRzID0gcmVzcG9uc2UuZGF0YTtcbiAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIlNlYXJjaFF1ZVJlc3VsdHNcIikuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcbiAgICAgICAgfSk7XG4gICAgICB9ZWxzZXtcbiAgICAgICAgJHNjb3BlLmhpZGVTZWFyY2hRdWVSZXN1bHRzKCk7XG4gICAgICB9Ki9cbiAgICB9XG5cbiAgICAkc2NvcGUuaGlkZVNlYXJjaFF1ZVJlc3VsdHMgPSBmdW5jdGlvbigpe1xuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJTZWFyY2hRdWVSZXN1bHRzXCIpLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICB9XG5cbiAgICAkc2NvcGUuc2hvd01hcCA9IGZ1bmN0aW9uKCl7XG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1hcF93cmFwcGVyXCIpLnN0eWxlLmRpc3BsYXk9XCJibG9ja1wiO1xuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtYXBfY29udGFpbmVyXCIpLnN0eWxlLmRpc3BsYXk9XCJibG9ja1wiO1xuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtYXBfY29udGFpbmVyXCIpLnN0eWxlLnZpc2liaWxpdHk9XCJ2aXNpYmxlXCI7XG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImZvcm1fY29udGFpbmVyXCIpLnN0eWxlLm1pbkhlaWdodD1cIjIxMHB4XCI7XG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNlYXJjaF92aWV3X2xpc3RfYnV0dG9uXCIpLnN0eWxlLmRpc3BsYXk9XCJibG9ja1wiO1xuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzZWFyY2hfdmlld19tYXBfYnV0dG9uXCIpLnN0eWxlLmRpc3BsYXk9XCJub25lXCI7XG4gICAgfVxuXG4gICAgJHNjb3BlLnNob3dMaXN0ID0gZnVuY3Rpb24oKXtcbiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWFwX3dyYXBwZXJcIikuc3R5bGUuZGlzcGxheT1cIm5vbmVcIjtcbiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWFwX2NvbnRhaW5lclwiKS5zdHlsZS5kaXNwbGF5PVwibm9uZVwiO1xuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtYXBfY29udGFpbmVyXCIpLnN0eWxlLnZpc2liaWxpdHk9XCJoaWRkZW5cIjtcbiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZm9ybV9jb250YWluZXJcIikuc3R5bGUubWluSGVpZ2h0PVwiNDYwcHhcIjtcbiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic2VhcmNoX3ZpZXdfbWFwX2J1dHRvblwiKS5zdHlsZS5kaXNwbGF5PVwiYmxvY2tcIjtcbiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic2VhcmNoX3ZpZXdfbGlzdF9idXR0b25cIikuc3R5bGUuZGlzcGxheT1cIm5vbmVcIjtcbiAgICB9XG5cblxuICB9XG5dKTtcbiIsInBtYl9pbS5zZXJ2aWNlcy5mYWN0b3J5KCdBcGlTZXJ2aWNlJywgWyckaHR0cCcsICdDb25maWdTZXJ2aWNlJywgZnVuY3Rpb24oJGh0dHAsIENvbmZpZ1NlcnZpY2UpIHtcblxuICB2YXIgYXBpVVJMID0gQ29uZmlnU2VydmljZS5iYXNlVVJMICsgXCIvYXBpL1wiO1xuXG4vKipcbiAgICogQ29uc3RydWN0b3IsIHdpdGggY2xhc3MgbmFtZVxuICAgKi9cbiAgZnVuY3Rpb24gQXBpT2JqZWN0KF9kYXRhKSB7XG4gICAgYW5ndWxhci5leHRlbmQodGhpcywgX2RhdGEpO1xuICB9XG5cblxuICBBcGlPYmplY3Quc2VhcmNoUXVlRXN0dWRpYXIgPSBmdW5jdGlvbihzdHIpe1xuICAgIHJldHVybiAkaHR0cC5nZXQoYXBpVVJMICsgJ3NlYXJjaC8nICsgc3RyLCB7Y2FjaGU6IGZhbHNlLCBwYXJhbXM6IHtoYXNoX2lkOk1hdGgucmFuZG9tKCl9fSk7XG4gIH1cblxuICBBcGlPYmplY3Quc2VhcmNoRG9uZGVFc3R1ZGlhciA9IGZ1bmN0aW9uKHN0cil7XG4gICAgcmV0dXJuICRodHRwLmdldChhcGlVUkwgKyAnc2VhcmNoQnlMb2NhbGlkYWREZXBhcnRhbWVudG8vJyArIHN0ciwge2NhY2hlOiBmYWxzZSwgcGFyYW1zOiB7aGFzaF9pZDpNYXRoLnJhbmRvbSgpfX0pO1xuICB9XG5cbiAgICBBcGlPYmplY3QuZmlsdGVycyA9IG51bGw7XG4gICAgQXBpT2JqZWN0Lm1hcFNjb3BlID0gbnVsbDtcbiAgICBBcGlPYmplY3QuZm9ybVNjb3BlID0ge307XG4gICAgQXBpT2JqZWN0Lmxhc3RTZWFyY2hSZXNwb25zZUVzdGFibGVjaW1pZW50b3MgPSBudWxsO1xuXG4gICAgQXBpT2JqZWN0LnVwZGF0ZUZpbHRlcnMgPSBmdW5jdGlvbihmaWx0ZXJzT2JqZWN0KXtcbiAgICAgIEFwaU9iamVjdC5maWx0ZXJzID0gZmlsdGVyc09iamVjdDtcbiAgICAgIGlmKEFwaU9iamVjdC5tYXBTY29wZSAhPSBudWxsKXtcbiAgICAgICAgQXBpT2JqZWN0Lm1hcFNjb3BlLmZpbHRlcnNVcGRhdGVkKCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgQXBpT2JqZWN0LmNyZWF0ZUZpbHRlclBhcmFtc0ZvckdldFJlcXVlc3QgPSBmdW5jdGlvbigpe1xuICAgICAgdmFyIHBhcmFtcyA9IHtcbiAgICAgICAgaGFzaF9pZDogTWF0aC5yYW5kb20oKSxcbiAgICAgICAgZWRhZDogQXBpT2JqZWN0LmZpbHRlcnMuZWRhZCxcbiAgICAgICAgdWx0aW1vX25pdmVsX2Fwcm9iYWRvOiBBcGlPYmplY3QuZmlsdGVycy51bHRpbW9fbml2ZWxfYXByb2JhZG8sXG4gICAgICAgIHVsdGltb19hbmlvX2Fwcm9iYWRvOiBBcGlPYmplY3QuZmlsdGVycy51bHRpbW9fYW5pb19hcHJvYmFkbyxcbiAgICAgICAgLypwbGFuOiBBcGlPYmplY3QuZmlsdGVycy5wbGFuLFxuICAgICAgICBsdWdhcjogQXBpT2JqZWN0LmZpbHRlcnMubHVnYXIsKi9cbiAgICAgICAgdHVybm86IEFwaU9iamVjdC5maWx0ZXJzLnR1cm5vXG4gICAgICB9O1xuICAgICAgaWYoQXBpT2JqZWN0LmZpbHRlcnMucXVlIT1cIlwiKXtcbiAgICAgICAgcGFyYW1zLnF1ZUVzdHVkaWFySWQgPSBBcGlPYmplY3QuZmlsdGVycy5xdWUuaWQ7XG4gICAgICAgIHBhcmFtcy5xdWVFc3R1ZGlhck5vbWJyZSA9IEFwaU9iamVjdC5maWx0ZXJzLnF1ZS5ub21icmU7XG4gICAgICAgIHBhcmFtcy5xdWVFc3R1ZGlhclRhZ1VubyA9IEFwaU9iamVjdC5maWx0ZXJzLnF1ZS50YWdbMF07XG4gICAgICAgIHBhcmFtcy5xdWVFc3R1ZGlhclRhZ0RvcyA9IEFwaU9iamVjdC5maWx0ZXJzLnF1ZS50YWdbMV07XG4gICAgICB9XG4gICAgICBpZihBcGlPYmplY3QuZmlsdGVycy5kb25kZSE9XCJcIil7XG4gICAgICAgIHBhcmFtcy5kb25kZUVzdHVkaWFyRGVwYXJ0YW1lbnRvID0gQXBpT2JqZWN0LmZpbHRlcnMuZG9uZGUuZGVwYXJ0YW1lbnRvO1xuICAgICAgICBwYXJhbXMuZG9uZGVFc3R1ZGlhckxvY2FsaWRhZCA9IEFwaU9iamVjdC5maWx0ZXJzLmRvbmRlLmxvY2FsaWRhZDtcbiAgICAgICAgcGFyYW1zLmRvbmRlRXN0dWRpYXJMYXQgPSBBcGlPYmplY3QuZmlsdGVycy5kb25kZS5jb29yZGVuYWRhcy5sYXQ7XG4gICAgICAgIHBhcmFtcy5kb25kZUVzdHVkaWFyTG9uID0gQXBpT2JqZWN0LmZpbHRlcnMuZG9uZGUuY29vcmRlbmFkYXMubG9uO1xuICAgICAgfVxuICAgICAgaWYgKCBBcGlPYmplY3QuZmlsdGVycy5xdWUudGlwbyA9PSAndGlwbycgKSB7XG4gICAgICAgIHBhcmFtcyA9IEFwaU9iamVjdC5maWx0ZXJzLnF1ZS5pZCsnL2FsbCc7XG4gICAgICB9XG4gICAgICBlbHNlIHtcbiAgICAgICAgcGFyYW1zID0gJ2FsbC8nK0FwaU9iamVjdC5maWx0ZXJzLnF1ZS5pZDtcbiAgICAgIH1cbiAgICAgIHJldHVybiBwYXJhbXM7XG4gICAgfVxuXG4gICAgQXBpT2JqZWN0LmdldEVzdGFibGVjaW1pZW50b3NCeUZpbHRlcnMgPSBmdW5jdGlvbigpe1xuICAgICAgaWYoQXBpT2JqZWN0LmZpbHRlcnMhPW51bGwpe1xuICAgICAgICB2YXIgcGFyYW1ldGVycyA9IEFwaU9iamVjdC5jcmVhdGVGaWx0ZXJQYXJhbXNGb3JHZXRSZXF1ZXN0KCk7XG4gICAgICAgIGNvbnNvbGUubG9nKHBhcmFtZXRlcnMpO1xuICAgICAgICByZXR1cm4gJGh0dHAuZ2V0KGFwaVVSTCArICdlc3RhYmxlY2ltaWVudG8tcG9yLXRpcG8vJytwYXJhbWV0ZXJzKTsvLywge2NhY2hlOiBmYWxzZSwgcGFyYW1zOiBwYXJhbWV0ZXJzfSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgQXBpT2JqZWN0LnVwZGF0ZU1hcFBpbnMgPSBmdW5jdGlvbihlc3RhYmxlY2ltaWVudG9zKXtcbiAgICAgIEFwaU9iamVjdC5tYXBTY29wZS5sb2FkUGluc0xheWVyKGVzdGFibGVjaW1pZW50b3MpO1xuICAgIH1cblxuXG4gICAgLyoqXG4gICAgICogUmV0dXJuIHRoZSBjb25zdHJ1Y3RvciBmdW5jdGlvblxuICAgICAqL1xuICAgIHJldHVybiBBcGlPYmplY3Q7XG5cbn1dKTtcbiIsInBtYl9pbS5zZXJ2aWNlcy5mYWN0b3J5KCdBdXRoU2VydmljZScsIFsnJGh0dHAnLCAnJGNvcmRvdmFGaWxlVHJhbnNmZXInLCAnQ29uZmlnU2VydmljZScsJ1ZhbGlkYXRpb25TZXJ2aWNlJywgZnVuY3Rpb24oJGh0dHAsICRjb3Jkb3ZhRmlsZVRyYW5zZmVyLCBDb25maWdTZXJ2aWNlLCBWYWxpZGF0aW9uU2VydmljZSkge1xuXG4gIHZhciBiYXNlVVJMID0gQ29uZmlnU2VydmljZS5iYXNlVVJMICsgXCIvYXBpL1wiO1xuXG4gIHJldHVybiB7XG4gICAgbG9nX2luOiBmdW5jdGlvbiAodXNlcixwYXNzd29yZCkge1xuICAgICAgICB2YXIgYm9keSA9ICd1c2VyPScrdXNlcisnJnBhc3N3b3JkPScrcGFzc3dvcmQ7XG4gICAgICAgIHJldHVybiAkaHR0cC5wb3N0KGJhc2VVUkwgKyAnbG9naW4nLCBib2R5LHt3aXRoQ3JlZGVudGlhbHM6IHRydWUsIGhlYWRlcnM6IHsnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCd9fSk7XG4gICAgfSxcblxuICAgIHNpZ25fb3V0OiBmdW5jdGlvbiAocGFzc3dvcmQsIGVtYWlsKSB7XG4gICAgICByZXR1cm4gJGh0dHAuZ2V0KGJhc2VVUkwgKyBcInNpZ25fb3V0XCIsIHsgd2l0aENyZWRlbnRpYWxzOiB0cnVlLCBwYXJhbXM6IHsgcGFzc3dvcmRfc2lnbl9pbjogcGFzc3dvcmQsIGVtYWlsOiBlbWFpbCB9IH0pO1xuICAgIH0sXG5cbiAgICBjcmVhdGVfdXNlcjogZnVuY3Rpb24gKHVzZXJPYmopIHtcbiAgICAgIGlmKHVzZXJPYmoucGljdHVyZV91cmwgJiYgVmFsaWRhdGlvblNlcnZpY2UuaXNNb2JpbGVEZXZpY2UoKSl7XG4gICAgICAgIHZhciBvcHRpb25zID0ge1xuICAgICAgICAgZmlsZUtleTogXCJwaG90b1wiLFxuICAgICAgICAgLy9maWxlTmFtZTogZmlsZW5hbWUsXG4gICAgICAgICAvL2NodW5rZWRNb2RlOiBmYWxzZSxcbiAgICAgICAgIC8vbWltZVR5cGU6IFwiaW1hZ2UvanBnXCIsXG4gICAgICAgICB3aXRoQ3JlZGVudGlhbHM6IHRydWUsXG4gICAgICAgICBwYXJhbXMgOiB7ICB1c2VyOiB1c2VyT2JqLnVzZXJuYW1lLFxuICAgICAgICAgICAgICAgICAgICAgcGFzc3dvcmQ6IHVzZXJPYmoucGFzc3dvcmQsXG4gICAgICAgICAgICAgICAgICAgICBlbWFpbDogdXNlck9iai5lbWFpbCxcbiAgICAgICAgICAgICAgICAgICAgIGdlbmRlcjogdXNlck9iai5nZW5kZXIsXG4gICAgICAgICAgICAgICAgICAgICBpbnRlcmVzdGVkOiB1c2VyT2JqLmludGVyZXN0ZWQsXG4gICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IHVzZXJPYmouc3RhdHVzLFxuICAgICAgICAgICAgICAgICAgICAgc2hvd19sb2NhdGlvbjogdXNlck9iai5zaG93X2xvY2F0aW9uLFxuICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgdmFyIHRydXN0QWxsSG9zdHMgPSB0cnVlO1xuICAgICAgICByZXR1cm4gJGNvcmRvdmFGaWxlVHJhbnNmZXIudXBsb2FkKGJhc2VVUkwgKyBcImNyZWF0ZV91c2VyXCIsIHVzZXJPYmoucGljdHVyZV91cmwsIG9wdGlvbnMsIHRydXN0QWxsSG9zdHMpO1xuICAgICAgfWVsc2V7XG4gICAgICAgIGlmKHVzZXJPYmoucGljdHVyZV91cmwpe1xuICAgICAgICAgIHZhciBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YSgpO1xuICAgICAgICBcdGZvcm1EYXRhLmFwcGVuZChcInBob3RvXCIsIHVzZXJPYmoucGljdHVyZV91cmwpO1xuICAgICAgICBcdGZvcm1EYXRhLmFwcGVuZChcInVzZXJcIiwgdXNlck9iai51c2VybmFtZSk7XG4gICAgICAgIFx0Zm9ybURhdGEuYXBwZW5kKFwicGFzc3dvcmRcIiwgdXNlck9iai5wYXNzd29yZCk7XG4gICAgICAgIFx0Zm9ybURhdGEuYXBwZW5kKFwiZW1haWxcIiwgdXNlck9iai5lbWFpbCk7XG4gICAgICAgIFx0Zm9ybURhdGEuYXBwZW5kKFwiZ2VuZGVyXCIsIHVzZXJPYmouZ2VuZGVyKTtcbiAgICAgICAgXHRmb3JtRGF0YS5hcHBlbmQoXCJpbnRlcmVzdGVkXCIsIHVzZXJPYmouaW50ZXJlc3RlZCk7XG4gICAgICAgIFx0Zm9ybURhdGEuYXBwZW5kKFwic3RhdHVzXCIsIHVzZXJPYmouc3RhdHVzKTtcbiAgICAgICAgXHRmb3JtRGF0YS5hcHBlbmQoXCJzaG93X2xvY2F0aW9uXCIsIHVzZXJPYmouc2hvd19sb2NhdGlvbik7XG4gICAgICAgICAgcmV0dXJuICRodHRwLnBvc3QoYmFzZVVSTCArICdjcmVhdGVfdXNlcicsIGZvcm1EYXRhLCB7XG4gICAgICAgICAgICAgIGhlYWRlcnM6IHsgJ0NvbnRlbnQtVHlwZSc6IHVuZGVmaW5lZCB9LFxuICAgICAgICAgICAgICB0cmFuc2Zvcm1SZXF1ZXN0OiBhbmd1bGFyLmlkZW50aXR5XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1lbHNle1xuICAgICAgICAgIHZhciBib2R5ID0gJ3VzZXI9Jyt1c2VyT2JqLnVzZXJuYW1lKycmcGFzc3dvcmQ9Jyt1c2VyT2JqLnBhc3N3b3JkKycmZW1haWw9Jyt1c2VyT2JqLmVtYWlsKycmZ2VuZGVyPScrdXNlck9iai5nZW5kZXI7XG4gICAgICAgICAgYm9keSA9IGJvZHkgKycmaW50ZXJlc3RlZD0nK3VzZXJPYmouaW50ZXJlc3RlZCsnJnN0YXR1cz0nK3VzZXJPYmouc3RhdHVzKycmc2hvd19sb2NhdGlvbj0nK3VzZXJPYmouc2hvd19sb2NhdGlvbjtcbiAgICAgICAgICByZXR1cm4gJGh0dHAucG9zdChiYXNlVVJMICsgJ2NyZWF0ZV91c2VyJywgYm9keSx7d2l0aENyZWRlbnRpYWxzOiB0cnVlLCBoZWFkZXJzOiB7J0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnfX0pO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICB9LFxuXG4gICAgcGFzc3dvcmRfcmVjb3Zlcnk6IGZ1bmN0aW9uIChlbWFpbCkge1xuICAgICAgcmV0dXJuICRodHRwLmdldChiYXNlVVJMICsgXCJmb3Jnb3RfcGFzc3dvcmRcIiwgeyBwYXJhbXM6IHsgbG9naW5fZW1haWw6IGVtYWlsfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgIH0sXG5cbiAgICBwYXNzd29yZF9jaGFuZ2U6IGZ1bmN0aW9uIChlbWFpbCxvbGRQYXNzd29yZCxuZXdQYXNzd29yZCxjb25maXJtUGFzc3dvcmQpIHtcblxuICAgICAgdmFyIGJvZHkgPSAnZW1haWw9JytlbWFpbCsnJnBhc3N3b3JkX3NpZ25faW49JytvbGRQYXNzd29yZCsnJm5ld19wYXNzd29yZD0nK25ld1Bhc3N3b3JkKycmY29uZmlybT0nK2NvbmZpcm1QYXNzd29yZDtcbiAgICAgIHJldHVybiAkaHR0cC5wb3N0KGJhc2VVUkwgKyAnY2hhbmdlX3Bhc3N3b3JkJywgYm9keSx7aGVhZGVyczogeydDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJ319KTtcblxuICAgIH0sXG5cblxuICAgIGVkaXRfdXNlcjogZnVuY3Rpb24gKHVzZXJPYmopIHtcbiAgICAgIGlmKHVzZXJPYmoucGljdHVyZV91cmwgJiYgVmFsaWRhdGlvblNlcnZpY2UuaXNNb2JpbGVEZXZpY2UoKSl7XG4gICAgICAgIHZhciBvcHRpb25zID0ge1xuICAgICAgICAgZmlsZUtleTogXCJwaG90b1wiLFxuICAgICAgICAgLy9maWxlTmFtZTogZmlsZW5hbWUsXG4gICAgICAgICAvL2NodW5rZWRNb2RlOiBmYWxzZSxcbiAgICAgICAgIC8vbWltZVR5cGU6IFwiaW1hZ2UvanBnXCIsXG4gICAgICAgICB3aXRoQ3JlZGVudGlhbHM6IHRydWUsXG4gICAgICAgICBwYXJhbXMgOiB7ICB1c2VyOiB1c2VyT2JqLnVzZXJuYW1lLFxuICAgICAgICAgICAgICAgICAgICAgcGFzc3dvcmQ6IHVzZXJPYmoucGFzc3dvcmQsXG4gICAgICAgICAgICAgICAgICAgICBlbWFpbDogdXNlck9iai5lbWFpbCxcbiAgICAgICAgICAgICAgICAgICAgIGdlbmRlcjogdXNlck9iai5nZW5kZXIsXG4gICAgICAgICAgICAgICAgICAgICBpbnRlcmVzdGVkOiB1c2VyT2JqLmludGVyZXN0ZWQsXG4gICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IHVzZXJPYmouc3RhdHVzLFxuICAgICAgICAgICAgICAgICAgICAgc2hvd19sb2NhdGlvbjogdXNlck9iai5zaG93X2xvY2F0aW9uLFxuICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgdmFyIHRydXN0QWxsSG9zdHMgPSB0cnVlO1xuICAgICAgICByZXR1cm4gJGNvcmRvdmFGaWxlVHJhbnNmZXIudXBsb2FkKGJhc2VVUkwgKyBcImVkaXRfcHJvZmlsZVwiLCB1c2VyT2JqLnBpY3R1cmVfdXJsLCBvcHRpb25zLCB0cnVzdEFsbEhvc3RzKTtcbiAgICAgIH1lbHNle1xuICAgICAgICB2YXIgYm9keSA9ICd1c2VyPScrdXNlck9iai51c2VybmFtZSsnJnBhc3N3b3JkPScrdXNlck9iai5wYXNzd29yZCsnJmVtYWlsPScrdXNlck9iai5lbWFpbCsnJmdlbmRlcj0nK3VzZXJPYmouZ2VuZGVyO1xuICAgICAgICBib2R5ID0gYm9keSArJyZpbnRlcmVzdGVkPScrdXNlck9iai5pbnRlcmVzdGVkKycmc3RhdHVzPScrdXNlck9iai5zdGF0dXMrJyZzaG93X2xvY2F0aW9uPScrdXNlck9iai5zaG93X2xvY2F0aW9uO1xuICAgICAgICBpZih1c2VyT2JqLnBpY3R1cmVfdXJsKXtcbiAgICAgICAgICB2YXIgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKTtcbiAgICAgICAgXHRmb3JtRGF0YS5hcHBlbmQoXCJwaG90b1wiLCB1c2VyT2JqLnBpY3R1cmVfdXJsKTtcbiAgICAgICAgXHRmb3JtRGF0YS5hcHBlbmQoXCJ1c2VyXCIsIHVzZXJPYmoudXNlcm5hbWUpO1xuICAgICAgICBcdGZvcm1EYXRhLmFwcGVuZChcInBhc3N3b3JkXCIsIHVzZXJPYmoucGFzc3dvcmQpO1xuICAgICAgICBcdGZvcm1EYXRhLmFwcGVuZChcImVtYWlsXCIsIHVzZXJPYmouZW1haWwpO1xuICAgICAgICBcdGZvcm1EYXRhLmFwcGVuZChcImdlbmRlclwiLCB1c2VyT2JqLmdlbmRlcik7XG4gICAgICAgIFx0Zm9ybURhdGEuYXBwZW5kKFwiaW50ZXJlc3RlZFwiLCB1c2VyT2JqLmludGVyZXN0ZWQpO1xuICAgICAgICBcdGZvcm1EYXRhLmFwcGVuZChcInN0YXR1c1wiLCB1c2VyT2JqLnN0YXR1cyk7XG4gICAgICAgIFx0Zm9ybURhdGEuYXBwZW5kKFwic2hvd19sb2NhdGlvblwiLCB1c2VyT2JqLnNob3dfbG9jYXRpb24pO1xuICAgICAgICAgIHJldHVybiAkaHR0cC5wb3N0KGJhc2VVUkwgKyAnZWRpdF9wcm9maWxlJywgZm9ybURhdGEsIHtcbiAgICAgICAgICAgICAgaGVhZGVyczogeyAnQ29udGVudC1UeXBlJzogdW5kZWZpbmVkIH0sXG4gICAgICAgICAgICAgIHRyYW5zZm9ybVJlcXVlc3Q6IGFuZ3VsYXIuaWRlbnRpdHlcbiAgICAgICAgICB9KTtcbiAgICAgICAgfWVsc2V7XG4gICAgICAgICAgcmV0dXJuICRodHRwLnBvc3QoYmFzZVVSTCArICdlZGl0X3Byb2ZpbGUnLCBib2R5LHt3aXRoQ3JlZGVudGlhbHM6IHRydWUsIGhlYWRlcnM6IHsnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCd9fSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgfTtcbn1dKTtcbiIsInBtYl9pbS5zZXJ2aWNlcy5mYWN0b3J5KCdDb25maWdTZXJ2aWNlJywgWyckaHR0cCcsIGZ1bmN0aW9uKCRodHRwKSB7XG5cbiAgdmFyIENvbmZpZ09iaiA9IHt9O1xuICBDb25maWdPYmouYmFzZVVSTCA9IFwiaHR0cDovL2VlX2JhY2tlbmQuZGV2ZWxvcG1lbnQuZGF0YXV5Lm9yZ1wiO1xuICBpZihpb25pYy5QbGF0Zm9ybS5pc1dlYlZpZXcoKSl7XG4gICAgQ29uZmlnT2JqLmJhc2VVUkwgPSBcImh0dHA6Ly9lZV9iYWNrZW5kLmRldmVsb3BtZW50LmRhdGF1eS5vcmdcIjtcbiAgfSBlbHNlIHtcbiAgICBDb25maWdPYmouYmFzZVVSTCA9IFwiL2JhY2tlbmRcIjtcbiAgfVxuICBDb25maWdPYmouQXBwTmFtZSA9IFwiRWxpam8gRXN0dWRpYXJcIjtcblxuXG4gIHJldHVybiBDb25maWdPYmo7XG5cbn1dKTtcbiIsInBtYl9pbS5zZXJ2aWNlcy5mYWN0b3J5KCdDb25uZWN0aXZpdHlTZXJ2aWNlJywgWyckY29yZG92YU5ldHdvcmsnLCBmdW5jdGlvbigkY29yZG92YU5ldHdvcmspe1xuXG4gIHJldHVybiB7XG4gICAgaXNPbmxpbmU6IGZ1bmN0aW9uKCl7XG4gICAgICAvKmlmKGlvbmljLlBsYXRmb3JtLmlzV2ViVmlldygpKXtcbiAgICAgICAgcmV0dXJuICRjb3Jkb3ZhTmV0d29yay5pc09ubGluZSgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIG5hdmlnYXRvci5vbkxpbmU7XG4gICAgICAgIC8vcmV0dXJuIGZhbHNlO1xuICAgICAgfSovXG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9LFxuICAgIGlzT2ZmbGluZTogZnVuY3Rpb24oKXtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIC8qaWYoaW9uaWMuUGxhdGZvcm0uaXNXZWJWaWV3KCkpe1xuICAgICAgICByZXR1cm4gISRjb3Jkb3ZhTmV0d29yay5pc09ubGluZSgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuICFuYXZpZ2F0b3Iub25MaW5lO1xuICAgICAgfSovXG4gICAgfVxuICB9XG59XSlcbiIsInBtYl9pbS5zZXJ2aWNlcy5mYWN0b3J5KCdEQlNlcnZpY2UnLCBbJyRxJywgZnVuY3Rpb24oJHEpIHtcbiAgIHZhciBfZGI7XG5cbiAgIHJldHVybiB7XG4gICAgICAgaW5pdERCOiBpbml0REIsXG4gICAgICAgc2F2ZVVzZXI6IHNhdmVVc2VyLFxuICAgICAgIGdldFVzZXI6IGdldFVzZXIsXG4gICAgICAgZXJhc2VVc2VyOiBlcmFzZVVzZXIsXG4gICAgICAgc2F2ZVJlcG9ydDogc2F2ZVJlcG9ydCxcbiAgICAgICBnZXRSZXBvcnQ6IGdldFJlcG9ydCxcbiAgICAgICBnZXRBbGxSZXBvcnRzOiBnZXRBbGxSZXBvcnRzLFxuICAgICAgIHVwZGF0ZVJlcG9ydDogdXBkYXRlUmVwb3J0LFxuICAgICAgIGRlbGV0ZVJlcG9ydDogZGVsZXRlUmVwb3J0LFxuICAgICAgIGRlbGV0ZUdpdmVuUmVwb3J0OiBkZWxldGVHaXZlblJlcG9ydCxcbiAgICAgICBnZXRDYXRlZ29yaWVzOiBnZXRDYXRlZ29yaWVzLFxuICAgICAgIHNhdmVDYXRlZ29yaWVzOiBzYXZlQ2F0ZWdvcmllc1xuICAgfTtcblxuICAgZnVuY3Rpb24gc2F2ZVVzZXIodXNlcl9uYW1lLCB1c2VyX3Bhc3N3b3JkLCB1c2VyX3BpY3R1cmVfdXJsLHNob3dfbG9jYXRpb24sIHVpZCwgc3RhdHVzLCBnZW5kZXIsIGludGVyZXN0ZWQpIHtcbiAgICAgICAgIHZhciB1c2VyID0ge1xuICAgICAgICAgICAgX2lkOiAndXNlci1sb2dnZWQnLFxuICAgICAgICAgICAgbmFtZTogdXNlcl9uYW1lLFxuICAgICAgICAgICAgcGFzc3dvcmQ6IHVzZXJfcGFzc3dvcmQsXG4gICAgICAgICAgICBwaWN0dXJlX3VybDogdXNlcl9waWN0dXJlX3VybCxcbiAgICAgICAgICAgIHNob3dfbG9jYXRpb246IHNob3dfbG9jYXRpb24sXG4gICAgICAgICAgICB1aWQ6IHVpZCxcbiAgICAgICAgICAgIHN0YXR1czogc3RhdHVzLFxuICAgICAgICAgICAgZ2VuZGVyOiBnZW5kZXIsXG4gICAgICAgICAgICBpbnRlcmVzdGVkOiBpbnRlcmVzdGVkXG4gICAgICAgICB9O1xuICAgICAgICAgZ2V0VXNlcigpLnRoZW4oZnVuY3Rpb24gKGRvYykge1xuICAgICAgICAgICB1c2VyLl9yZXYgPSBkb2MuX3JldjtcbiAgICAgICAgICAgcmV0dXJuIF9kYi5wdXQodXNlcik7XG4gICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7XG4gICAgICAgICAgIHJldHVybiBfZGIucHV0KHVzZXIpO1xuICAgICAgICAgfSlcbiAgIH07XG5cbiAgZnVuY3Rpb24gZ2V0VXNlcigpIHtcbiAgICAgcmV0dXJuIF9kYi5nZXQoJ3VzZXItbG9nZ2VkJyk7XG4gIH07XG5cbiAgZnVuY3Rpb24gZXJhc2VVc2VyKCkge1xuICAgIF9kYi5nZXQoJ3VzZXItbG9nZ2VkJykudGhlbihmdW5jdGlvbihkb2MpIHtcbiAgICAgIHJldHVybiBfZGIucmVtb3ZlKGRvYyk7XG4gICAgfSk7XG4gIH1cblxuICAgZnVuY3Rpb24gaW5pdERCKCkge1xuICAgICAgIC8vIENyZWF0ZXMgdGhlIGRhdGFiYXNlIG9yIG9wZW5zIGlmIGl0IGFscmVhZHkgZXhpc3RzXG4gICAgICAgX2RiID0gbmV3IFBvdWNoREIoJ3RvbWFtb3N1bmFfbG9jYWxfZGInKTtcbiAgICAgICByZXR1cm4gX2RiO1xuICAgfTtcblxuICAgZnVuY3Rpb24gc2F2ZVJlcG9ydChyZXBvcnQpIHtcbiAgICAgIC8vbmV3X3JlcG9ydF9pZCA9IFwicmVwb3J0X1wiICsgcG91Y2hDb2xsYXRlLnRvSW5kZXhhYmxlU3RyaW5nKFtyZXBvcnRdKTtcbiAgICAgIHZhciBkYXRlID0gbmV3IERhdGUoKTtcbiAgICAgIHZhciBuZXdfcmVwb3J0X2lkID0gXCJyZXBvcnRfXCIgKyBkYXRlLmdldEZ1bGxZZWFyKCkgKyAoZGF0ZS5nZXRNb250aCgpICsgMSkgKyBkYXRlLmdldERhdGUoKSArIGRhdGUuZ2V0TWlsbGlzZWNvbmRzKCk7XG4gICAgICByZXBvcnQuX2lkID0gbmV3X3JlcG9ydF9pZDtcbiAgICAgIHJldHVybiBfZGIucHV0KHJlcG9ydCk7XG4gICB9O1xuXG4gICBmdW5jdGlvbiB1cGRhdGVSZXBvcnQocmVwb3J0KSB7XG4gICAgIHJldHVybiBfZGIucHV0KHJlcG9ydCk7XG4gIH07XG5cbiAgIGZ1bmN0aW9uIGdldENhdGVnb3JpZXMoKSB7XG4gICAgIHJldHVybiBfZGIuZ2V0KCdjYXRlZ29yaWVzLWxpc3QnKTtcbiAgIH07XG5cbiAgIGZ1bmN0aW9uIHNhdmVDYXRlZ29yaWVzKGNhdGVnb3JpZXMpIHtcbiAgICAgZ2V0Q2F0ZWdvcmllcygpLnRoZW4oZnVuY3Rpb24gKGRvYykge1xuICAgICAgIGNhdGVnb3JpZXMuX3JldiA9IGRvYy5fcmV2O1xuICAgICAgIHJldHVybiBfZGIucHV0KGNhdGVnb3JpZXMpO1xuICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7XG4gICAgICAgY2F0ZWdvcmllcy5faWQgPSBcImNhdGVnb3JpZXMtbGlzdFwiO1xuICAgICAgIHJldHVybiBfZGIucHV0KGNhdGVnb3JpZXMpO1xuICAgICB9KVxuICAgfTtcblxuICBmdW5jdGlvbiBnZXRSZXBvcnQocmVwb3J0SWQpIHtcbiAgICAgcmV0dXJuIF9kYi5nZXQocmVwb3J0SWQpO1xuICB9O1xuXG4gICBmdW5jdGlvbiBnZXRBbGxSZXBvcnRzKCkge1xuICAgICByZXR1cm4gX2RiLmFsbERvY3Moe1xuICAgICAgaW5jbHVkZV9kb2NzOiB0cnVlLFxuICAgICAgYXR0YWNobWVudHM6IGZhbHNlLFxuICAgICAgc3RhcnRrZXk6ICdyZXBvcnRfJyxcbiAgICAgIGVuZGtleTogJ3JlcG9ydF9cXHVmZmZmJ1xuICAgICB9KTsvKi50aGVuKGZ1bmN0aW9uIChyZXN1bHQpIHtcbiAgICAgIC8vIGhhbmRsZSByZXN1bHRcbiAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7XG4gICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgIH0pOyovXG4gIH07XG5cbiAgZnVuY3Rpb24gZGVsZXRlUmVwb3J0KHJlcG9ydF9pZCkge1xuICAgIF9kYi5nZXQocmVwb3J0X2lkKS50aGVuKGZ1bmN0aW9uKGRvYykge1xuICAgICAgcmV0dXJuIF9kYi5yZW1vdmUoZG9jKTtcbiAgICB9KTtcbiAgfTtcblxuICBmdW5jdGlvbiBkZWxldGVHaXZlblJlcG9ydChyZXBvcnQpIHtcbiAgICByZXR1cm4gX2RiLnJlbW92ZShyZXBvcnQpO1xuICB9O1xuXG59XSk7XG4iLCJwbWJfaW0uc2VydmljZXMuZmFjdG9yeSgnRXJyb3JTZXJ2aWNlJywgWyckaHR0cCcsJyRpb25pY1BvcHVwJywgJ1ZhbGlkYXRpb25TZXJ2aWNlJywgZnVuY3Rpb24oJGh0dHAsJGlvbmljUG9wdXAsVmFsaWRhdGlvblNlcnZpY2UpIHtcblxuICByZXR1cm4ge1xuICAgIGh0dHBfcmVzcG9uc2VfaXNfc3VjY2Vzc2Z1bDogZnVuY3Rpb24gKGpzb25SZXN1bHQsIGVycm9yQ29udGFpbmVySWQpIHtcbiAgICAgIHZhciBlcnJvckRpdiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGVycm9yQ29udGFpbmVySWQpO1xuICAgICAgaWYoanNvblJlc3VsdC5kYXRhICYmIGpzb25SZXN1bHQuZGF0YS5TdGF0dXM9PVwic3VjY2Vzc1wiIHx8IGpzb25SZXN1bHQuU3RhdHVzPT1cInN1Y2Nlc3NcIil7XG4gICAgICAgIGVycm9yRGl2LnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9ZWxzZXtcbiAgICAgICAgaWYoanNvblJlc3VsdC5kYXRhKXtcbiAgICAgICAgICBlcnJvckRpdi5pbm5lckhUTUw9XCI8aDM+XCIgKyBqc29uUmVzdWx0LmRhdGEuTWVzc2FnZSArIFwiPC9oMz5cIjtcbiAgICAgICAgfWVsc2V7XG4gICAgICAgICAgZXJyb3JEaXYuaW5uZXJIVE1MPVwiPGgzPlwiICsganNvblJlc3VsdC5NZXNzYWdlICsgXCI8L2gzPlwiO1xuICAgICAgICB9XG4gICAgICAgIGVycm9yRGl2LnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICB9LFxuXG4gICAgaHR0cF9yZXNwb25zZV9pc19zdWNjZXNzZnVsX2FqYXg6IGZ1bmN0aW9uIChqc29uUmVzdWx0KSB7XG4gICAgICBpZihqc29uUmVzdWx0LmRhdGEucmVzdWx0PT0wKXtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfWVsc2V7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuICAgIH0sXG5cbiAgICBodHRwX3Jlc3BvbnNlX2lzX3N1Y2Nlc3NmdWxfcG9wdXA6IGZ1bmN0aW9uIChqc29uUmVzdWx0KSB7XG4gICAgICBpZihqc29uUmVzdWx0LmRhdGEucmVzdWx0PT0wKXtcbiAgICAgICAgdmFyIGFsZXJ0UG9wdXAgPSAkaW9uaWNQb3B1cC5hbGVydCh7XG4gICAgICAgICB0aXRsZTogXCJFcnJvclwiLFxuICAgICAgICAgdGVtcGxhdGU6IGpzb25SZXN1bHQuZGF0YS5tZXNzYWdlXG4gICAgICAgIH0pO1xuICAgICAgICBhbGVydFBvcHVwLnRoZW4oZnVuY3Rpb24ocmVzKSB7XG4gICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfWVsc2V7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuICAgIH0sXG5cbiAgICBodHRwX2RhdGFfcmVzcG9uc2VfaXNfc3VjY2Vzc2Z1bDogZnVuY3Rpb24gKGRhdGEsIGVycm9yQ29udGFpbmVySWQpIHtcbiAgICAgIHZhciBlcnJvckRpdiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGVycm9yQ29udGFpbmVySWQpO1xuICAgICAgaWYoZGF0YS5TdGF0dXMhPSdzdWNjZXNzJyl7XG4gICAgICAgIGVycm9yRGl2LmlubmVySFRNTD1cIjxoMz5cIiArIGRhdGEuTWVzc2FnZSArIFwiPC9oMz5cIjtcbiAgICAgICAgZXJyb3JEaXYuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfWVsc2V7XG4gICAgICAgIGVycm9yRGl2LnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gICAgfSxcblxuICAgIGh0dHBfZGF0YV9yZXNwb25zZV9pc19zdWNjZXNzZnVsX2FqYXg6IGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICBpZihkYXRhLnJlc3VsdD09MCl7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1lbHNle1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cbiAgICB9LFxuXG4gICAgc2hvd19lcnJvcl9tZXNzYWdlOiBmdW5jdGlvbiAoZXJyb3JDb250YWluZXJJZCwgbWVzc2FnZSkge1xuICAgICAgICB2YXIgZXJyb3JEaXYgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChlcnJvckNvbnRhaW5lcklkKTtcbiAgICAgICAgZXJyb3JEaXYuaW5uZXJIVE1MPVwiPGgzPlwiICsgbWVzc2FnZSArIFwiPC9oMz5cIjtcbiAgICAgICAgZXJyb3JEaXYuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH0sXG5cbiAgICBzaG93X2Vycm9yX21lc3NhZ2VfcG9wdXA6IGZ1bmN0aW9uIChtZXNzYWdlKSB7XG4gICAgICAgIHZhciBhbGVydFBvcHVwID0gJGlvbmljUG9wdXAuYWxlcnQoe1xuICAgICAgICAgdGl0bGU6IFwiRXJyb3JcIixcbiAgICAgICAgIHRlbXBsYXRlOiBtZXNzYWdlXG4gICAgICAgIH0pO1xuICAgICAgICBhbGVydFBvcHVwLnRoZW4oZnVuY3Rpb24ocmVzKSB7XG4gICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH0sXG5cbiAgICBjaGVja19maWVsZHM6IGZ1bmN0aW9uIChmaWVsZHMsIGVycm9yQ29udGFpbmVySWQpIHtcbiAgICAgIHZhciBlcnJvcnMgPSBcIlwiO1xuICAgICAgZmllbGRzLmZvckVhY2goZnVuY3Rpb24oZmllbGQpIHtcbiAgICAgICAgaWYoZmllbGQudHlwZT09XCJub3ROdWxsXCIpe1xuICAgICAgICAgIGlmKCFWYWxpZGF0aW9uU2VydmljZS52YWxpZGF0ZV9ub3RfZW1wdHkoZmllbGQudmFsdWUpKXtcbiAgICAgICAgICAgIGVycm9ycyA9IGVycm9ycyArICc8aDM+LSBFbCBjYW1wbyBcIicgKyBmaWVsZC5uYW1lICsgJ1wiIG5vIHB1ZWRlIGVzdGFyIHZhY8Otby48L2gzPic7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmKGZpZWxkLnR5cGU9PVwiZW1haWxcIil7XG4gICAgICAgICAgaWYoIVZhbGlkYXRpb25TZXJ2aWNlLnZhbGlkYXRlX2VtYWlsKGZpZWxkLnZhbHVlKSl7XG4gICAgICAgICAgICBlcnJvcnMgPSBlcnJvcnMgKyAnPGgzPi0gRWwgY2FtcG8gXCInICsgZmllbGQubmFtZSArICdcIiBubyBlcyB1bmEgZGlyZWNjacOzbiBkZSBjb3JyZW8gdsOhbGlkYS48L2gzPic7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmKGZpZWxkLnR5cGU9PVwiaWRkb2NfdXlcIil7XG4gICAgICAgICAgaWYoIVZhbGlkYXRpb25TZXJ2aWNlLnZhbGlkYXRlX2lkZG9jX3V5KGZpZWxkLnZhbHVlKSl7XG4gICAgICAgICAgICBlcnJvcnMgPSBlcnJvcnMgKyAnPGgzPi0gRWwgY2FtcG8gXCInICsgZmllbGQubmFtZSArICdcIiBubyBlcyB1bmEgY8OpZHVsYSB1cnVndWF5YSB2w6FsaWRhLjwvaDM+JztcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYoZmllbGQudHlwZT09XCJ0d29fd29yZHNcIil7XG4gICAgICAgICAgaWYoIVZhbGlkYXRpb25TZXJ2aWNlLnZhbGlkYXRlX3R3b193b3JkcyhmaWVsZC52YWx1ZSkpe1xuICAgICAgICAgICAgZXJyb3JzID0gZXJyb3JzICsgJzxoMz4tIEVsIGNhbXBvIFwiJyArIGZpZWxkLm5hbWUgKyAnXCIgZGViZSBjb250ZW5lciBhbCBtZW5vcyBkb3MgcGFsYWJyYXMuPC9oMz4nO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZihmaWVsZC50eXBlPT1cImVxdWFsc1RvXCIpe1xuICAgICAgICAgIGlmKCFWYWxpZGF0aW9uU2VydmljZS52YWxpZGF0ZV9lcXVhbHNUbyhmaWVsZC52YWx1ZSwgZmllbGQuc2Vjb25kVmFsdWUpKXtcbiAgICAgICAgICAgIGVycm9ycyA9IGVycm9ycyArICc8aDM+LSBMb3MgY2FtcG9zIFwiJyArIGZpZWxkLm5hbWUgKyAnXCIgbm8gY29pbmNpZGVuLjwvaDM+JztcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgaWYoZXJyb3JzID09XCJcIil7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfWVsc2V7XG4gICAgICAgIHZhciBlcnJvckRpdiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGVycm9yQ29udGFpbmVySWQpO1xuICAgICAgICBlcnJvckRpdi5pbm5lckhUTUw9IGVycm9ycztcbiAgICAgICAgZXJyb3JEaXYuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgIH1cblxuXG4gIH07XG59XSk7XG4iLCJwbWJfaW0uc2VydmljZXMuZmFjdG9yeSgnTG9hZGVyJywgWyckaW9uaWNMb2FkaW5nJywgJyR0aW1lb3V0JywnJGlvbmljUG9wdXAnLGZ1bmN0aW9uKCRpb25pY0xvYWRpbmcsJHRpbWVvdXQsJGlvbmljUG9wdXApIHtcblxuICB2YXIgTE9BREVSQVBJID0ge1xuXG4gICAgc2hvd0xvYWRpbmc6IGZ1bmN0aW9uKHRleHQpIHtcbiAgICAgIHRleHQgPSB0ZXh0IHx8ICdMb2FkaW5nLi4uJztcbiAgICAgICRpb25pY0xvYWRpbmcuc2hvdyh7XG4gICAgICAgIHRlbXBsYXRlOiB0ZXh0XG4gICAgICB9KTtcbiAgICB9LFxuXG4gICAgaGlkZUxvYWRpbmc6IGZ1bmN0aW9uKCkge1xuICAgICAgJGlvbmljTG9hZGluZy5oaWRlKCk7XG4gICAgfSxcblxuICAgIHRvZ2dsZUxvYWRpbmdXaXRoTWVzc2FnZTogZnVuY3Rpb24odGV4dCwgdGltZW91dCkge1xuICAgICAgdmFyIHNlbGYgPSB0aGlzO1xuXG4gICAgICBzZWxmLnNob3dMb2FkaW5nKHRleHQpO1xuXG4gICAgICAkdGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgc2VsZi5oaWRlTG9hZGluZygpO1xuICAgICAgfSwgdGltZW91dCB8fCAzMDAwKTtcbiAgICB9LFxuXG4gICAgY29uZmlybVBvcHVwOmZ1bmN0aW9uKHRpdGxlLHRleHQpe1xuICAgICAgdmFyIGNvbmZpcm1Qb3B1cCA9ICRpb25pY1BvcHVwLmNvbmZpcm0oe1xuICAgICB0aXRsZTogdGl0bGUsXG4gICAgIHRlbXBsYXRlOiB0ZXh0XG4gICB9KTtcbiAgIHJldHVybiBjb25maXJtUG9wdXA7XG4gfSxcblxuXG4gICAgc2hvd0FsZXJ0OmZ1bmN0aW9uKF90aXRsZSxfdGVtcGxhdGUpIHtcbiAgICAgIHZhciBhbGVydFBvcHVwID0gJGlvbmljUG9wdXAuYWxlcnQoe1xuICAgICAgICB0aXRsZTogX3RpdGxlLFxuICAgICAgICB0ZW1wbGF0ZTogX3RlbXBsYXRlXG4gICAgICB9KTtcbiAgICAgIHJldHVybiBhbGVydFBvcHVwO1xuIH1cblxuICB9O1xuICByZXR1cm4gTE9BREVSQVBJO1xufV0pO1xuIiwicG1iX2ltLnNlcnZpY2VzLmZhY3RvcnkoJ0xvY2F0aW9uc1NlcnZpY2UnLCBbIGZ1bmN0aW9uKCkge1xuXG4gIHZhciBsb2NhdGlvbnNPYmogPSB7fTtcbiAgbG9jYXRpb25zT2JqLmluaXRpYWxfbGF0ID0gXCJcIjtcbiAgbG9jYXRpb25zT2JqLmluaXRpYWxfbG5nID0gXCJcIjtcbiAgbG9jYXRpb25zT2JqLmxhc3RfdXNlcl9sYXQgPSBcIlwiO1xuICBsb2NhdGlvbnNPYmoubGFzdF91c2VyX2xuZyA9IFwiXCI7XG4gIGxvY2F0aW9uc09iai5jb3VuY2lsX21vZGFsID0gbnVsbDtcbiAgbG9jYXRpb25zT2JqLnNlbGVjdGVkX2NvdW5jaWwgPSBudWxsO1xuXG4gIGxvY2F0aW9uc09iai5zZWxlY3RDb3VuY2lsID0gZnVuY3Rpb24oY291bmNpbE5hbWUpIHtcbiAgICBsb2NhdGlvbnNPYmouc2VsZWN0ZWRfY291bmNpbCA9ICBjb3VuY2lsTmFtZTtcbiAgfVxuXG4gIGxvY2F0aW9uc09iai5zYXZlX2luaXRpYWxfcG9zaXRpb24gPSBmdW5jdGlvbihwb3NpdGlvbikge1xuICAgIGxvY2F0aW9uc09iai5pbml0aWFsX2xhdCA9ICBwb3NpdGlvbi5jb29yZHMubGF0aXR1ZGU7XG4gICAgbG9jYXRpb25zT2JqLmluaXRpYWxfbG5nID0gIHBvc2l0aW9uLmNvb3Jkcy5sb25naXR1ZGU7XG4gIH1cblxuICBsb2NhdGlvbnNPYmouc2F2ZV9sYXN0X3VzZXJfcG9zaXRpb24gPSBmdW5jdGlvbihsYXQsbG5nKXtcbiAgICBsb2NhdGlvbnNPYmoubGFzdF91c2VyX2xhdCA9IGxhdDtcbiAgICBsb2NhdGlvbnNPYmoubGFzdF91c2VyX2xuZyA9IGxuZztcbiAgfVxuXG4gIGxvY2F0aW9uc09iai5zYXZlZExvY2F0aW9ucyA9IFtdO1xuXG4gIHJldHVybiBsb2NhdGlvbnNPYmo7XG5cbn1dKTtcbiIsIiAvL3BtYl9pbS5zZXJ2aWNlcy5mYWN0b3J5KCdNYXBTZXJ2aWNlJywgWyBmdW5jdGlvbigpIHtcbiBwbWJfaW0uc2VydmljZXMuZmFjdG9yeSgnTWFwU2VydmljZScsIFsnbGVhZmxldERhdGEnLCAnJGNvbXBpbGUnLCBmdW5jdGlvbihsZWFmbGV0RGF0YSwgJGNvbXBpbGUpIHtcblxuICAgLy9EZWZpbmljaW9uIGRlIGxhIHByb3llY2NjaW9uIFVUTSAyMSBzXG4gICBwcm9qNC5kZWZzKCdFUFNHOjMyNzIxJywgJytwcm9qPXV0bSArem9uZT0yMSArc291dGggK2VsbHBzPVdHUzg0ICtkYXR1bT1XR1M4NCArdW5pdHM9bSArbm9fZGVmcycpO1xuXG5cbiAgIHZhciBtYXBTZXJ2aWNlID0ge307XG5cbiAgIG1hcFNlcnZpY2UuZ29Ub1BsYWNlID0gZnVuY3Rpb24obmFtZSxsYXQsbG9uLHNjb3BlKSB7XG4gICAgdmFyIF9nZW9Kc29uID0ge1xuICAgICAgICAgICAgICBcInR5cGVcIjogXCJGZWF0dXJlQ29sbGVjdGlvblwiLFxuICAgICAgICAgICAgICBcImNyc1wiOiB7IFwidHlwZVwiOiBcIm5hbWVcIixcbiAgICAgICAgICAgICAgICAgICAgICBcInByb3BlcnRpZXNcIjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJuYW1lXCI6ICd1cm46b2djOmRlZjpjcnM6RVBTRzo6MzI3MjEnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIFwiZmVhdHVyZXNcIjogW1xuICAgICAgICAgICAgICAgIHsgXCJ0eXBlXCI6IFwiRmVhdHVyZVwiLFxuICAgICAgICAgICAgICAgIFwiZ2VvbWV0cnlcIjp7XG4gICAgICAgICAgICAgICAgICAgICAgIFwidHlwZVwiOlwiUG9pbnRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgXCJjb29yZGluYXRlc1wiOltsYXQsbG9uXVxuICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgXCJwcm9wZXJ0aWVzXCI6e1xuICAgICAgICAgICAgICAgICAgICAgIFwibm9tYnJlXCI6IG5hbWVcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgfTtcbiAgICAgbGVhZmxldERhdGEuZ2V0TWFwKCkudGhlbihmdW5jdGlvbihtYXApIHtcbiAgICAgIHZhciBfbGF0bG5nO1xuICAgICAgIHZhciBsYXllciA9IEwuUHJvai5nZW9Kc29uKF9nZW9Kc29uLCB7XG4gICAgICAgICAncG9pbnRUb0xheWVyJzogZnVuY3Rpb24oZmVhdHVyZSwgbGF0bG5nKSB7XG4gICAgICAgICAgIF9sYXRsbmcgPSBsYXRsbmc7XG4gICAgICAgICAgIHZhciBodG1sUG9wVXAgPSBcIjxwIGFsaWduPSdjZW50ZXInPlwiK2ZlYXR1cmUucHJvcGVydGllcy5ub21icmUrXCIgPGJyLz4gPGEgbmctY2xpY2s9J25ld19yZXBvcnRfZnJvbV9sYXRsb24oXCIrX2xhdGxuZy5sYXQrXCIsXCIrX2xhdGxuZy5sbmcrXCIpOyc+SW5pY2lhciByZXBvcnRlIGFxdcOtPC9hPjwvcD5cIjtcbiAgICAgICAgICAgdmFyIGNvbXBpbGVkID0gJGNvbXBpbGUoaHRtbFBvcFVwKShzY29wZSk7XG4gICAgICAgICAgIHJldHVybiBMLm1hcmtlcihsYXRsbmcpLmJpbmRQb3B1cChjb21waWxlZFswXSk7XG4gICAgICAgICB9XG4gICAgICAgfSk7XG5cbiAgICAgICBsYXllci5hZGRUbyhtYXApO1xuICAgICAgIG1hcC5zZXRWaWV3KF9sYXRsbmcsIDE4KTtcbiAgICAgICBsYXllci5vcGVuUG9wdXAoKTtcbiAgICAgfSk7XG4gICB9O1xuXG4gIG1hcFNlcnZpY2UuY2VudGVyTWFwT25Db29yZHMgPSBmdW5jdGlvbihsYXQsbG5nLHpvb20pIHtcbiAgICAgbGVhZmxldERhdGEuZ2V0TWFwKCkudGhlbihmdW5jdGlvbihtYXApIHtcbiAgICAgICAgbWFwLnNldFZpZXcobmV3IEwuTGF0TG5nKGxhdCwgbG5nKSx6b29tKTtcbiAgICAgICB9KTtcbiAgICAgfVxuXG4gICByZXR1cm4gbWFwU2VydmljZTtcblxuIH1dKTtcbiIsInBtYl9pbS5zZXJ2aWNlcy5mYWN0b3J5KCdNb2RhbFNlcnZpY2UnLCBbIGZ1bmN0aW9uKCkge1xuXG4gIHZhciBtb2RhbE9CSiA9IHt9O1xuICBtb2RhbE9CSi5hY3RpdmVNb2RhbCA9IG51bGw7XG5cbiAgbW9kYWxPQkouY2hlY2tOb01vZGFsSXNPcGVuID0gZnVuY3Rpb24oKSB7XG4gICAgaWYobW9kYWxPQkouYWN0aXZlTW9kYWwpe1xuICAgICAgbW9kYWxPQkouYWN0aXZlTW9kYWwuaGlkZSgpO1xuICAgICAgbW9kYWxPQkouYWN0aXZlTW9kYWwucmVtb3ZlKCk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG1vZGFsT0JKO1xuXG59XSk7XG4iLCJwbWJfaW0uc2VydmljZXMuZmFjdG9yeSgnUGluU2VydmljZScsIFsnJGh0dHAnLCAnbGVhZmxldERhdGEnLCdDb25maWdTZXJ2aWNlJywgZnVuY3Rpb24oJGh0dHAsIGxlYWZsZXREYXRhLCBDb25maWdTZXJ2aWNlKSB7XG5cbiAgdmFyIHBpbnNVUkwgPSBDb25maWdTZXJ2aWNlLmJhc2VVUkwgKyBcIi9vZmVydGEuZ2VvanNvbi8tMzQuODI4NTE4LC01NS45NTEzNzYvTUFUVVRJTk9cIjtcbiAgdmFyIGFwaVVSTCA9IENvbmZpZ1NlcnZpY2UuYmFzZVVSTCArIFwiL2FwaS9cIlxuLyoqXG4gICAqIENvbnN0cnVjdG9yLCB3aXRoIGNsYXNzIG5hbWVcbiAgICovXG4gIGZ1bmN0aW9uIFBpbihfZGF0YSkge1xuICAgIGFuZ3VsYXIuZXh0ZW5kKHRoaXMsIF9kYXRhKTtcbiAgfVxuXG5cbiAgUGluLmdldEFsbCA9IGZ1bmN0aW9uKCl7XG4gICAgcmV0dXJuICRodHRwLmdldChwaW5zVVJMLCB7Y2FjaGU6IGZhbHNlLCBwYXJhbXM6IHtoYXNoX2lkOk1hdGgucmFuZG9tKCl9fSk7XG4gIH1cblxuICBQaW4uc2VuZFVzZXJMb2NhdGlvbiA9IGZ1bmN0aW9uKGxhdGl0dWRlLGxvbmdpdHVkZSx1c2VybmFtZSxwYXNzd29yZCx1aWQpe1xuICAgIHZhciBib2R5ID0gJ3VzZXI9Jyt1c2VybmFtZSsnJnBhc3N3b3JkPScrcGFzc3dvcmQrJyZsYXQ9JytsYXRpdHVkZSsnJmxvbj0nK2xvbmdpdHVkZStcIiZ1aWQ9XCIrdWlkO1xuICAgIHJldHVybiAkaHR0cC5wb3N0KGFwaVVSTCArICdzZW5kX3VzZXJfcG9zaXRpb24nLCBib2R5LHt3aXRoQ3JlZGVudGlhbHM6IHRydWUsIGhlYWRlcnM6IHsnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCd9fSk7XG5cbiAgfVxuXG5cbiAgICBQaW4uX2FsbCA9IFtdO1xuICAgIFBpbi5jdXJyZW50ID0ge307XG4gICAgUGluLmxhc3RQaW5zUmVzcG9uc2UgPSBudWxsO1xuXG5cblxuXG4gICAgLyoqXG4gICAgICogU3RhdGljIG1ldGhvZCwgYXNzaWduZWQgdG8gY2xhc3NcbiAgICAgKiBJbnN0YW5jZSAoJ3RoaXMnKSBpcyBub3QgYXZhaWxhYmxlIGluIHN0YXRpYyBjb250ZXh0XG4gICAgICovXG4gICAgUGluLmJ1aWxkID0gZnVuY3Rpb24oX2RhdGEpIHtcblxuICAgICAgcmV0dXJuIG5ldyBQaW4oXG4gICAgICAgIF9kYXRhXG4gICAgICApO1xuICAgIH07XG5cbiAgICBQaW4ucHJvdG90eXBlLnNldExhdExuZyA9IGZ1bmN0aW9uIChsYXRsbmcpIHtcblxuICAgICAgdGhpcy5sYXQgPSBsYXRsbmcubGF0O1xuICAgICAgdGhpcy5sb24gPSBsYXRsbmcubG5nO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm4gdGhlIGNvbnN0cnVjdG9yIGZ1bmN0aW9uXG4gICAgICovXG4gICAgcmV0dXJuIFBpbjtcblxufV0pO1xuIiwicG1iX2ltLnNlcnZpY2VzLmZhY3RvcnkoJ1BvcFVwU2VydmljZScsIFsnJGlvbmljUG9wdXAnLCdWYWxpZGF0aW9uU2VydmljZScsIGZ1bmN0aW9uKCRpb25pY1BvcHVwLFZhbGlkYXRpb25TZXJ2aWNlKSB7XG5cbiAgcmV0dXJuIHtcbiAgICBzaG93X2FsZXJ0OiBmdW5jdGlvbiAoYWxlcnRfdGl0bGUsYWxlcnRfbWVzc2FnZSkge1xuICAgICAgICB2YXIgYWxlcnRQb3B1cCA9ICRpb25pY1BvcHVwLmFsZXJ0KHtcbiAgICAgICAgIHRpdGxlOiBhbGVydF90aXRsZSxcbiAgICAgICAgIHRlbXBsYXRlOiBhbGVydF9tZXNzYWdlXG4gICAgICAgIH0pO1xuICAgICAgICBhbGVydFBvcHVwLnRoZW4oZnVuY3Rpb24ocmVzKSB7XG4gICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9LFxuXG4gICBjb25maXJtUG9wdXA6IGZ1bmN0aW9uKHRpdGxlLHRleHQpe1xuICAgICB2YXIgY29uZmlybVBvcHVwID0gJGlvbmljUG9wdXAuY29uZmlybSh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU6IHRpdGxlLFxuICAgICAgICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlOiB0ZXh0XG4gICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICByZXR1cm4gY29uZmlybVBvcHVwO1xuICAgfSxcblxuICAgYXNrRm9yT25lVmFsdWVQb3BVcDogZnVuY3Rpb24oc2NvcGUsdGl0bGUsdGV4dCxmaWVsZF9uYW1lLHZhbGlkYXRpb25UeXBlKXtcbiAgICAgICRzY29wZSA9IHNjb3BlO1xuICAgICAgdmFyIG15UG9wdXAgPSAkaW9uaWNQb3B1cC5zaG93KHtcbiAgICAgIHRlbXBsYXRlOiBmaWVsZF9uYW1lICsgJzogPGlucHV0IHR5cGU9XCJ0ZXh0XCIgaWQ9XCJvbmVfdmFsdWVfcG9wdXBcIj48ZGl2IGlkPVwiZXJyb3JfY29udGFpbmVyX2luc2lkZVwiPjwvZGl2PicsXG4gICAgICB0aXRsZTogdGl0bGUsXG4gICAgICBzdWJUaXRsZTogdGV4dCxcbiAgICAgIHNjb3BlOiAkc2NvcGUsXG4gICAgICBidXR0b25zOiBbXG4gICAgICAgIHsgdGV4dDogJ0NhbmNlbGFyJyB9LFxuICAgICAgICB7XG4gICAgICAgICAgdGV4dDogJzxiPkVudmlhcjwvYj4nLFxuICAgICAgICAgIHR5cGU6ICdidXR0b24tcG9zaXRpdmUnLFxuICAgICAgICAgIG9uVGFwOiBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgICB2YXIgZXJyb3JzID0gXCJcIjtcbiAgICAgICAgICAgIHZhciB2YWx1ZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwib25lX3ZhbHVlX3BvcHVwXCIpLnZhbHVlO1xuICAgICAgICAgICAgaWYodmFsaWRhdGlvblR5cGU9PVwibm90TnVsbFwiKXtcbiAgICAgICAgICAgICAgaWYoIVZhbGlkYXRpb25TZXJ2aWNlLnZhbGlkYXRlX25vdF9lbXB0eSh2YWx1ZSkpe1xuICAgICAgICAgICAgICAgIGVycm9ycyA9IGVycm9ycyArICc8aDM+LSBFbCBjYW1wbyBcIicgKyBmaWVsZF9uYW1lICsgJ1wiIG5vIHB1ZWRlIGVzdGFyIHZhY8Otby48L2gzPic7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmKHZhbGlkYXRpb25UeXBlPT1cImVtYWlsXCIpe1xuICAgICAgICAgICAgICBpZighVmFsaWRhdGlvblNlcnZpY2UudmFsaWRhdGVfZW1haWwodmFsdWUpKXtcbiAgICAgICAgICAgICAgICBlcnJvcnMgPSBlcnJvcnMgKyAnPGgzPi0gRWwgY2FtcG8gXCInICsgZmllbGRfbmFtZSArICdcIiBubyBlcyB1bmEgZGlyZWNjacOzbiBkZSBjb3JyZW8gdsOhbGlkYS48L2gzPic7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmKHZhbGlkYXRpb25UeXBlPT1cImlkZG9jX3V5XCIpe1xuICAgICAgICAgICAgICBpZighVmFsaWRhdGlvblNlcnZpY2UudmFsaWRhdGVfaWRkb2NfdXkodmFsdWUpKXtcbiAgICAgICAgICAgICAgICBlcnJvcnMgPSBlcnJvcnMgKyAnPGgzPi0gRWwgY2FtcG8gXCInICsgZmllbGRfbmFtZSArICdcIiBubyBlcyB1bmEgY8OpZHVsYSB1cnVndWF5YSB2w6FsaWRhLjwvaDM+JztcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYodmFsaWRhdGlvblR5cGU9PVwidHdvX3dvcmRzXCIpe1xuICAgICAgICAgICAgICBpZighVmFsaWRhdGlvblNlcnZpY2UudmFsaWRhdGVfdHdvX3dvcmRzKHZhbHVlKSl7XG4gICAgICAgICAgICAgICAgZXJyb3JzID0gZXJyb3JzICsgJzxoMz4tIEVsIGNhbXBvIFwiJyArIGZpZWxkX25hbWUgKyAnXCIgZGViZSBjb250ZW5lciBhbCBtZW5vcyBkb3MgcGFsYWJyYXMuPC9oMz4nO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZihlcnJvcnMhPVwiXCIpe1xuICAgICAgICAgICAgICB2YXIgZXJyb3JEaXYgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImVycm9yX2NvbnRhaW5lcl9pbnNpZGVcIik7XG4gICAgICAgICAgICAgIGVycm9yRGl2LmlubmVySFRNTD0gZXJyb3JzO1xuICAgICAgICAgICAgICBlcnJvckRpdi5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiO1xuICAgICAgICAgICAgICAvL2Rvbid0IGFsbG93IHRoZSB1c2VyIHRvIGNsb3NlIHVubGVzcyBoZSBlbnRlcnMgd2lmaSBwYXNzd29yZFxuICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICBdXG4gICAgfSk7XG4gICAgcmV0dXJuIG15UG9wdXA7XG4gICB9XG5cblxuICB9O1xufV0pO1xuIiwicG1iX2ltLnNlcnZpY2VzLmZhY3RvcnkoJ1NlbWFwaG9yZVNlcnZpY2UnLCBbZnVuY3Rpb24oKSB7XG5cbiAgdmFyIHNlbWFwaG9yZU9iaiA9IHt9O1xuICBzZW1hcGhvcmVPYmouc2VtYXBob3JlcyA9IG5ldyBBcnJheSgpO1xuICBzZW1hcGhvcmVPYmouc2VtYXBob3Jlc1snb3Blbi1tb2RhbCddID0gXCJhdmFpbGFibGVcIjtcbiAgc2VtYXBob3JlT2JqLnNlbWFwaG9yZXNbJ3N1Ym1pdC1mb3JtJ10gPSBcImF2YWlsYWJsZVwiO1xuICBzZW1hcGhvcmVPYmouc2VtYXBob3Jlc1snc3VibWl0LWxvY2F0aW9uJ10gPSBcImF2YWlsYWJsZVwiO1xuICBzZW1hcGhvcmVPYmouc2VtYXBob3Jlc1snY2FuX3RhbGsnXSA9IFwiYXZhaWxhYmxlXCI7XG5cblxuXG5cbiAgc2VtYXBob3JlT2JqLnRha2VJZkF2YWlsYWJsZSA9IGZ1bmN0aW9uKHNlbWFwaG9yZUlkKSB7XG4gICAgLy9jb25zb2xlLmxvZyhzZW1hcGhvcmVJZCArIFwiOlwiICsgc2VtYXBob3JlT2JqLnNlbWFwaG9yZXNbc2VtYXBob3JlSWRdKTtcbiAgICBpZihzZW1hcGhvcmVPYmouc2VtYXBob3Jlc1tzZW1hcGhvcmVJZF09PVwiYXZhaWxhYmxlXCIpe1xuICAgICAgICBzZW1hcGhvcmVPYmouc2VtYXBob3Jlc1tzZW1hcGhvcmVJZF0gPSBcIm9jY3VwaWVkXCI7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1lbHNle1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIHNlbWFwaG9yZU9iai5tYWtlQXZhaWxhYmxlQWdhaW4gPSBmdW5jdGlvbihzZW1hcGhvcmVJZCkge1xuICAgIGlmKHNlbWFwaG9yZU9iai5zZW1hcGhvcmVzW3NlbWFwaG9yZUlkXT09XCJvY2N1cGllZFwiKXtcbiAgICAgICAgc2VtYXBob3JlT2JqLnNlbWFwaG9yZXNbc2VtYXBob3JlSWRdID0gXCJhdmFpbGFibGVcIjtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfWVsc2V7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHNlbWFwaG9yZU9iajtcblxufV0pO1xuIiwicG1iX2ltLnNlcnZpY2VzLmZhY3RvcnkoJ2xvY2F0aW9uQVBJJywgWyckaHR0cCcsICckcScsICdBcGlJbUVuZHBvaW50JywgJ0FwaURhdGFFbmRwb2ludCcsICdDb25maWdTZXJ2aWNlJywgJ0xvY2F0aW9uc1NlcnZpY2UnLCBmdW5jdGlvbigkaHR0cCwgJHEsIEFwaUltRW5kcG9pbnQsIEFwaURhdGFFbmRwb2ludCwgQ29uZmlnU2VydmljZSwgTG9jYXRpb25zU2VydmljZSkge1xuXG4gIHZhciByZXN0UHJlZmZpeCA9IFwidWJpY2FjaW9uZXNSZXN0UHJvZFwiO1xuXG5cbiAgdmFyIGxvY2F0aW9uQVBJID0ge307XG5cbiAgbG9jYXRpb25BUEkuc2VhcmNoTG9jYXRpb25CeVN0ciA9IGZ1bmN0aW9uKF9sb2NhdGlvbikge1xuICAgIC8qcmV0dXJuICRodHRwLmdldChBcGlJbUVuZHBvaW50LnVybCArICcvJyArIHJlc3RQcmVmZml4ICsgJy9jYWxsZXMnLCB7XG4gICAgICBtZXRob2Q6ICdHRVQnLFxuICAgICAgcGFyYW1zOiB7XG4gICAgICAgIG5vbWJyZTogX2xvY2F0aW9uXG4gICAgICB9XG4gICAgfSk7Ki9cbiAgICB2YXIgYmFzZVVSTCA9IENvbmZpZ1NlcnZpY2UuYmFzZVVSTCArIFwiL2FqYXgvZ2VvY29kZT90ZXJtPVwiICsgTG9jYXRpb25zU2VydmljZS5zZWxlY3RlZF9jb3VuY2lsICsgXCIsXCIgKyBfbG9jYXRpb247XG4gICAgcmV0dXJuICRodHRwLmdldChiYXNlVVJMLCB7XG4gICAgICBtZXRob2Q6ICdHRVQnLFxuICAgICAgcGFyYW1zOiB7fVxuICAgIH0pO1xuICB9O1xuXG5cbiAgbG9jYXRpb25BUEkuc2VhcmNoRXNxdWluYUJ5U3RyID0gZnVuY3Rpb24oX2xvY2F0aW9uKSB7XG4gICAgLy9jb25zb2xlLmxvZyhcInNlYXJjaEVzcXVpbmFCeVN0ciA9IFwiICsgSlNPTi5zdHJpbmdpZnkoX2xvY2F0aW9uKSk7XG4gICAgLy9yZXR1cm4gJGh0dHAuZ2V0KEFwaUltRW5kcG9pbnQudXJsICsgJy8nICsgcmVzdFByZWZmaXggKyAnL2VzcXVpbmEvJyArIF9sb2NhdGlvbi5jYWxsZSArICcvJyArIF9sb2NhdGlvbi5lc3F1aW5hLCB7XG4gICAgICAvKnJldHVybiAkaHR0cC5nZXQoQXBpSW1FbmRwb2ludC51cmwgKyAnLycgKyByZXN0UHJlZmZpeCArICcvY3J1Y2VzLycgKyBfbG9jYXRpb24uY2FsbGUgKyAnLycsXG4gICAgICB7XG4gICAgICAgIHBhcmFtczoge1xuICAgICAgICAgIG5vbWJyZTogX2xvY2F0aW9uLmVzcXVpbmFcbiAgICAgICAgfVxuICAgICAgfSk7Ki9cblxuICAgICAgdmFyIGJhc2VVUkwgPSBDb25maWdTZXJ2aWNlLmJhc2VVUkwgKyBcIi9hamF4L2dlb2NvZGU/dGVybT1cIiArIExvY2F0aW9uc1NlcnZpY2Uuc2VsZWN0ZWRfY291bmNpbCArIFwiLFwiXG4gICAgICAgICAgICAgICAgICAgICsgX2xvY2F0aW9uLmNhbGxlICsgXCIsXCIgKyBfbG9jYXRpb24uZXNxdWluYTtcbiAgICAgIHJldHVybiAkaHR0cC5nZXQoYmFzZVVSTCwge1xuICAgICAgICBtZXRob2Q6ICdHRVQnLFxuICAgICAgICBwYXJhbXM6IHt9XG4gICAgICB9KTtcbiAgfTtcblxuICBsb2NhdGlvbkFQSS5nZXRMb2NhdGlvbkdlb20gPSBmdW5jdGlvbihfbG9jYXRpb24pIHtcbiAgICB2YXIgdXJsID0gQXBpSW1FbmRwb2ludC51cmwgKyAnLycgKyByZXN0UHJlZmZpeCArIGxvY2F0aW9uQVBJLmdldFBhcmFtUGF0aEJ5VGlwbyhfbG9jYXRpb24udGlwbyk7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBfbG9jYXRpb24ucGF0aFBhcmFtcy5sZW5ndGg7IGkrKykge1xuICAgICAgdXJsICs9ICcvJyArIF9sb2NhdGlvbi5wYXRoUGFyYW1zW2ldO1xuICAgIH1cbiAgICByZXR1cm4gJGh0dHAuZ2V0KGJhc2VVUkwpLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2Upe1xuICAgICAgcmV0dXJuIHJlc3BvbnNlLmRhdGE7XG4gICAgfSk7XG4gIH07XG5cbiAgbG9jYXRpb25BUEkuZ2V0TG9jYXRpb25HZW9tUE1CID0gZnVuY3Rpb24oY2FsbGUsZXNxdWluYV9udW1lcm8sdGlwbykge1xuICAgIHZhciBiYXNlVVJMID0gQ29uZmlnU2VydmljZS5iYXNlVVJMICsgXCIvYWpheC9nZW9jb2RlP3Rlcm09XCIgKyBMb2NhdGlvbnNTZXJ2aWNlLnNlbGVjdGVkX2NvdW5jaWwgKyBcIixcIlxuICAgICAgICAgICAgICArIGNhbGxlICsgXCIsXCIgKyBlc3F1aW5hX251bWVybyArIFwiLFwiICsgdGlwbztcblxuICAgIHJldHVybiAkaHR0cC5nZXQoYmFzZVVSTCk7XG5cbiAgfTtcblxuICBsb2NhdGlvbkFQSS5nZXRQYXJhbVBhdGhCeVRpcG8gPSBmdW5jdGlvbihfdGlwbykge1xuXG4gICAgdmFyIHJlc3RHZW9EYXRhU2VydmljZVBhdGggPSB7XG4gICAgICAnRVNRVUlOQSc6XCIvZXNxdWluYVwiLFxuICAgICAgJ0RJUkVDQ0lPTic6XCIvZGlyZWNjaW9uXCJcbiAgICB9O1xuXG4gICAgcmV0dXJuIHJlc3RHZW9EYXRhU2VydmljZVBhdGhbX3RpcG9dO1xuXG5cbiAgfTtcblxuICByZXR1cm4gbG9jYXRpb25BUEk7XG5cbn1dKTtcbiIsInBtYl9pbS5zZXJ2aWNlcy5mYWN0b3J5KCdfJywgW2Z1bmN0aW9uKCkge1xuICByZXR1cm4gd2luZG93Ll87IC8vVW5kZXJzY29yZSBtdXN0IGFscmVhZHkgYmUgbG9hZGVkIG9uIHRoZSBwYWdlXG59XSk7XG4iLCJwbWJfaW0uc2VydmljZXMuZmFjdG9yeSgnVXNlclNlcnZpY2UnLCBbJyRodHRwJywgZnVuY3Rpb24oJGh0dHApIHtcblxuICAvL3ZhciBiYXNlVVJMID0gXCJodHRwOi8vcG1idXkuZGV2ZWxvcG1lbnQuZGF0YXV5Lm9yZy9hdXRoL2FqYXgvXCI7XG4gIHZhciBVc2VyT2JqID0ge307XG4gIFVzZXJPYmoudWlkID0gbnVsbDtcbiAgVXNlck9iai5uYW1lID0gbnVsbDtcbiAgVXNlck9iai5lbWFpbCA9IG51bGw7XG4gIFVzZXJPYmoucGFzc3dvcmQgPSBudWxsO1xuICBVc2VyT2JqLnBpY3R1cmVfdXJsID0gXCJ1cmwoLi9pbWcvaWNvbi11c2VyLWFub255bW91cy5wbmcpXCI7XG4gIFVzZXJPYmouc2hvd19sb2NhdGlvbiA9IG51bGw7XG5cblxuICBVc2VyT2JqLnNhdmVfdXNlcl9kYXRhID0gZnVuY3Rpb24gKHVzZXJfbmFtZSwgdXNlcl9wYXNzd29yZCwgdXNlcl9waWN0dXJlX3VybCwgc2hvd19sb2NhdGlvbiwgdWlkLCBzdGF0dXMsIGdlbmRlciwgaW50ZXJlc3RlZCkge1xuICAgICAgVXNlck9iai51aWQgPSB1aWQ7XG4gICAgICBVc2VyT2JqLm5hbWUgPSB1c2VyX25hbWU7XG4gICAgICBVc2VyT2JqLnBhc3N3b3JkID0gdXNlcl9wYXNzd29yZDtcbiAgICAgIFVzZXJPYmoucGljdHVyZV91cmwgPSB1c2VyX3BpY3R1cmVfdXJsO1xuICAgICAgVXNlck9iai5zaG93X2xvY2F0aW9uID0gc2hvd19sb2NhdGlvbjtcbiAgICAgIFVzZXJPYmouc3RhdHVzID0gc3RhdHVzO1xuICAgICAgVXNlck9iai5nZW5kZXIgPSBnZW5kZXI7XG4gICAgICBVc2VyT2JqLmludGVyZXN0ZWQgPSBpbnRlcmVzdGVkO1xuXG4gICAgICAvL1NBVkUgSU4gUE9VQ0hEQlxuICB9XG5cbiAgVXNlck9iai5lcmFzZV91c2VyX2RhdGEgPSBmdW5jdGlvbiAoKSB7XG4gICAgVXNlck9iai5uYW1lID0gbnVsbDtcbiAgICBVc2VyT2JqLmVtYWlsID0gbnVsbDtcbiAgICBVc2VyT2JqLnBhc3N3b3JkID0gbnVsbDtcbiAgICBVc2VyT2JqLmlkZW50aXR5X2RvY3VtZW50ID0gbnVsbDtcbiAgICBVc2VyT2JqLnBob25lID0gbnVsbDtcbiAgICBVc2VyT2JqLnBpY3R1cmVfdXJsID0gbnVsbDtcbiAgICAvL0RFTEVURSBJTiBQT1VDSERCXG4gIH1cblxuICBVc2VyT2JqLmdldF91c2VyX2RhdGEgPSBmdW5jdGlvbiAoKSB7XG4gICAgLy9MRVZBTlRBIERFIFBPVUNIREIgTE9TIERBVE9TIERFTCBVU1VBUklPLiBTSSBIQVkgTE9TIFBPTkUgRU4gTEFTIFZBUklBQkxFUyBERUwgU0VSVklDSU8uIFNJIE5PIEhBWSBQT05FIFRPRE8gTlVMTFxuICB9XG5cbiAgVXNlck9iai5hZGRfcGhvdG8gPSBmdW5jdGlvbiAodXNlcl9waWN0dXJlX3VybCkge1xuICAgIFVzZXJPYmoucGljdHVyZV91cmwgPSB1c2VyX3BpY3R1cmVfdXJsO1xuICB9XG5cbiAgVXNlck9iai5pc0xvZ2dlZCA9IGZ1bmN0aW9uICgpIHtcbiAgICBpZihVc2VyT2JqLm5hbWUhPW51bGwgJiYgVXNlck9iai5uYW1lIT1cIlwiKXtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1lbHNle1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuXG5cbiAgcmV0dXJuIFVzZXJPYmo7XG5cbn1dKTtcbiIsInBtYl9pbS5zZXJ2aWNlcy5mYWN0b3J5KCdWYWxpZGF0aW9uU2VydmljZScsIFsnJGh0dHAnLCckaW9uaWNQb3B1cCcsIGZ1bmN0aW9uKCRodHRwLCRpb25pY1BvcHVwKSB7XG5cbiAgcmV0dXJuIHtcbiAgICBpc01vYmlsZURldmljZTogZnVuY3Rpb24oKXtcbiAgICAgIGlmKHdpbmRvdy5jb3Jkb3ZhKXtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG5cbiAgICB9LFxuXG4gICAgdmFsaWRhdGVfbm90X2VtcHR5OiBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgaWYodmFsdWUhPW51bGwgJiYgdmFsdWUhPVwidW5kZWZpbmVkXCIgJiYgdmFsdWUhPVwiXCIpe1xuICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9ZWxzZXtcbiAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9LFxuXG4gICAgdmFsaWRhdGVfdHdvX3dvcmRzOiBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgaWYodmFsdWUhPW51bGwgJiYgdmFsdWUhPVwidW5kZWZpbmVkXCIgJiYgdmFsdWUhPVwiXCIpe1xuICAgICAgICAgIHZhciB2YWx1ZXMgPSB2YWx1ZS5zcGxpdCgnICcpLmZpbHRlcihmdW5jdGlvbih2KXtyZXR1cm4gdiE9PScnfSk7XG4gICAgICAgICAgaWYgKHZhbHVlcy5sZW5ndGggPiAxKSB7XG4gICAgICAgICAgICAgIC8vdHdvIG9yIG1vcmUgd29yZHNcbiAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgLy9ub3QgZW5vdWdoIHdvcmRzXG4gICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICB9XG4gICAgICAgIH1lbHNle1xuICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgIH0sXG5cbiAgICB2YWxpZGF0ZV9lcXVhbHNUbzogZnVuY3Rpb24gKHZhbHVlLHNlY29uZFZhbHVlKSB7XG4gICAgICBpZih2YWx1ZT09c2Vjb25kVmFsdWUpe1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1lbHNle1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgfSxcblxuICAgIHZhbGlkYXRlX2VtYWlsOiBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgaWYodmFsdWUhPW51bGwgJiYgdmFsdWUhPVwidW5kZWZpbmVkXCIgJiYgdmFsdWUhPVwiXCIpe1xuICAgICAgICAgIHZhciByZSA9IC9eKChbXjw+KClcXFtcXF1cXFxcLiw7Olxcc0BcIl0rKFxcLltePD4oKVxcW1xcXVxcXFwuLDs6XFxzQFwiXSspKil8KFwiLitcIikpQCgoXFxbWzAtOV17MSwzfVxcLlswLTldezEsM31cXC5bMC05XXsxLDN9XFwuWzAtOV17MSwzfV0pfCgoW2EtekEtWlxcLTAtOV0rXFwuKStbYS16QS1aXXsyLH0pKSQvO1xuICAgICAgICAgIHJldHVybiByZS50ZXN0KHZhbHVlKTtcbiAgICAgICAgfWVsc2V7XG4gICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfSxcblxuICAgIHZhbGlkYXRlX2lkZG9jX3V5OiBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgIGlmKHZhbHVlIT1udWxsICYmIHZhbHVlIT1cInVuZGVmaW5lZFwiICYmIHZhbHVlIT1cIlwiKXtcbiAgICAgICAgICB2YWx1ZSA9IHZhbHVlLnJlcGxhY2UoL1xcRC9nLCAnJyk7XG4gICAgICAgICAgdmFyIGRpZyA9IHZhbHVlW3ZhbHVlLmxlbmd0aCAtIDFdO1xuICAgICAgICAgIHZhciBhID0gMDsgdmFyIGkgPSAwO1xuICAgICAgICAgIGlmKHZhbHVlLmxlbmd0aCA8PSA2KXtcbiAgICAgICAgICAgIGZvcihpID0gdmFsdWUubGVuZ3RoOyBpIDwgNzsgaSsrKXtcbiAgICAgICAgICAgICAgdmFsdWUgPSAnMCcgKyB2YWx1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgZm9yKGkgPSAwOyBpIDwgNzsgaSsrKXtcbiAgICAgICAgICAgIGEgKz0gKHBhcnNlSW50KFwiMjk4NzYzNFwiW2ldKSAqIHBhcnNlSW50KHZhbHVlW2ldKSkgJSAxMDtcbiAgICAgICAgICB9XG4gICAgICAgICAgdmFyIHJlc3VsdDtcbiAgICAgICAgICBpZihhJTEwID09PSAwKXtcbiAgICAgICAgICAgIHJlc3VsdCA9IDA7XG4gICAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICByZXN1bHQgPSAxMCAtIGEgJSAxMDtcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYoZGlnID09IHJlc3VsdCl7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICB9ZWxzZXtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICB9XG4gICAgICB9ZWxzZXtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgIH1cbiAgfTtcbn1dKTtcbiJdfQ==
