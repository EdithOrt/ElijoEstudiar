window.VERSION = "0.0.1";var pmb_im={controllers:angular.module("pmb_im.controllers",[]),services:angular.module("pmb_im.services",[])};pmb_im.app=angular.module("pmb_im",["ionic","ionic.wizard","ion-autocomplete","leaflet-directive","pmb_im.controllers","pmb_im.services","ngCordova"]).constant("ApiImEndpoint",{url:"http://www.montevideo.gub.uy"}).constant("ApiDataEndpoint",{url:"http://backend.educacion.thor.datauy.org"}).run(["$ionicPlatform","$rootScope","$cordovaKeyboard",function(e,t,n){t.VERSION=window.VERSION,e.ready(function(){window.cordova&&window.cordova.plugins.Keyboard&&(cordova.plugins.Keyboard.hideKeyboardAccessoryBar(!1),cordova.plugins.Keyboard.disableScroll(!1)),ionic.Platform.isFullScreen=!0,window.StatusBar&&StatusBar.styleDefault()})}]).config(["$stateProvider","$urlRouterProvider","$compileProvider","$ionicConfigProvider",function(e,t,n,o){n.debugInfoEnabled(!1),e.state("app",{cache:!1,url:"/app","abstract":!0,templateUrl:"templates/menu.html",controller:"AbsController"}).state("app.map",{cache:!1,url:"/map",views:{menuContent:{templateUrl:"templates/map.html",controller:"MapController"}}}).state("app.form",{cache:!1,url:"/form",views:{menuContent:{templateUrl:"templates/form.html",controller:"FormCtrl"}}}).state("app.intro",{cache:!1,url:"/intro",views:{menuContent:{templateUrl:"templates/intro.html",controller:"IntroCtrl"}}}),t.otherwise("/app/intro")}]),pmb_im.services.factory("AuthService",["$http","$cordovaFileTransfer","ConfigService","ValidationService",function(e,t,n,o){var a=n.baseURL+"/api/";return{log_in:function(t,n){var o="user="+t+"&password="+n;return e.post(a+"login",o,{withCredentials:!0,headers:{"Content-Type":"application/x-www-form-urlencoded"}})},sign_out:function(t,n){return e.get(a+"sign_out",{withCredentials:!0,params:{password_sign_in:t,email:n}})},create_user:function(n){if(n.picture_url&&o.isMobileDevice()){var r={fileKey:"photo",withCredentials:!0,params:{user:n.username,password:n.password,email:n.email,gender:n.gender,interested:n.interested,status:n.status,show_location:n.show_location}},i=!0;return t.upload(a+"create_user",n.picture_url,r,i)}if(n.picture_url){var s=new FormData;return s.append("photo",n.picture_url),s.append("user",n.username),s.append("password",n.password),s.append("email",n.email),s.append("gender",n.gender),s.append("interested",n.interested),s.append("status",n.status),s.append("show_location",n.show_location),e.post(a+"create_user",s,{headers:{"Content-Type":void 0},transformRequest:angular.identity})}var l="user="+n.username+"&password="+n.password+"&email="+n.email+"&gender="+n.gender;return l=l+"&interested="+n.interested+"&status="+n.status+"&show_location="+n.show_location,e.post(a+"create_user",l,{withCredentials:!0,headers:{"Content-Type":"application/x-www-form-urlencoded"}})},password_recovery:function(t){return e.get(a+"forgot_password",{params:{login_email:t}})},password_change:function(t,n,o,r){var i="email="+t+"&password_sign_in="+n+"&new_password="+o+"&confirm="+r;return e.post(a+"change_password",i,{headers:{"Content-Type":"application/x-www-form-urlencoded"}})},edit_user:function(n){if(n.picture_url&&o.isMobileDevice()){var r={fileKey:"photo",withCredentials:!0,params:{user:n.username,password:n.password,email:n.email,gender:n.gender,interested:n.interested,status:n.status,show_location:n.show_location}},i=!0;return t.upload(a+"edit_profile",n.picture_url,r,i)}var s="user="+n.username+"&password="+n.password+"&email="+n.email+"&gender="+n.gender;if(s=s+"&interested="+n.interested+"&status="+n.status+"&show_location="+n.show_location,n.picture_url){var l=new FormData;return l.append("photo",n.picture_url),l.append("user",n.username),l.append("password",n.password),l.append("email",n.email),l.append("gender",n.gender),l.append("interested",n.interested),l.append("status",n.status),l.append("show_location",n.show_location),e.post(a+"edit_profile",l,{headers:{"Content-Type":void 0},transformRequest:angular.identity})}return e.post(a+"edit_profile",s,{withCredentials:!0,headers:{"Content-Type":"application/x-www-form-urlencoded"}})}}}]),pmb_im.services.factory("ConfigService",["$http",function(e){var t={};return t.baseURL="http://backend.educacion.thor.datauy.org",ionic.Platform.isWebView()?t.baseURL="http://backend.educacion.thor.datauy.org":t.baseURL="/backend",t.AppName="Elijo Estudiar",t}]),pmb_im.services.factory("ConnectivityService",["$cordovaNetwork",function(e){return{isOnline:function(){return!0},isOffline:function(){return!1}}}]),pmb_im.services.factory("DBService",["$q",function(e){function t(e,t,o,a,r,i,s,l){var c={_id:"user-logged",name:e,password:t,picture_url:o,show_location:a,uid:r,status:i,gender:s,interested:l};n().then(function(e){return c._rev=e._rev,m.put(c)})["catch"](function(e){return m.put(c)})}function n(){return m.get("user-logged")}function o(){m.get("user-logged").then(function(e){return m.remove(e)})}function a(){return m=new PouchDB("tomamosuna_local_db")}function r(e){var t=new Date,n="report_"+t.getFullYear()+(t.getMonth()+1)+t.getDate()+t.getMilliseconds();return e._id=n,m.put(e)}function i(e){return m.put(e)}function s(){return m.get("categories-list")}function l(e){s().then(function(t){return e._rev=t._rev,m.put(e)})["catch"](function(t){return e._id="categories-list",m.put(e)})}function c(e){return m.get(e)}function u(){return m.allDocs({include_docs:!0,attachments:!1,startkey:"report_",endkey:"report_￿"})}function d(e){m.get(e).then(function(e){return m.remove(e)})}function p(e){return m.remove(e)}var m;return{initDB:a,saveUser:t,getUser:n,eraseUser:o,saveReport:r,getReport:c,getAllReports:u,updateReport:i,deleteReport:d,deleteGivenReport:p,getCategories:s,saveCategories:l}}]),pmb_im.services.factory("ErrorService",["$http","$ionicPopup","ValidationService",function(e,t,n){return{http_response_is_successful:function(e,t){var n=document.getElementById(t);return e.data&&"success"==e.data.Status||"success"==e.Status?(n.style.display="none",!0):(e.data?n.innerHTML="<h3>"+e.data.Message+"</h3>":n.innerHTML="<h3>"+e.Message+"</h3>",n.style.display="block",!1)},http_response_is_successful_ajax:function(e){return 0!=e.data.result},http_response_is_successful_popup:function(e){if(0==e.data.result){var n=t.alert({title:"Error",template:e.data.message});return n.then(function(e){return!1}),!1}return!0},http_data_response_is_successful:function(e,t){var n=document.getElementById(t);return"success"!=e.Status?(n.innerHTML="<h3>"+e.Message+"</h3>",n.style.display="block",!1):(n.style.display="none",!0)},http_data_response_is_successful_ajax:function(e){return 0!=e.result},show_error_message:function(e,t){var n=document.getElementById(e);return n.innerHTML="<h3>"+t+"</h3>",n.style.display="block",!1},show_error_message_popup:function(e){var n=t.alert({title:"Error",template:e});return n.then(function(e){return!1}),!1},check_fields:function(e,t){var o="";if(e.forEach(function(e){"notNull"==e.type&&(n.validate_not_empty(e.value)||(o=o+'<h3>- El campo "'+e.name+'" no puede estar vacío.</h3>')),"email"==e.type&&(n.validate_email(e.value)||(o=o+'<h3>- El campo "'+e.name+'" no es una dirección de correo válida.</h3>')),"iddoc_uy"==e.type&&(n.validate_iddoc_uy(e.value)||(o=o+'<h3>- El campo "'+e.name+'" no es una cédula uruguaya válida.</h3>')),"two_words"==e.type&&(n.validate_two_words(e.value)||(o=o+'<h3>- El campo "'+e.name+'" debe contener al menos dos palabras.</h3>')),"equalsTo"==e.type&&(n.validate_equalsTo(e.value,e.secondValue)||(o=o+'<h3>- Los campos "'+e.name+'" no coinciden.</h3>'))}),""==o)return!0;var a=document.getElementById(t);return a.innerHTML=o,a.style.display="block",!1}}}]),pmb_im.services.factory("Loader",["$ionicLoading","$timeout","$ionicPopup",function(e,t,n){var o={showLoading:function(t){t=t||"Loading...",e.show({template:t})},hideLoading:function(){e.hide()},toggleLoadingWithMessage:function(e,n){var o=this;o.showLoading(e),t(function(){o.hideLoading()},n||3e3)},confirmPopup:function(e,t){var o=n.confirm({title:e,template:t});return o},showAlert:function(e,t){var o=n.alert({title:e,template:t});return o}};return o}]),pmb_im.services.factory("LocationsService",[function(){var e={};return e.initial_lat="",e.initial_lng="",e.last_user_lat="",e.last_user_lng="",e.council_modal=null,e.selected_council=null,e.selectCouncil=function(t){e.selected_council=t},e.save_initial_position=function(t){e.initial_lat=t.coords.latitude,e.initial_lng=t.coords.longitude},e.save_last_user_position=function(t,n){e.last_user_lat=t,e.last_user_lng=n},e.savedLocations=[],e}]),pmb_im.services.factory("MapService",["leafletData","$compile",function(e,t){proj4.defs("EPSG:32721","+proj=utm +zone=21 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs");var n={};return n.goToPlace=function(n,o,a,r){var i={type:"FeatureCollection",crs:{type:"name",properties:{name:"urn:ogc:def:crs:EPSG::32721"}},features:[{type:"Feature",geometry:{type:"Point",coordinates:[o,a]},properties:{nombre:n}}]};e.getMap().then(function(e){var n,o=L.Proj.geoJson(i,{pointToLayer:function(e,o){n=o;var a="<p align='center'>"+e.properties.nombre+" <br/> <a ng-click='new_report_from_latlon("+n.lat+","+n.lng+");'>Iniciar reporte aquí</a></p>",i=t(a)(r);return L.marker(o).bindPopup(i[0])}});o.addTo(e),e.setView(n,18),o.openPopup()})},n.centerMapOnCoords=function(t,n,o){e.getMap().then(function(e){e.setView(new L.LatLng(t,n),o)})},n}]),pmb_im.services.factory("ModalService",[function(){var e={};return e.activeModal=null,e.checkNoModalIsOpen=function(){e.activeModal&&(e.activeModal.hide(),e.activeModal.remove())},e}]),pmb_im.services.factory("PinService",["$http","leafletData","ConfigService",function(e,t,n){function o(e){angular.extend(this,e)}var a=n.baseURL+"/oferta.geojson/-34.828518,-55.951376/MATUTINO",r=n.baseURL+"/api/";return o.getAll=function(){return e.get(a,{cache:!1,params:{hash_id:Math.random()}})},o.sendUserLocation=function(t,n,o,a,i){var s="user="+o+"&password="+a+"&lat="+t+"&lon="+n+"&uid="+i;return e.post(r+"send_user_position",s,{withCredentials:!0,headers:{"Content-Type":"application/x-www-form-urlencoded"}})},o._all=[],o.current={},o.lastPinsResponse=null,o.build=function(e){return new o(e)},o.prototype.setLatLng=function(e){this.lat=e.lat,this.lon=e.lng},o}]),pmb_im.services.factory("PopUpService",["$ionicPopup","ValidationService",function(e,t){return{show_alert:function(t,n){var o=e.alert({title:t,template:n});return o.then(function(e){return!0}),!0},confirmPopup:function(t,n){var o=e.confirm({title:t,template:n});return o},askForOneValuePopUp:function(n,o,a,r,i){$scope=n;var s=e.show({template:r+': <input type="text" id="one_value_popup"><div id="error_container_inside"></div>',title:o,subTitle:a,scope:$scope,buttons:[{text:"Cancelar"},{text:"<b>Enviar</b>",type:"button-positive",onTap:function(e){var n="",o=document.getElementById("one_value_popup").value;if("notNull"==i&&(t.validate_not_empty(o)||(n=n+'<h3>- El campo "'+r+'" no puede estar vacío.</h3>')),"email"==i&&(t.validate_email(o)||(n=n+'<h3>- El campo "'+r+'" no es una dirección de correo válida.</h3>')),"iddoc_uy"==i&&(t.validate_iddoc_uy(o)||(n=n+'<h3>- El campo "'+r+'" no es una cédula uruguaya válida.</h3>')),"two_words"==i&&(t.validate_two_words(o)||(n=n+'<h3>- El campo "'+r+'" debe contener al menos dos palabras.</h3>')),""==n)return o;var a=document.getElementById("error_container_inside");a.innerHTML=n,a.style.display="block",e.preventDefault()}}]});return s}}}]),pmb_im.services.factory("SemaphoreService",[function(){var e={};return e.semaphores=new Array,e.semaphores["open-modal"]="available",e.semaphores["submit-form"]="available",e.semaphores["submit-location"]="available",e.semaphores.can_talk="available",e.takeIfAvailable=function(t){return"available"==e.semaphores[t]&&(e.semaphores[t]="occupied",!0)},e.makeAvailableAgain=function(t){return"occupied"==e.semaphores[t]&&(e.semaphores[t]="available",!0)},e}]),pmb_im.services.factory("locationAPI",["$http","$q","ApiImEndpoint","ApiDataEndpoint","ConfigService","LocationsService",function(e,t,n,o,a,r){var i="ubicacionesRestProd",s={};return s.searchLocationByStr=function(t){var n=a.baseURL+"/ajax/geocode?term="+r.selected_council+","+t;return e.get(n,{method:"GET",params:{}})},s.searchEsquinaByStr=function(t){var n=a.baseURL+"/ajax/geocode?term="+r.selected_council+","+t.calle+","+t.esquina;return e.get(n,{method:"GET",params:{}})},s.getLocationGeom=function(t){for(var o=n.url+"/"+i+s.getParamPathByTipo(t.tipo),a=0;a<t.pathParams.length;a++)o+="/"+t.pathParams[a];return e.get(baseURL).then(function(e){return e.data})},s.getLocationGeomPMB=function(t,n,o){var i=a.baseURL+"/ajax/geocode?term="+r.selected_council+","+t+","+n+","+o;return e.get(i)},s.getParamPathByTipo=function(e){var t={ESQUINA:"/esquina",DIRECCION:"/direccion"};return t[e]},s}]),pmb_im.services.factory("_",[function(){return window._}]),pmb_im.services.factory("UserService",["$http",function(e){var t={};return t.uid=null,t.name=null,t.email=null,t.password=null,t.picture_url="url(./img/icon-user-anonymous.png)",t.show_location=null,t.save_user_data=function(e,n,o,a,r,i,s,l){t.uid=r,t.name=e,t.password=n,t.picture_url=o,t.show_location=a,t.status=i,t.gender=s,t.interested=l},t.erase_user_data=function(){t.name=null,t.email=null,t.password=null,t.identity_document=null,t.phone=null,t.picture_url=null},t.get_user_data=function(){},t.add_photo=function(e){t.picture_url=e},t.isLogged=function(){return null!=t.name&&""!=t.name},t}]),pmb_im.services.factory("ValidationService",["$http","$ionicPopup",function(e,t){return{isMobileDevice:function(){return!!window.cordova},validate_not_empty:function(e){return null!=e&&"undefined"!=e&&""!=e},validate_two_words:function(e){if(null!=e&&"undefined"!=e&&""!=e){var t=e.split(" ").filter(function(e){return""!==e});return t.length>1}return!1},validate_equalsTo:function(e,t){return e==t},validate_email:function(e){if(null!=e&&"undefined"!=e&&""!=e){var t=/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;return t.test(e)}return!1},validate_iddoc_uy:function(e){if(null!=e&&"undefined"!=e&&""!=e){e=e.replace(/\D/g,"");var t=e[e.length-1],n=0,o=0;if(e.length<=6)for(o=e.length;o<7;o++)e="0"+e;for(o=0;o<7;o++)n+=parseInt("2987634"[o])*parseInt(e[o])%10;var a;return a=n%10===0?0:10-n%10,t==a}return!1}}}]),pmb_im.controllers.controller("AbsController",["$scope",function(e){}]),pmb_im.controllers.controller("FormCtrl",["$scope","$state","$cordovaGeolocation","$stateParams","$ionicPlatform","$ionicPopup","LocationsService","DBService","$ionicSlideBoxDelegate","$ionicScrollDelegate",function(e,t,n,o,a,r,i,s,l,c){e.form={},e.form.edad=16,e.form.ultimo_nivel_aprobado="",e.form.ultimo_anio_aprobado="",e.form.plan="",e.form.lugar="",e.form.turno="",e.restarEdad=function(){e.form.edad>4&&(e.form.edad=e.form.edad-1)},e.sumarEdad=function(){e.form.edad=e.form.edad+1},e.selectUltimoNivel=function(t){var n,o=document.getElementsByClassName("nivel");for(n=0;n<o.length;n++)o[n].className="nivel_"+o[n].id+" nivel hidden";var a=document.getElementById(t);a.className="nivel_"+a.id+" nivel",e.form.ultimo_nivel_aprobado=t},e.next=function(){l.next()},e.previous=function(){l.previous()},e.go_to_map=function(){t.go("app.map")}}]),pmb_im.controllers.controller("IntroCtrl",["$scope","$state","$cordovaGeolocation","$stateParams","$ionicPlatform","$ionicPopup","LocationsService","DBService",function(e,t,n,o,a,r,i,s){var l=s.initDB();l.info().then(console.log.bind(console)),e.geolocate=function(){var e={timeout:3500,enableHighAccuracy:!0};n.getCurrentPosition(e).then(function(e){i.save_initial_position(e),t.go("app.form")},function(e){t.go("app.form")})},e.go_to_form=function(){t.go("app.form")}}]),pmb_im.controllers.controller("MapController",["$scope","_","$cordovaCamera","$cordovaGeolocation","$compile","$ionicModal","$ionicPopup","leafletData","ConfigService","LocationsService","PinService","AuthService","UserService","DBService","$timeout","$interval","$location","ErrorService","$ionicSlideBoxDelegate","$ionicScrollDelegate","PopUpService","ConnectivityService","$cordovaInAppBrowser","MapService","ModalService","SemaphoreService","ValidationService",function(e,t,n,o,a,r,i,s,l,c,u,d,p,m,_,g,f,h,v,y,b,w,I,E,k,D,A){e.online_user_geo={},e.online_user_geo_array=new Array,e.baseURL=l.baseURL,e.AppName=l.AppName,e.user_cached_image="./img/icon-user-anonymous.png",e.one_value_popup=null,e.myIntervals=new Array,e.$on("$ionicView.beforeEnter",function(){k.checkNoModalIsOpen(),m.initDB(),w.isOnline()?e.check_user_logged():e.set_offline_user(),document.getElementById("foot_bar").style.display="block",w.isOnline()&&e.create_online_map()}),e.$on("$ionicView.afterEnter",function(){s.getMap();""!=c.initial_lat?E.centerMapOnCoords(c.initial_lat,c.initial_lng,16):E.centerMapOnCoords(-34.901113,-56.164531,14),document.getElementById("spinner").style.display="none"}),e.openWebsite=function(e){var t={location:"no",clearcache:"yes",toolbar:"no"};I.open(e,"_blank",t).then(function(e){})["catch"](function(e){})},e.create_online_map=function(){e.map={defaults:{tileLayer:"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",minZoom:1,maxZoom:18,zoomControlPosition:"topleft"},markers:{},events:{map:{enable:["context"],logic:"emit"}},center:{}},e.loadPinsLayer(),e.map.center={lat:-34.901113,lng:-56.164531,zoom:16},s.getMap().then(function(t){t.on("moveend",e.hideOffScreenPins)})},e.next=function(){v.next()},e.previous=function(){v.previous()},e.back_to_map=function(e){e?(k.checkNoModalIsOpen(),document.getElementById("foot_bar").style.display="block",document.getElementById("spinner-inside-modal").style.display="none"):document.getElementById("spinner-inside-modal").style.display="none"},e.image=null,e.addImage=function(t,o,a,r){e.isUserPhoto=o,e.isCommentPhoto=a,e.isNewUserPhoto=r;var i=Camera.PictureSourceType.CAMERA,s=!0,l=!0;1==t&&(i=Camera.PictureSourceType.PHOTOLIBRARY,s=!1,l=!1);var c={quality:90,destinationType:Camera.DestinationType.FILE_URI,sourceType:i,allowEdit:!1,correctOrientation:s,encodingType:Camera.EncodingType.JPEG,popoverOptions:CameraPopoverOptions,saveToPhotoAlbum:l,targetWidth:500,targetHeight:500};n.getPicture(c).then(function(t){function n(t){window.FilePath.resolveNativePath(t,function(n){t="file://"+n,n.startsWith("file://")&&(t=n),1==e.isUserPhoto?e.profile.picture_url=t:1==e.isCommentPhoto?e.comment.file=t:1==e.isNewUserPhoto&&(e.newuser.picture_url=t),e.imgURI=t},function(e){alert("Error resolveNativePath"+e)})}n(t)},function(e){})},e.urlForImage=function(){var t="http://placehold.it/200x200";if(e.image){var n=e.image.substr(e.image.lastIndexOf("/")+1);t=cordova.file.dataDirectory+n}return t},e.scrollMe=function(e){f.hash(e);var t=y.$getByHandle("content");t.anchorScroll()},e.set_active_option=function(e){document.getElementById(e).className="option-active"},e.hide_special_divs=function(){document.getElementById("user-options-menu").style.display="none"},e.close_report_detail_modal=function(){k.checkNoModalIsOpen(),e.report_detail_id=null},e.locate=function(){o.getCurrentPosition().then(function(t){e.map.center.lat=t.coords.latitude,e.map.center.lng=t.coords.longitude,e.map.center.zoom=15,e.map.markers.now={lat:t.coords.latitude,lng:t.coords.longitude,message:"You Are Here",focus:!0,draggable:!1}},function(e){})},e.addMapControls=function(){document.getElementById("map_crosshair").style.display="block",document.getElementById("map_crosshair_button").style.display="block"},e.changeUserLocationPin=function(t,n,o){if(e.online_user_geo_array[o]){layer=e.online_user_geo_array[o];var a=new L.LatLng(t,n);layer.setLatLng(a)}},e.hideOffScreenPins=function(){s.getMap().then(function(t){var n=t.getBounds();e.usersVisible=[],e.online_user_geo_array.forEach(function(o,a){var r=n.contains(o.getLatLng());r?r&&(t.addLayer(o),e.usersVisible.push(o.feature)):t.removeLayer(o)})})},e.loadPinsLayer=function(){},e.timeConverter=function(e){var t=new Date(1e3*e),n=t.getFullYear(),o=t.getMonth();o<10&&(o="0"+o);var a=t.getDate();a<10&&(a="0"+a);var r=t.getHours();r<10&&(r="0"+r);var i=t.getMinutes();i<10&&(i="0"+i);var s=(t.getSeconds(),a+"/"+o+"/"+n+" "+r+":"+i);return s},e.model=[],e.externalModel=[],e.selectedItems=[],e.preselectedSearchItems=[],e.clickedValueModel="",e.removedValueModel="",e.itemsRemoved=function(t){e.removedValueModel=t},e.user_options=function(){var t=document.getElementById("user-options-menu");if("block"==t.style.display)t.style.display="none";else{var n=p.name;null==n?e.show_anonymous_menu():e.show_user_menu()}},e.show_anonymous_menu=function(){var t=document.getElementById("user-options-menu"),n="<div id='auth_options'><div class='nonauth-link' ng-click='show_login_modal()'>Iniciar sesión</div>";n+="<div class='nonauth-link' ng-click='show_sign_up_modal()'>Registrarse</div></div>",t.innerHTML=n,a(t)(e),t.style.height="120px",t.style.width="150px",t.style.display="block"},e.show_user_menu=function(){var t=document.getElementById("user-options-menu"),n=p.name+"<div id='auth_options'><div class='user-logged-link' ng-click='show_edit_profile_modal()'>Mi perfil</div>";n+="<div class='user-logged-link' ng-click='sign_out()'>Cerrar sesión</div></div>",t.innerHTML=n,a(t)(e),t.style.height="220px",t.style.width="200px",t.style.display="block"},e.create_field_array=function(e,t,n){var o=new Array;return o.name=e,o.type=t,o.value=n,o},e.create_field_array_with_twoFields=function(e,t,n,o){var a=new Array;return a.name=e,a.type=t,a.value=n,a.secondValue=o,a},e.fix_fb_image_link=function(e){if(e.indexOf("http://graph.facebook.com")>=0){var t=e.split("http://graph.facebook.com"),n="http://graph.facebook.com"+t[1];return n}return e},e.log_in=function(t,n){if(D.takeIfAvailable("submit-form"))if(w.isOnline()){document.getElementById("spinner-inside-modal").style.display="block";var o=new Array;o.push(e.create_field_array("Usuario","notNull",t)),o.push(e.create_field_array("Contraseña","notNull",n)),h.check_fields(o,"error_container")?d.log_in(t,n).then(function(t){h.http_response_is_successful(t,"error_container")?(photo=e.fix_fb_image_link(e.getObjectDataFromResponse(t).Photo),"anon"==photo&&(photo="url(./img/icon-user-anonymous.png)"),p.save_user_data(e.getObjectDataFromResponse(t).Name,e.nonauth.password,photo,e.getObjectDataFromResponse(t).ShowLocation,e.getObjectDataFromResponse(t).Uid,e.getObjectDataFromResponse(t).Estado,e.getObjectDataFromResponse(t).Gender,e.getObjectDataFromResponse(t).InterestedIn),m.saveUser(e.getObjectDataFromResponse(t).Name,e.nonauth.password,photo,e.getObjectDataFromResponse(t).ShowLocation,e.getObjectDataFromResponse(t).Uid,e.getObjectDataFromResponse(t).Estado,e.getObjectDataFromResponse(t).Gender,e.getObjectDataFromResponse(t).InterestedIn),e.set_user_picture(1),document.getElementById("spinner-inside-modal").style.display="none",D.makeAvailableAgain("submit-form"),e.close_login_modal()):(D.makeAvailableAgain("submit-form"),document.getElementById("spinner-inside-modal").style.display="none")},function(e){document.getElementById("spinner-inside-modal").style.display="none",D.makeAvailableAgain("submit-form"),h.show_error_message("error_container",e.statusText)}):(document.getElementById("spinner-inside-modal").style.display="none",D.makeAvailableAgain("submit-form"))}else D.makeAvailableAgain("submit-form"),b.show_alert("Sin conexión a internet","Para iniciar sesión debe estar conectado a internet")},e.log_in_background=function(t,n){d.log_in(t,n).then(function(t){return h.http_response_is_successful_ajax(t)?(photo=e.fix_fb_image_link(e.getObjectDataFromResponse(t).Photo),"anon"==photo&&(photo="url(./img/icon-user-anonymous.png)"),p.save_user_data(e.getObjectDataFromResponse(t).Name,n,photo,e.getObjectDataFromResponse(t).ShowLocation,e.getObjectDataFromResponse(t).Uid,e.getObjectDataFromResponse(t).Estado,e.getObjectDataFromResponse(t).Gender,e.getObjectDataFromResponse(t).InterestedIn),m.saveUser(e.getObjectDataFromResponse(t).Name,n,photo,e.getObjectDataFromResponse(t).ShowLocation,e.getObjectDataFromResponse(t).Uid,e.getObjectDataFromResponse(t).Estado,e.getObjectDataFromResponse(t).Gender,e.getObjectDataFromResponse(t).InterestedIn),e.set_user_picture(1),1):0},function(e){return 0})},e.sign_out=function(){p.erase_user_data(),m.eraseUser(),document.getElementById("spinner").style.display="none",e.set_user_picture(0),document.getElementById("user-options-menu").style.display="none"},e.show_edit_profile_modal=function(){D.takeIfAvailable("open-modal")&&(document.getElementById("spinner").style.display="block",e.newuser=new Array,e.newuser.email=p.email,e.newuser.gender=p.gender,e.newuser.username=p.name,e.newuser.interested=p.interested,e.newuser.status=p.status,e.newuser.show_location=p.show_location,e.actual_photo=p.picture_url,null!=e.actual_photo||(e.actual_photo="./img/icon-user-anonymous.png"),"url(./img/icon-user-anonymous.png)"==e.actual_photo&&(e.actual_photo="./img/icon-user-anonymous.png"),k.checkNoModalIsOpen(),A.isMobileDevice()?r.fromTemplateUrl("templates/edit_profile_with_photo.html",{scope:e,hardwareBackButtonClose:!1,animation:"slide-in-up"}).then(function(e){document.getElementById("spinner").style.display="none",document.getElementById("user-options-menu").style.display="none",k.activeModal=e,document.getElementById("foot_bar").style.display="none",k.activeModal.show(),D.makeAvailableAgain("open-modal")}):r.fromTemplateUrl("templates/edit_profile_with_photo_desktop.html",{scope:e,hardwareBackButtonClose:!1,animation:"slide-in-up"}).then(function(e){document.getElementById("spinner").style.display="none",document.getElementById("user-options-menu").style.display="none",k.activeModal=e,document.getElementById("foot_bar").style.display="none",k.activeModal.show(),D.makeAvailableAgain("open-modal")}))},e.readURL=function(t,n){if(t.files&&t.files[0]){1==n?e.newuser.picture_url=t.files[0]:2==n?e.comment.photo=t.files[0]:e.report.file=t.files[0];var o=new FileReader;o.onload=function(e){document.getElementById("myImage").src=e.target.result},o.readAsDataURL(t.files[0])}},e.close_edit_profile_modal=function(){document.getElementById("foot_bar").style.display="block",k.checkNoModalIsOpen()},e.edit_profile_ok=function(){e.edit_profile()},e.getObjectDataFromResponse=function(e){return e.data?e.data:e},e.edit_profile=function(){if(D.takeIfAvailable("submit-form"))if(w.isOnline()){document.getElementById("spinner-inside-modal").style.display="block",e.newuser.password=p.password;var t=d.edit_user(e.newuser);null!=e.newuser.picture_url&&""!=e.newuser.picture_url&&A.isMobileDevice()?t.then(function(t){var n=JSON.parse(t.response);h.http_data_response_is_successful(n,"error_container")?(n=e.getObjectDataFromResponse(n),p.save_user_data(n.Name,e.newuser.password,n.Photo,n.ShowLocation,n.Uid,n.Estado,n.Gender,n.InterestedIn),m.saveUser(n.Name,e.newuser.password,n.Photo,n.ShowLocation,n.Uid,n.Estado,n.Gender,n.InterestedIn),D.makeAvailableAgain("submit-form"),document.getElementById("spinner-inside-modal").style.display="none",e.close_edit_profile_modal(),e.check_user_logged()):(D.makeAvailableAgain("submit-form"),document.getElementById("spinner-inside-modal").style.display="none")},function(e){var t="Código: "+e.code;t=t+" Origen: "+e.source,t=t+" Destino: "+e.target,t=t+" http_status: "+e.http_status,t=t+" Body: "+e.body,t=t+" Exception: "+e.exception,h.show_error_message("error_container","Hubo un error en el envío: "+t),D.makeAvailableAgain("submit-form"),document.getElementById("spinner-inside-modal").style.display="none"},function(t){_(function(){e.uploadProgress=t.loaded/t.total*100,document.getElementById("sent_label").innerHTML="Enviado: "+Math.round(e.uploadProgress)+"%"})}):t.success(function(t){document.getElementById("sent_label").innerHTML="Enviado: 100%",h.http_response_is_successful(t,"error_container")?(p.save_user_data(e.getObjectDataFromResponse(t).Name,e.newuser.password,e.getObjectDataFromResponse(t).Photo,e.getObjectDataFromResponse(t).ShowLocation,e.getObjectDataFromResponse(t).Uid,e.getObjectDataFromResponse(t).Estado,e.getObjectDataFromResponse(t).Gender,e.getObjectDataFromResponse(t).InterestedIn),m.saveUser(e.getObjectDataFromResponse(t).Name,e.newuser.password,e.getObjectDataFromResponse(t).Photo,e.getObjectDataFromResponse(t).ShowLocation,e.getObjectDataFromResponse(t).Uid,e.getObjectDataFromResponse(t).Estado,e.getObjectDataFromResponse(t).Gender,e.getObjectDataFromResponse(t).InterestedIn),document.getElementById("spinner-inside-modal").style.display="none",D.makeAvailableAgain("submit-form"),e.close_edit_profile_modal(),e.check_user_logged()):(D.makeAvailableAgain("submit-form"),document.getElementById("spinner-inside-modal").style.display="none")}).error(function(e,t,n,o){h.show_error_message("error_container",t),document.getElementById("spinner-inside-modal").style.display="none",D.makeAvailableAgain("submit-form")})}else D.makeAvailableAgain("submit-form"),b.show_alert("Sin conexión a internet","Para editar su perfil debe estar conectado a internet")},e.show_login_modal=function(){D.takeIfAvailable("open-modal")&&(e.nonauth=new Array,e.nonauth.user="",e.nonauth.password="",k.checkNoModalIsOpen(),r.fromTemplateUrl("templates/log_in.html",{scope:e,hardwareBackButtonClose:!1,animation:"slide-in-up"}).then(function(t){e.hide_special_divs(),k.activeModal=t,D.makeAvailableAgain("open-modal"),document.getElementById("foot_bar").style.display="none",k.activeModal.show()}))},e.login_ok=function(){e.log_in(e.nonauth.user,e.nonauth.password)},e.close_login_modal=function(){document.getElementById("foot_bar").style.display="block",k.checkNoModalIsOpen()},e.show_sign_up_modal=function(){D.takeIfAvailable("open-modal")&&(e.newuser=new Array,e.newuser.email="",e.newuser.password="",e.newuser.fullname="",e.newuser.id_doc="",e.newuser.telephone="",e.newuser.photo="",k.checkNoModalIsOpen(),A.isMobileDevice()?r.fromTemplateUrl("templates/sign_up.html",{scope:e,hardwareBackButtonClose:!1,animation:"slide-in-up"}).then(function(t){e.hide_special_divs(),k.activeModal=t,D.makeAvailableAgain("open-modal"),document.getElementById("foot_bar").style.display="none",k.activeModal.show()}):r.fromTemplateUrl("templates/sign_up_desktop.html",{scope:e,hardwareBackButtonClose:!1,animation:"slide-in-up"}).then(function(t){e.hide_special_divs(),k.activeModal=t,D.makeAvailableAgain("open-modal"),document.getElementById("foot_bar").style.display="none",k.activeModal.show()}))},e.close_sign_up_modal=function(){document.getElementById("foot_bar").style.display="block",k.checkNoModalIsOpen()},e.sign_up=function(){if(D.takeIfAvailable("submit-form"))if(w.isOnline()){document.getElementById("spinner-inside-modal").style.display="block";new Array;null!=e.newuser.picture_url&&""!=e.newuser.picture_url&&A.isMobileDevice()?d.create_user(e.newuser).then(function(t){document.getElementById("sent_label").innerHTML="Enviado: 100%",h.http_data_response_is_successful(t,"error_container")?(t=e.getObjectDataFromResponse(t),p.save_user_data(t.name,t.email,e.newuser.password,t.identity_document,t.phone,t.picture_url),p.save_user_data(t.Name,e.newuser.password,t.Photo,t.ShowLocation,t.Uid,t.Estado,t.Gender,t.InterestedIn),m.saveUser(t.Name,password,t.Photo,t.ShowLocation,t.Uid,t.Estado,t.Gender,t.InterestedIn),D.makeAvailableAgain("submit-form"),document.getElementById("spinner-inside-modal").style.display="none",e.close_edit_profile_modal(),e.check_user_logged()):(D.makeAvailableAgain("submit-form"),document.getElementById("spinner-inside-modal").style.display="none")},function(e){D.makeAvailableAgain("submit-form"),document.getElementById("spinner-inside-modal").style.display="none"}):d.create_user(e.newuser).then(function(t){if(h.http_response_is_successful(t,"error_container")){p.save_user_data(e.getObjectDataFromResponse(t).Name,e.newuser.password,e.getObjectDataFromResponse(t).Photo,e.getObjectDataFromResponse(t).ShowLocation,e.getObjectDataFromResponse(t).Uid,e.getObjectDataFromResponse(t).Estado,e.getObjectDataFromResponse(t).Gender,e.getObjectDataFromResponse(t).InterestedIn),
m.saveUser(e.getObjectDataFromResponse(t).Name,e.newuser.password,e.getObjectDataFromResponse(t).Photo,e.getObjectDataFromResponse(t).ShowLocation,e.getObjectDataFromResponse(t).Uid,e.getObjectDataFromResponse(t).Estado,e.getObjectDataFromResponse(t).Gender,e.getObjectDataFromResponse(t).InterestedIn),D.makeAvailableAgain("submit-form"),document.getElementById("spinner-inside-modal").style.display="none",e.close_sign_up_modal();var n=i.alert({title:"Usuario creado con éxito",template:e.getObjectDataFromResponse(t).message});n.then(function(e){}),e.check_user_logged()}else D.makeAvailableAgain("submit-form"),document.getElementById("spinner-inside-modal").style.display="none"},function(e){D.makeAvailableAgain("submit-form"),document.getElementById("spinner-inside-modal").style.display="none",h.show_error_message("error_container",e.statusText)})}else D.makeAvailableAgain("submit-form"),b.show_alert("Sin conexión a internet","Para iniciar registrarse debe estar conectado a internet")},e.sign_up_ok=function(){e.sign_up()},e.check_user_logged=function(){var t=p.name;if(null==t){var n=m.getUser();n.then(function(t){null!=t.name&&""!=t.name&&"undefined"!=t.name?e.log_in_background(t.name,t.password):e.set_user_picture(0)})["catch"](function(t){e.set_user_picture(0)})}else null==p.picture_url||""==p.picture_url?e.set_user_picture(0):e.set_user_picture(1)},e.set_offline_user=function(){var t=p.name;if(null==t){var n=m.getUser();n.then(function(t){null!=t.name&&""!=t.name&&"undefined"!=t.name?p.save_user_data(t.name,t.password,t.picture_url,t.show_location):e.set_user_picture(0)})["catch"](function(t){e.set_user_picture(0)})}else null==p.picture_url||""==p.picture_url?e.set_user_picture(0):e.set_user_picture(1)},e.set_user_picture=function(t){document.getElementById("user_picture");0==t?e.user_cached_image="./img/icon-user-anonymous.png":null!=p.picture_url&&""!=p.picture_url?e.user_cached_image=p.picture_url:e.user_cached_image="./img/icon-user-anonymous.png"},e.find_me=function(){e.set_active_option("button-find-me"),e.hide_special_divs();var t={timeout:1e4,enableHighAccuracy:!0};o.getCurrentPosition(t).then(function(t){e.map.center.lat=t.coords.latitude,e.map.center.lng=t.coords.longitude,c.save_new_report_position(t.coords.latitude,t.coords.longitude),w.isOnline()?e.map.center.zoom=18:e.map.center.zoom=16,e.map.markers.now={lat:t.coords.latitude,lng:t.coords.longitude,message:"<p align='center'>Te encuentras aquí <br/> <a ng-click='new_report(1);'>Iniciar reporte en tu posición actual</a></p>",focus:!0,draggable:!1,getMessageScope:function(){return e}}},function(t){e.openCouncilSelector()})}}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
