window.VERSION = "0.0.1";var pmb_im={controllers:angular.module("pmb_im.controllers",[]),services:angular.module("pmb_im.services",[])};pmb_im.app=angular.module("pmb_im",["ionic","ionic.wizard","ion-autocomplete","leaflet-directive","pmb_im.controllers","pmb_im.services","ngCordova"]).constant("ApiImEndpoint",{url:"http://www.montevideo.gub.uy"}).constant("ApiDataEndpoint",{url:"http://backend.educacion.thor.datauy.org"}).run(["$ionicPlatform","$rootScope","$cordovaKeyboard",function(e,t,n){t.VERSION=window.VERSION,e.ready(function(){window.cordova&&window.cordova.plugins.Keyboard&&(cordova.plugins.Keyboard.hideKeyboardAccessoryBar(!1),cordova.plugins.Keyboard.disableScroll(!1)),ionic.Platform.isFullScreen=!0,window.StatusBar&&StatusBar.styleDefault()})}]).config(["$stateProvider","$urlRouterProvider","$compileProvider","$ionicConfigProvider",function(e,t,n,o){n.debugInfoEnabled(!1),e.state("app",{cache:!1,url:"/app","abstract":!0,templateUrl:"templates/menu.html",controller:"AbsController"}).state("app.form",{cache:!1,url:"/form",views:{menuContent:{templateUrl:"templates/form.html",controller:"FormCtrl"},mapView:{templateUrl:"templates/map.html",controller:"MapController"}}}).state("app.intro",{cache:!1,url:"/intro",views:{menuContent:{templateUrl:"templates/intro.html",controller:"IntroCtrl"}}}).state("app.search",{cache:!1,url:"/search",views:{menuContent:{templateUrl:"templates/search.html",controller:"SearchCtrl"},mapView:{templateUrl:"templates/map.html",controller:"MapController"}}}),t.otherwise("/app/intro")}]),pmb_im.controllers.controller("AbsController",["$scope","$cordovaInAppBrowser",function(e,t){e.openWebsite=function(e){var n={location:"no",clearcache:"yes",toolbar:"yes"};t.open(e,"_blank",n).then(function(e){})["catch"](function(e){})}}]),pmb_im.controllers.controller("FormCtrl",["$scope","$state","$cordovaGeolocation","$stateParams","$ionicPlatform","$ionicPopup","LocationsService","ApiService","DBService","$ionicSlideBoxDelegate","$ionicScrollDelegate",function(e,t,n,o,r,a,i,s,l,c,u){e.form={},e.form.edad=16,e.form.ultimo_nivel_aprobado="primaria",e.form.ultimo_anio_aprobado="",e.form.plan="",e.form.lugar="",e.form.que="",e.form.donde="",e.form.turno="matutino",e.form.SearchQueResults={},e.form.SearchDondeResults={},e.form.searchQue="",e.form.searchDonde="",e.form.option="list",e.establecimientos=null,e.restarEdad=function(){parseInt(e.form.edad)>4&&(e.form.edad=parseInt(e.form.edad)-1)},e.sumarEdad=function(){e.form.edad=parseInt(e.form.edad)+1},e.selectUltimoNivel=function(t){var n,o=document.getElementsByClassName("nivel");for(n=0;n<o.length;n++)o[n].className="nivel_"+o[n].id+" nivel hidden";var r=document.getElementById(t);r.className="nivel_"+r.id+" nivel",e.form.ultimo_nivel_aprobado=t},e.select_turno=function(t){var n,o=document.getElementsByClassName("turnos");for(n=0;n<o.length;n++)o[n].className="turnos turno_"+o[n].id+"_off";var r=document.getElementById(t);r.className="turnos turno_"+t,e.form.turno=t},e.select_option=function(t){var n,o=document.getElementsByClassName("options");for(n=0;n<o.length;n++)o[n].className="options option_"+o[n].id+"_off";var r=document.getElementById(t);r.className="options option_"+t,e.form.option=t,"map"==t&&(document.getElementById("map_wrapper").style.display="block",document.getElementById("map_container").style.display="block",document.getElementById("map_container").style.visibility="visible",document.getElementById("list_container").style.display="none",document.getElementById("form_container").style.minHeight="370px"),"list"==t&&(document.getElementById("map_wrapper").style.display="none",document.getElementById("list_container").style.display="block",document.getElementById("map_container").style.visibility="hidden",document.getElementById("map_container").style.display="none",document.getElementById("form_container").style.minHeight="640px")},e.onSearchChangeQue=function(){var t=document.getElementById("que_estudiar"),n=t.value.trim();n.length>=3?s.searchQueEstudiar(n).then(function(t){e.form.SearchQueResults=t.data,document.getElementById("SearchQueResults").style.display="block"}):e.hideSearchQueResults()},e.hideSearchQueResults=function(){document.getElementById("SearchQueResults").style.display="none"},e.selectQueEstudiarItem=function(t){e.form.que=t,e.hideSearchQueResults(),e.form.searchQue=t.nombre},e.listAllQueEstudiar=function(){var t="api-get-all";s.searchQueEstudiar(t).then(function(t){e.form.SearchQueResults=t.data,document.getElementById("SearchQueResults").style.display="block"})},e.onSearchChangeDonde=function(){var t=document.getElementById("donde_estudiar"),n=t.value.trim();n.length>=3?s.searchDondeEstudiar(n).then(function(t){e.form.SearchDondeResults=t.data,document.getElementById("SearchDondeResults").style.display="block"}):e.hideSearchDondeResults()},e.hideSearchDondeResults=function(){document.getElementById("SearchDondeResults").style.display="none"},e.selectDondeEstudiarItem=function(t){e.form.donde=t,e.hideSearchDondeResults(),e.form.searchDonde=t.loc_dep},e.editSearch=function(){c.previous(),c.previous()},e.next=function(){c.next()},e.previous=function(){c.previous()},e.slideHasChanged=function(t){e.select_option("list"),2==t&&(document.getElementById("map_container").style.display="none",s.updateFilters(e.form),null!=s.filters&&s.getEstablecimientosByFilters().then(function(t){console.log(t),s.lastSearchResponseEstablecimientos=t.data,e.establecimientos=t.data,s.updateMapPins(e.establecimientos)}))}}]),pmb_im.controllers.controller("IntroCtrl",["$scope","$state","$cordovaGeolocation","$stateParams","$ionicPlatform","$ionicPopup","LocationsService",function(e,t,n,o,r,a,i){e.$on("$ionicView.beforeEnter",function(){document.getElementById("form_container").style.minHeight="640px"}),e.$on("$ionicView.afterEnter",function(){document.getElementById("map_wrapper").style.display="none"}),e.geolocate=function(){var e={timeout:3500,enableHighAccuracy:!0};n.getCurrentPosition(e).then(function(e){i.save_initial_position(e),t.go("app.form")},function(e){t.go("app.form")})},e.go_to_form=function(){document.getElementById("map_wrapper").style.display="block",t.go("app.form")},e.go_to_search=function(){document.getElementById("map_wrapper").style.display="block",t.go("app.search")}}]),pmb_im.controllers.controller("MapController",["$scope","_","$cordovaGeolocation","leafletData","ConfigService","PinService","$interval","$location","MapService","ModalService","ApiService","$timeout",function(e,t,n,o,r,a,i,s,l,c,u,d){e.baseURL=r.baseURL,e.AppName=r.AppName,e.one_value_popup=null,e.myIntervals=new Array,e.$on("$ionicView.beforeEnter",function(){c.checkNoModalIsOpen(),u.mapScope=e,e.create_online_map(),document.getElementById("spinner").style.display="none",document.getElementById("pinspinner").style.display="none"}),e.filtersUpdated=function(){console.log(u.filters),e.loadPinsLayer()},e.create_online_map=function(){e.map={defaults:{tileLayer:"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",minZoom:1,maxZoom:18,zoomControlPosition:"topleft"},markers:{},events:{map:{enable:["context"],logic:"emit"}},center:{lat:-34.901113,lng:-56.164531,zoom:16}},d(function(){document.getElementById("map_wrapper").style.display="none"},1e3)},e.locate=function(){n.getCurrentPosition().then(function(t){e.map.center.lat=t.coords.latitude,e.map.center.lng=t.coords.longitude,e.map.center.zoom=15,e.map.markers.now={lat:t.coords.latitude,lng:t.coords.longitude,message:"Estás aquí",focus:!0,draggable:!1}},function(e){})},e.hideOffScreenPins=function(){},e.loadPinsLayer=function(e){console.log(e),null!=e&&o.getMap().then(function(t){e.forEach(function(e){if(e.lat&&e.lon){var n=L.icon({iconUrl:"./img/blue_pin.svg",iconSize:[48,65],iconAnchor:[24,65],popupAnchor:[0,-65]}),o=L.marker([e.lat,e.lon],{icon:n});o.bindPopup("<b>"+e.nombre+"</b>").openPopup(),o.addTo(t)}})})}}]),pmb_im.controllers.controller("SearchCtrl",["$scope","$state","$cordovaGeolocation","$stateParams","$ionicPlatform","$ionicPopup","LocationsService","ApiService","DBService","$ionicSlideBoxDelegate","$ionicScrollDelegate",function(e,t,n,o,r,a,i,s,l,c,u){e.form={},e.form.lugar="",e.form.nombre_centro="",e.form.option="list",e.establecimientos=null,e.$on("$ionicView.beforeEnter",function(){document.getElementById("form_container").style.minHeight="460px"}),e.onSearchChange=function(){},e.hideSearchQueResults=function(){document.getElementById("SearchQueResults").style.display="none"},e.showMap=function(){document.getElementById("map_wrapper").style.display="block",document.getElementById("map_container").style.display="block",document.getElementById("map_container").style.visibility="visible",document.getElementById("form_container").style.minHeight="210px",document.getElementById("search_view_list_button").style.display="block",document.getElementById("search_view_map_button").style.display="none"},e.showList=function(){document.getElementById("map_wrapper").style.display="none",document.getElementById("map_container").style.display="none",document.getElementById("map_container").style.visibility="hidden",document.getElementById("form_container").style.minHeight="460px",document.getElementById("search_view_map_button").style.display="block",document.getElementById("search_view_list_button").style.display="none"}}]),pmb_im.services.factory("ApiService",["$http","ConfigService",function(e,t){function n(e){angular.extend(this,e)}var o=t.baseURL+"/api/";return n.searchQueEstudiar=function(t){return e.get(o+"search/"+t,{cache:!1,params:{hash_id:Math.random()}})},n.searchDondeEstudiar=function(t){return e.get(o+"searchByLocalidadDepartamento/"+t,{cache:!1,params:{hash_id:Math.random()}})},n.filters=null,n.mapScope=null,n.formScope={},n.lastSearchResponseEstablecimientos=null,n.updateFilters=function(e){n.filters=e,null!=n.mapScope&&n.mapScope.filtersUpdated()},n.createFilterParamsForGetRequest=function(){console.log(n.filters);var e={hash_id:Math.random(),edad:n.filters.edad,ultimo_nivel_aprobado:n.filters.ultimo_nivel_aprobado,ultimo_anio_aprobado:n.filters.ultimo_anio_aprobado,turno:n.filters.turno};return""!=n.filters.que&&(e.queEstudiarId=n.filters.que.id,e.queEstudiarNombre=n.filters.que.nombre,e.queEstudiarTagUno=n.filters.que.tag[0],e.queEstudiarTagDos=n.filters.que.tag[1]),""!=n.filters.donde&&(e.dondeEstudiarDepartamento=n.filters.donde.departamento,e.dondeEstudiarLocalidad=n.filters.donde.localidad,e.dondeEstudiarLat=n.filters.donde.coordenadas.lat,e.dondeEstudiarLon=n.filters.donde.coordenadas.lon),e="tipo"==n.filters.que.tipo?n.filters.que.id+"/all":"all/"+n.filters.que.id},n.getEstablecimientosByFilters=function(){if(null!=n.filters){var t=n.createFilterParamsForGetRequest();return console.log(t),e.get(o+"establecimiento-por-tipo/"+t)}},n.updateMapPins=function(e){n.mapScope.loadPinsLayer(e)},n}]),pmb_im.services.factory("AuthService",["$http","$cordovaFileTransfer","ConfigService","ValidationService",function(e,t,n,o){var r=n.baseURL+"/api/";return{log_in:function(t,n){var o="user="+t+"&password="+n;return e.post(r+"login",o,{withCredentials:!0,headers:{"Content-Type":"application/x-www-form-urlencoded"}})},sign_out:function(t,n){return e.get(r+"sign_out",{withCredentials:!0,params:{password_sign_in:t,email:n}})},create_user:function(n){if(n.picture_url&&o.isMobileDevice()){var a={fileKey:"photo",withCredentials:!0,params:{user:n.username,password:n.password,email:n.email,gender:n.gender,interested:n.interested,status:n.status,show_location:n.show_location}},i=!0;return t.upload(r+"create_user",n.picture_url,a,i)}if(n.picture_url){var s=new FormData;return s.append("photo",n.picture_url),s.append("user",n.username),s.append("password",n.password),s.append("email",n.email),s.append("gender",n.gender),s.append("interested",n.interested),s.append("status",n.status),s.append("show_location",n.show_location),e.post(r+"create_user",s,{headers:{"Content-Type":void 0},transformRequest:angular.identity})}var l="user="+n.username+"&password="+n.password+"&email="+n.email+"&gender="+n.gender;return l=l+"&interested="+n.interested+"&status="+n.status+"&show_location="+n.show_location,e.post(r+"create_user",l,{withCredentials:!0,headers:{"Content-Type":"application/x-www-form-urlencoded"}})},password_recovery:function(t){return e.get(r+"forgot_password",{params:{login_email:t}})},password_change:function(t,n,o,a){var i="email="+t+"&password_sign_in="+n+"&new_password="+o+"&confirm="+a;return e.post(r+"change_password",i,{headers:{"Content-Type":"application/x-www-form-urlencoded"}})},edit_user:function(n){if(n.picture_url&&o.isMobileDevice()){var a={fileKey:"photo",withCredentials:!0,params:{user:n.username,password:n.password,email:n.email,gender:n.gender,interested:n.interested,status:n.status,show_location:n.show_location}},i=!0;return t.upload(r+"edit_profile",n.picture_url,a,i)}var s="user="+n.username+"&password="+n.password+"&email="+n.email+"&gender="+n.gender;if(s=s+"&interested="+n.interested+"&status="+n.status+"&show_location="+n.show_location,n.picture_url){var l=new FormData;return l.append("photo",n.picture_url),l.append("user",n.username),l.append("password",n.password),l.append("email",n.email),l.append("gender",n.gender),l.append("interested",n.interested),l.append("status",n.status),l.append("show_location",n.show_location),e.post(r+"edit_profile",l,{headers:{"Content-Type":void 0},transformRequest:angular.identity})}return e.post(r+"edit_profile",s,{withCredentials:!0,headers:{"Content-Type":"application/x-www-form-urlencoded"}})}}}]),pmb_im.services.factory("ConfigService",["$http",function(e){var t={};return t.baseURL="http://ee_backend.development.datauy.org",ionic.Platform.isWebView()?t.baseURL="http://ee_backend.development.datauy.org":t.baseURL="/backend",t.AppName="Elijo Estudiar",t}]),pmb_im.services.factory("ConnectivityService",["$cordovaNetwork",function(e){return{isOnline:function(){return!0},isOffline:function(){return!1}}}]),pmb_im.services.factory("DBService",["$q",function(e){function t(e,t,o,r,a,i,s,l){var c={_id:"user-logged",name:e,password:t,picture_url:o,show_location:r,uid:a,status:i,gender:s,interested:l};n().then(function(e){return c._rev=e._rev,m.put(c)})["catch"](function(e){return m.put(c)})}function n(){return m.get("user-logged")}function o(){m.get("user-logged").then(function(e){return m.remove(e)})}function r(){return m=new PouchDB("tomamosuna_local_db")}function a(e){var t=new Date,n="report_"+t.getFullYear()+(t.getMonth()+1)+t.getDate()+t.getMilliseconds();return e._id=n,m.put(e)}function i(e){return m.put(e)}function s(){return m.get("categories-list")}function l(e){s().then(function(t){return e._rev=t._rev,m.put(e)})["catch"](function(t){return e._id="categories-list",m.put(e)})}function c(e){return m.get(e)}function u(){return m.allDocs({include_docs:!0,attachments:!1,startkey:"report_",endkey:"report_￿"})}function d(e){m.get(e).then(function(e){return m.remove(e)})}function p(e){return m.remove(e)}var m;return{initDB:r,saveUser:t,getUser:n,eraseUser:o,saveReport:a,getReport:c,getAllReports:u,updateReport:i,deleteReport:d,deleteGivenReport:p,getCategories:s,saveCategories:l}}]),pmb_im.services.factory("ErrorService",["$http","$ionicPopup","ValidationService",function(e,t,n){return{http_response_is_successful:function(e,t){var n=document.getElementById(t);return e.data&&"success"==e.data.Status||"success"==e.Status?(n.style.display="none",!0):(e.data?n.innerHTML="<h3>"+e.data.Message+"</h3>":n.innerHTML="<h3>"+e.Message+"</h3>",n.style.display="block",!1)},http_response_is_successful_ajax:function(e){return 0!=e.data.result},http_response_is_successful_popup:function(e){if(0==e.data.result){var n=t.alert({title:"Error",template:e.data.message});return n.then(function(e){return!1}),!1}return!0},http_data_response_is_successful:function(e,t){var n=document.getElementById(t);return"success"!=e.Status?(n.innerHTML="<h3>"+e.Message+"</h3>",n.style.display="block",!1):(n.style.display="none",!0)},http_data_response_is_successful_ajax:function(e){return 0!=e.result},show_error_message:function(e,t){var n=document.getElementById(e);return n.innerHTML="<h3>"+t+"</h3>",n.style.display="block",!1},show_error_message_popup:function(e){var n=t.alert({title:"Error",template:e});return n.then(function(e){return!1}),!1},check_fields:function(e,t){var o="";if(e.forEach(function(e){"notNull"==e.type&&(n.validate_not_empty(e.value)||(o=o+'<h3>- El campo "'+e.name+'" no puede estar vacío.</h3>')),"email"==e.type&&(n.validate_email(e.value)||(o=o+'<h3>- El campo "'+e.name+'" no es una dirección de correo válida.</h3>')),"iddoc_uy"==e.type&&(n.validate_iddoc_uy(e.value)||(o=o+'<h3>- El campo "'+e.name+'" no es una cédula uruguaya válida.</h3>')),"two_words"==e.type&&(n.validate_two_words(e.value)||(o=o+'<h3>- El campo "'+e.name+'" debe contener al menos dos palabras.</h3>')),"equalsTo"==e.type&&(n.validate_equalsTo(e.value,e.secondValue)||(o=o+'<h3>- Los campos "'+e.name+'" no coinciden.</h3>'))}),""==o)return!0;var r=document.getElementById(t);return r.innerHTML=o,r.style.display="block",!1}}}]),pmb_im.services.factory("Loader",["$ionicLoading","$timeout","$ionicPopup",function(e,t,n){var o={showLoading:function(t){t=t||"Loading...",e.show({template:t})},hideLoading:function(){e.hide()},toggleLoadingWithMessage:function(e,n){var o=this;o.showLoading(e),t(function(){o.hideLoading()},n||3e3)},confirmPopup:function(e,t){var o=n.confirm({title:e,template:t});return o},showAlert:function(e,t){var o=n.alert({title:e,template:t});return o}};return o}]),pmb_im.services.factory("LocationsService",[function(){var e={};return e.initial_lat="",e.initial_lng="",e.last_user_lat="",e.last_user_lng="",e.council_modal=null,e.selected_council=null,e.selectCouncil=function(t){e.selected_council=t},e.save_initial_position=function(t){e.initial_lat=t.coords.latitude,e.initial_lng=t.coords.longitude},e.save_last_user_position=function(t,n){e.last_user_lat=t,e.last_user_lng=n},e.savedLocations=[],e}]),pmb_im.services.factory("MapService",["leafletData","$compile",function(e,t){proj4.defs("EPSG:32721","+proj=utm +zone=21 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs");var n={};return n.goToPlace=function(n,o,r,a){var i={type:"FeatureCollection",crs:{type:"name",properties:{name:"urn:ogc:def:crs:EPSG::32721"}},features:[{type:"Feature",geometry:{type:"Point",coordinates:[o,r]},properties:{nombre:n}}]};e.getMap().then(function(e){var n,o=L.Proj.geoJson(i,{pointToLayer:function(e,o){n=o;var r="<p align='center'>"+e.properties.nombre+" <br/> <a ng-click='new_report_from_latlon("+n.lat+","+n.lng+");'>Iniciar reporte aquí</a></p>",i=t(r)(a);return L.marker(o).bindPopup(i[0])}});o.addTo(e),e.setView(n,18),o.openPopup()})},n.centerMapOnCoords=function(t,n,o){e.getMap().then(function(e){e.setView(new L.LatLng(t,n),o)})},n}]),pmb_im.services.factory("ModalService",[function(){var e={};return e.activeModal=null,e.checkNoModalIsOpen=function(){e.activeModal&&(e.activeModal.hide(),e.activeModal.remove())},e}]),pmb_im.services.factory("PinService",["$http","leafletData","ConfigService",function(e,t,n){function o(e){angular.extend(this,e)}var r=n.baseURL+"/oferta.geojson/-34.828518,-55.951376/MATUTINO",a=n.baseURL+"/api/";return o.getAll=function(){return e.get(r,{cache:!1,params:{hash_id:Math.random()}})},o.sendUserLocation=function(t,n,o,r,i){var s="user="+o+"&password="+r+"&lat="+t+"&lon="+n+"&uid="+i;return e.post(a+"send_user_position",s,{withCredentials:!0,headers:{"Content-Type":"application/x-www-form-urlencoded"}})},o._all=[],o.current={},o.lastPinsResponse=null,o.build=function(e){return new o(e)},o.prototype.setLatLng=function(e){this.lat=e.lat,this.lon=e.lng},o}]),pmb_im.services.factory("PopUpService",["$ionicPopup","ValidationService",function(e,t){return{show_alert:function(t,n){var o=e.alert({title:t,template:n});return o.then(function(e){return!0}),!0},confirmPopup:function(t,n){var o=e.confirm({title:t,template:n});return o},askForOneValuePopUp:function(n,o,r,a,i){$scope=n;var s=e.show({template:a+': <input type="text" id="one_value_popup"><div id="error_container_inside"></div>',title:o,subTitle:r,scope:$scope,buttons:[{text:"Cancelar"},{text:"<b>Enviar</b>",type:"button-positive",onTap:function(e){var n="",o=document.getElementById("one_value_popup").value;if("notNull"==i&&(t.validate_not_empty(o)||(n=n+'<h3>- El campo "'+a+'" no puede estar vacío.</h3>')),"email"==i&&(t.validate_email(o)||(n=n+'<h3>- El campo "'+a+'" no es una dirección de correo válida.</h3>')),"iddoc_uy"==i&&(t.validate_iddoc_uy(o)||(n=n+'<h3>- El campo "'+a+'" no es una cédula uruguaya válida.</h3>')),"two_words"==i&&(t.validate_two_words(o)||(n=n+'<h3>- El campo "'+a+'" debe contener al menos dos palabras.</h3>')),""==n)return o;var r=document.getElementById("error_container_inside");r.innerHTML=n,r.style.display="block",e.preventDefault()}}]});return s}}}]),pmb_im.services.factory("SemaphoreService",[function(){var e={};return e.semaphores=new Array,e.semaphores["open-modal"]="available",e.semaphores["submit-form"]="available",e.semaphores["submit-location"]="available",e.semaphores.can_talk="available",e.takeIfAvailable=function(t){return"available"==e.semaphores[t]&&(e.semaphores[t]="occupied",!0)},e.makeAvailableAgain=function(t){return"occupied"==e.semaphores[t]&&(e.semaphores[t]="available",!0)},e}]),pmb_im.services.factory("locationAPI",["$http","$q","ApiImEndpoint","ApiDataEndpoint","ConfigService","LocationsService",function(e,t,n,o,r,a){var i="ubicacionesRestProd",s={};return s.searchLocationByStr=function(t){var n=r.baseURL+"/ajax/geocode?term="+a.selected_council+","+t;return e.get(n,{method:"GET",params:{}})},s.searchEsquinaByStr=function(t){var n=r.baseURL+"/ajax/geocode?term="+a.selected_council+","+t.calle+","+t.esquina;return e.get(n,{method:"GET",params:{}})},s.getLocationGeom=function(t){for(var o=n.url+"/"+i+s.getParamPathByTipo(t.tipo),r=0;r<t.pathParams.length;r++)o+="/"+t.pathParams[r];return e.get(baseURL).then(function(e){return e.data})},s.getLocationGeomPMB=function(t,n,o){var i=r.baseURL+"/ajax/geocode?term="+a.selected_council+","+t+","+n+","+o;return e.get(i)},s.getParamPathByTipo=function(e){var t={ESQUINA:"/esquina",DIRECCION:"/direccion"};return t[e]},s}]),pmb_im.services.factory("_",[function(){return window._}]),pmb_im.services.factory("UserService",["$http",function(e){var t={};return t.uid=null,t.name=null,t.email=null,t.password=null,t.picture_url="url(./img/icon-user-anonymous.png)",t.show_location=null,t.save_user_data=function(e,n,o,r,a,i,s,l){t.uid=a,t.name=e,t.password=n,t.picture_url=o,t.show_location=r,t.status=i,t.gender=s,t.interested=l},t.erase_user_data=function(){t.name=null,t.email=null,t.password=null,t.identity_document=null,t.phone=null,t.picture_url=null},t.get_user_data=function(){},t.add_photo=function(e){t.picture_url=e},t.isLogged=function(){return null!=t.name&&""!=t.name},t}]),pmb_im.services.factory("ValidationService",["$http","$ionicPopup",function(e,t){return{isMobileDevice:function(){return!!window.cordova},validate_not_empty:function(e){return null!=e&&"undefined"!=e&&""!=e},validate_two_words:function(e){if(null!=e&&"undefined"!=e&&""!=e){var t=e.split(" ").filter(function(e){return""!==e});return t.length>1}return!1},validate_equalsTo:function(e,t){return e==t},validate_email:function(e){if(null!=e&&"undefined"!=e&&""!=e){var t=/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;return t.test(e)}return!1},validate_iddoc_uy:function(e){if(null!=e&&"undefined"!=e&&""!=e){e=e.replace(/\D/g,"");var t=e[e.length-1],n=0,o=0;if(e.length<=6)for(o=e.length;o<7;o++)e="0"+e;for(o=0;o<7;o++)n+=parseInt("2987634"[o])*parseInt(e[o])%10;var r;return r=n%10===0?0:10-n%10,t==r}return!1}}}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
