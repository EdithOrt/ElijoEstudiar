window.VERSION = "0.0.1";var pmb_im={controllers:angular.module("pmb_im.controllers",[]),services:angular.module("pmb_im.services",[])};pmb_im.app=angular.module("pmb_im",["ionic","ionic.wizard","ion-autocomplete","leaflet-directive","pmb_im.controllers","pmb_im.services","ngCordova"]).constant("ApiImEndpoint",{url:"http://www.montevideo.gub.uy"}).constant("ApiDataEndpoint",{url:"http://backend.educacion.thor.datauy.org"}).directive("select",function(){return{restrict:"E",scope:!1,link:function(e,t){t.on("touchmove touchstart",function(e){e.stopPropagation()})}}}).run(["$ionicPlatform","$rootScope","$cordovaKeyboard",function(e,t,n){t.VERSION=window.VERSION,e.ready(function(){window.cordova&&window.cordova.plugins.Keyboard,ionic.Platform.isFullScreen=!1,window.StatusBar&&StatusBar.styleDefault()})}]).config(["$stateProvider","$urlRouterProvider","$compileProvider","$ionicConfigProvider",function(e,t,n,o){ionic.Platform.isAndroid()&&(o.scrolling.jsScrolling(!1),o.platform.android.scrolling.jsScrolling(!1)),n.debugInfoEnabled(!1),e.state("app",{cache:!1,url:"/app","abstract":!0,templateUrl:"templates/menu.html",controller:"AbsController"}).state("app.form",{cache:!1,url:"/form",views:{menuContent:{templateUrl:"templates/form.html",controller:"FormCtrl"},mapView:{templateUrl:"templates/map.html",controller:"MapController"}}}).state("app.intro",{cache:!1,url:"/intro",views:{menuContent:{templateUrl:"templates/intro.html",controller:"IntroCtrl"}}}).state("app.search",{cache:!1,url:"/search",views:{menuContent:{templateUrl:"templates/search.html",controller:"SearchCtrl"},mapView:{templateUrl:"templates/map.html",controller:"MapController"}}}),t.otherwise("/app/intro")}]),pmb_im.controllers.controller("AbsController",["$scope","$cordovaInAppBrowser",function(e,t){e.openWebsite=function(e){var n={location:"no",clearcache:"yes",toolbar:"yes"};t.open(e,"_blank",n).then(function(e){})["catch"](function(e){})}}]),pmb_im.controllers.controller("FormCtrl",["$scope","$state","$cordovaGeolocation","$stateParams","$ionicPlatform","$ionicPopup","LocationsService","ApiService","DBService","$ionicSlideBoxDelegate","$ionicScrollDelegate",function(e,t,n,o,a,r,i,l,s,c,u){e.form={},e.form.edad=16,e.form.ultimo_nivel_aprobado="primaria",e.form.ultimo_anio_aprobado="",e.form.plan="",e.form.lugar="",e.form.que="",e.form.donde="",e.form.turno="matutino",e.form.SearchQueResults={},e.form.SearchDondeResults={},e.form.searchQue="",e.form.searchDonde="",e.form.option="list",e.establecimientos=null,e.restarEdad=function(){parseInt(e.form.edad)>4&&(e.form.edad=parseInt(e.form.edad)-1)},e.sumarEdad=function(){e.form.edad=parseInt(e.form.edad)+1},e.selectUltimoNivel=function(t){var n,o=document.getElementsByClassName("nivel");for(n=0;n<o.length;n++)o[n].className="nivel_"+o[n].id+" nivel hidden";var a=document.getElementById(t);a.className="nivel_"+a.id+" nivel",e.form.ultimo_nivel_aprobado=t},e.select_turno=function(t){var n,o=document.getElementsByClassName("turnos");for(n=0;n<o.length;n++)o[n].className="turnos turno_"+o[n].id+"_off";var a=document.getElementById(t);a.className="turnos turno_"+t,e.form.turno=t},e.select_option=function(t){var n,o=document.getElementsByClassName("options");for(n=0;n<o.length;n++)o[n].className="options option_"+o[n].id+"_off";var a=document.getElementById(t);a.className="options option_"+t,e.form.option=t,"map"==t&&(document.getElementById("map_wrapper").style.display="block",document.getElementById("map_container").style.display="block",document.getElementById("map_container").style.visibility="visible",document.getElementById("list_container").style.display="none",document.getElementById("form_container").style.minHeight="370px"),"list"==t&&(document.getElementById("map_wrapper").style.display="none",document.getElementById("list_container").style.display="block",document.getElementById("map_container").style.visibility="hidden",document.getElementById("map_container").style.display="none",document.getElementById("form_container").style.minHeight="640px")},e.onSearchChangeQue=function(){var t=document.getElementById("que_estudiar"),n=t.value.trim();n.length>=3?l.searchQueEstudiar(n).then(function(t){e.form.SearchQueResults=t.data,document.getElementById("SearchQueResults").style.display="block"}):e.hideSearchQueResults()},e.hideSearchQueResults=function(){document.getElementById("SearchQueResults").style.display="none"},e.selectQueEstudiarItem=function(t){e.form.que=t,e.hideSearchQueResults(),e.form.searchQue=t.nombre},e.listAllQueEstudiar=function(){var t="api-get-all";l.searchQueEstudiar(t).then(function(t){e.form.SearchQueResults=t.data,document.getElementById("SearchQueResults").style.display="block"})},e.onSearchChangeDonde=function(){var t=document.getElementById("donde_estudiar"),n=t.value.trim();n.length>=3?l.searchDondeEstudiar(n).then(function(t){e.form.SearchDondeResults=t.data,document.getElementById("SearchDondeResults").style.display="block"}):e.hideSearchDondeResults()},e.hideSearchDondeResults=function(){document.getElementById("SearchDondeResults").style.display="none"},e.selectDondeEstudiarItem=function(t){e.form.donde=t,e.hideSearchDondeResults(),e.form.searchDonde=t.loc_dep},e.editSearch=function(){c.previous(),c.previous()},e.next=function(){c.next()},e.previous=function(){c.previous()},e.slideHasChanged=function(t){e.select_option("list"),2==t&&(document.getElementById("map_container").style.display="none",l.updateFilters(e.form),null!=l.filters&&l.getEstablecimientosByFilters().then(function(t){console.log(t),e.establecimientos=t.data,l.updateMapPins(t.data)}))},e.openDetailsModal=function(e){l.getEstablecimientoById(e).then(function(t){console.log(t),t.data.establecimientos[0].id=e,l.openDetailsModal(t.data.establecimientos[0])})}}]),pmb_im.controllers.controller("IntroCtrl",["$scope","$state","$cordovaGeolocation","$stateParams","$ionicPlatform","$ionicPopup","LocationsService","ModalService",function(e,t,n,o,a,r,i,l){e.$on("$ionicView.beforeEnter",function(){document.getElementById("form_container").style.minHeight="640px",l.checkNoModalIsOpen()}),e.$on("$ionicView.afterEnter",function(){document.getElementById("map_wrapper").style.display="none"}),e.geolocate=function(){var e={timeout:3500,enableHighAccuracy:!0};n.getCurrentPosition(e).then(function(e){i.save_initial_position(e),t.go("app.form")},function(e){t.go("app.form")})},e.go_to_form=function(){document.getElementById("map_wrapper").style.display="block",t.go("app.form")},e.go_to_search=function(){document.getElementById("map_wrapper").style.display="block",t.go("app.search")}}]),pmb_im.controllers.controller("MapController",["$scope","_","$cordovaGeolocation","leafletData","ConfigService","PinService","$interval","$location","MapService","$ionicModal","ModalService","ApiService","$timeout","$cordovaInAppBrowser",function(e,t,n,o,a,r,i,l,s,c,u,d,p,m){e.baseURL=a.baseURL,e.AppName=a.AppName,e.one_value_popup=null,e.myIntervals=new Array,e.map=null,e.modal_map=null,e.establecimiento=[],e.$on("$ionicView.loaded",function(){u.checkNoModalIsOpen(),d.mapScope=e,e.create_online_map(),document.getElementById("spinner").style.display="none",document.getElementById("pinspinner").style.display="none"}),e.filtersUpdated=function(){},e.create_online_map=function(){null==e.map&&(e.map={defaults:{tileLayer:"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",minZoom:1,maxZoom:18,zoomControlPosition:"topleft"},markers:{},events:{map:{enable:["context"],logic:"emit"}},center:{lat:-34.901113,lng:-56.164531,zoom:16}},p(function(){document.getElementById("map_wrapper").style.display="none"},1e3))},e.locate=function(){n.getCurrentPosition().then(function(t){e.map.center.lat=t.coords.latitude,e.map.center.lng=t.coords.longitude,e.map.center.zoom=15,e.map.markers.now={lat:t.coords.latitude,lng:t.coords.longitude,message:"Estás aquí",focus:!0,draggable:!1}},function(e){})},e.loadPinsLayer=function(e){null!=e&&o.getMap("primary_map").then(function(t){t.eachLayer(function(e){e._url||t.removeLayer(e)}),e.forEach(function(e){if(e.lat&&e.lon){var n=L.icon({iconUrl:"./img/blue_pin.svg",iconSize:[48,65],iconAnchor:[24,65],popupAnchor:[0,-65]}),o=L.marker([e.lat,e.lon],{icon:n});o.bindPopup("<b>"+e.nombre+"</b>").openPopup(),t.addLayer(o)}})})},e.openDetailsModal=function(t){console.log(t),null!=t&&(e.establecimiento=t,c.fromTemplateUrl("templates/details.html",{scope:e,hardwareBackButtonClose:!0,animation:"none"}).then(function(t){u.checkNoModalIsOpen(),u.activeModal=t,u.activeModal.show(),L.Map.prototype.panToOffset=function(e,t,n){var o=this.latLngToContainerPoint(e).x-t[0],a=this.latLngToContainerPoint(e).y-t[1],r=this.containerPointToLatLng([o,a]);return this.setView(r,18,{pan:n})},e.modal_map={defaults:{tileLayer:"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",minZoom:18,maxZoom:18,zoomControl:!1},markers:{},events:{map:{enable:["context"],logic:"emit"}},center:{lat:-34.901113,lng:-56.164531,zoom:18}},console.log("ESTABLECIMIENTO:"),console.log(e.establecimiento),o.getMap("secondary_map").then(function(t){console.log("MAPA SECUNDARIO:"),console.log(t);var n=L.icon({iconUrl:"./img/blue_pin.svg",iconSize:[25,34],iconAnchor:[12,34],popupAnchor:[0,-34]}),o=L.marker([e.establecimiento.lat,e.establecimiento["long"]],{icon:n});o.bindPopup("<b>"+e.establecimiento.title+"</b>").openPopup(),t.addLayer(o);var a=window.innerWidth/4;t.panToOffset([e.establecimiento.lat,e.establecimiento["long"]],[a,25],{})})}))},e.close_modal=function(){u.checkNoModalIsOpen()},e.openWebsite=function(e){var t={location:"no",clearcache:"yes",toolbar:"yes"};m.open(e,"_blank",t).then(function(e){})["catch"](function(e){})}}]),pmb_im.controllers.controller("SearchCtrl",["$scope","$state","$cordovaGeolocation","$stateParams","$ionicPlatform","$ionicPopup","LocationsService","ApiService","DBService","$ionicSlideBoxDelegate","$ionicScrollDelegate",function(e,t,n,o,a,r,i,l,s,c,u){e.form={},e.form.lugar="",e.form.nombre_centro="",e.form.option="list",e.establecimientos=null,e.$on("$ionicView.beforeEnter",function(){document.getElementById("form_container").style.minHeight="460px"}),e.onSearchChange=function(){},e.hideSearchQueResults=function(){document.getElementById("SearchQueResults").style.display="none"},e.showMap=function(){document.getElementById("map_wrapper").style.display="block",document.getElementById("map_container").style.display="block",document.getElementById("map_container").style.visibility="visible",document.getElementById("form_container").style.minHeight="210px",document.getElementById("search_view_list_button").style.display="block",document.getElementById("search_view_map_button").style.display="none"},e.showList=function(){document.getElementById("map_wrapper").style.display="none",document.getElementById("map_container").style.display="none",document.getElementById("map_container").style.visibility="hidden",document.getElementById("form_container").style.minHeight="460px",document.getElementById("search_view_map_button").style.display="block",document.getElementById("search_view_list_button").style.display="none"}}]),pmb_im.services.factory("ApiService",["$http","ConfigService",function(e,t){function n(e){angular.extend(this,e)}var o=t.baseURL+"/api/";return n.searchQueEstudiar=function(t){return e.get(o+"search/"+t,{cache:!1,params:{hash_id:Math.random()}})},n.searchDondeEstudiar=function(t){return e.get(o+"searchByLocalidadDepartamento/"+t,{cache:!1,params:{hash_id:Math.random()}})},n.filters=null,n.mapScope=null,n.formScope={},n.lastSearchResponseEstablecimientos=null,n.updateFilters=function(e){n.filters=e,null!=n.mapScope&&n.mapScope.filtersUpdated()},n.createFilterParamsForGetRequest=function(){console.log(n.filters);var e={hash_id:Math.random(),edad:n.filters.edad,ultimo_nivel_aprobado:n.filters.ultimo_nivel_aprobado,ultimo_anio_aprobado:n.filters.ultimo_anio_aprobado,turno:n.filters.turno};return""!=n.filters.que&&(e.queEstudiarId=n.filters.que.id,e.queEstudiarNombre=n.filters.que.nombre,e.queEstudiarTagUno=n.filters.que.tag[0],e.queEstudiarTagDos=n.filters.que.tag[1]),""!=n.filters.donde&&(e.dondeEstudiarDepartamento=n.filters.donde.departamento,e.dondeEstudiarLocalidad=n.filters.donde.localidad,e.dondeEstudiarLat=n.filters.donde.coordenadas.lat,e.dondeEstudiarLon=n.filters.donde.coordenadas.lon),e="tipo"==n.filters.que.tipo?n.filters.que.id+"/all":"all/"+n.filters.que.id},n.getEstablecimientosByFilters=function(){if(null!=n.filters){var t=n.createFilterParamsForGetRequest();return console.log(t),e.get(o+"establecimiento-por-tipo/"+t)}},n.getEstablecimientoById=function(t){return e.get(o+"establecimientos-por-id/"+t,{cache:!1,params:{hash_id:Math.random()}})},n.updateMapPins=function(e){n.mapScope.loadPinsLayer(e)},n.openDetailsModal=function(e){n.mapScope.openDetailsModal(e)},n}]),pmb_im.services.factory("AuthService",["$http","$cordovaFileTransfer","ConfigService","ValidationService",function(e,t,n,o){var a=n.baseURL+"/api/";return{log_in:function(t,n){var o="user="+t+"&password="+n;return e.post(a+"login",o,{withCredentials:!0,headers:{"Content-Type":"application/x-www-form-urlencoded"}})},sign_out:function(t,n){return e.get(a+"sign_out",{withCredentials:!0,params:{password_sign_in:t,email:n}})},create_user:function(n){if(n.picture_url&&o.isMobileDevice()){var r={fileKey:"photo",withCredentials:!0,params:{user:n.username,password:n.password,email:n.email,gender:n.gender,interested:n.interested,status:n.status,show_location:n.show_location}},i=!0;return t.upload(a+"create_user",n.picture_url,r,i)}if(n.picture_url){var l=new FormData;return l.append("photo",n.picture_url),l.append("user",n.username),l.append("password",n.password),l.append("email",n.email),l.append("gender",n.gender),l.append("interested",n.interested),l.append("status",n.status),l.append("show_location",n.show_location),e.post(a+"create_user",l,{headers:{"Content-Type":void 0},transformRequest:angular.identity})}var s="user="+n.username+"&password="+n.password+"&email="+n.email+"&gender="+n.gender;return s=s+"&interested="+n.interested+"&status="+n.status+"&show_location="+n.show_location,e.post(a+"create_user",s,{withCredentials:!0,headers:{"Content-Type":"application/x-www-form-urlencoded"}})},password_recovery:function(t){return e.get(a+"forgot_password",{params:{login_email:t}})},password_change:function(t,n,o,r){var i="email="+t+"&password_sign_in="+n+"&new_password="+o+"&confirm="+r;return e.post(a+"change_password",i,{headers:{"Content-Type":"application/x-www-form-urlencoded"}})},edit_user:function(n){if(n.picture_url&&o.isMobileDevice()){var r={fileKey:"photo",withCredentials:!0,params:{user:n.username,password:n.password,email:n.email,gender:n.gender,interested:n.interested,status:n.status,show_location:n.show_location}},i=!0;return t.upload(a+"edit_profile",n.picture_url,r,i)}var l="user="+n.username+"&password="+n.password+"&email="+n.email+"&gender="+n.gender;if(l=l+"&interested="+n.interested+"&status="+n.status+"&show_location="+n.show_location,n.picture_url){var s=new FormData;return s.append("photo",n.picture_url),s.append("user",n.username),s.append("password",n.password),s.append("email",n.email),s.append("gender",n.gender),s.append("interested",n.interested),s.append("status",n.status),s.append("show_location",n.show_location),e.post(a+"edit_profile",s,{headers:{"Content-Type":void 0},transformRequest:angular.identity})}return e.post(a+"edit_profile",l,{withCredentials:!0,headers:{"Content-Type":"application/x-www-form-urlencoded"}})}}}]),pmb_im.services.factory("ConfigService",["$http",function(e){var t={};return t.baseURL="http://ee_backend.development.datauy.org",ionic.Platform.isWebView()?t.baseURL="http://ee_backend.development.datauy.org":t.baseURL="/backend",t.AppName="Elijo Estudiar",t}]),pmb_im.services.factory("ConnectivityService",["$cordovaNetwork",function(e){return{isOnline:function(){return!0},isOffline:function(){return!1}}}]),pmb_im.services.factory("DBService",["$q",function(e){function t(e,t,o,a,r,i,l,s){var c={_id:"user-logged",name:e,password:t,picture_url:o,show_location:a,uid:r,status:i,gender:l,interested:s};n().then(function(e){return c._rev=e._rev,m.put(c)})["catch"](function(e){return m.put(c)})}function n(){return m.get("user-logged")}function o(){m.get("user-logged").then(function(e){return m.remove(e)})}function a(){return m=new PouchDB("tomamosuna_local_db")}function r(e){var t=new Date,n="report_"+t.getFullYear()+(t.getMonth()+1)+t.getDate()+t.getMilliseconds();return e._id=n,m.put(e)}function i(e){return m.put(e)}function l(){return m.get("categories-list")}function s(e){l().then(function(t){return e._rev=t._rev,m.put(e)})["catch"](function(t){return e._id="categories-list",m.put(e)})}function c(e){return m.get(e)}function u(){return m.allDocs({include_docs:!0,attachments:!1,startkey:"report_",endkey:"report_￿"})}function d(e){m.get(e).then(function(e){return m.remove(e)})}function p(e){return m.remove(e)}var m;return{initDB:a,saveUser:t,getUser:n,eraseUser:o,saveReport:r,getReport:c,getAllReports:u,updateReport:i,deleteReport:d,deleteGivenReport:p,getCategories:l,saveCategories:s}}]),pmb_im.services.factory("ErrorService",["$http","$ionicPopup","ValidationService",function(e,t,n){return{http_response_is_successful:function(e,t){var n=document.getElementById(t);return e.data&&"success"==e.data.Status||"success"==e.Status?(n.style.display="none",!0):(e.data?n.innerHTML="<h3>"+e.data.Message+"</h3>":n.innerHTML="<h3>"+e.Message+"</h3>",n.style.display="block",!1)},http_response_is_successful_ajax:function(e){return 0!=e.data.result},http_response_is_successful_popup:function(e){if(0==e.data.result){var n=t.alert({title:"Error",template:e.data.message});return n.then(function(e){return!1}),!1}return!0},http_data_response_is_successful:function(e,t){var n=document.getElementById(t);return"success"!=e.Status?(n.innerHTML="<h3>"+e.Message+"</h3>",n.style.display="block",!1):(n.style.display="none",!0)},http_data_response_is_successful_ajax:function(e){return 0!=e.result},show_error_message:function(e,t){var n=document.getElementById(e);return n.innerHTML="<h3>"+t+"</h3>",n.style.display="block",!1},show_error_message_popup:function(e){var n=t.alert({title:"Error",template:e});return n.then(function(e){return!1}),!1},check_fields:function(e,t){var o="";if(e.forEach(function(e){"notNull"==e.type&&(n.validate_not_empty(e.value)||(o=o+'<h3>- El campo "'+e.name+'" no puede estar vacío.</h3>')),"email"==e.type&&(n.validate_email(e.value)||(o=o+'<h3>- El campo "'+e.name+'" no es una dirección de correo válida.</h3>')),"iddoc_uy"==e.type&&(n.validate_iddoc_uy(e.value)||(o=o+'<h3>- El campo "'+e.name+'" no es una cédula uruguaya válida.</h3>')),"two_words"==e.type&&(n.validate_two_words(e.value)||(o=o+'<h3>- El campo "'+e.name+'" debe contener al menos dos palabras.</h3>')),"equalsTo"==e.type&&(n.validate_equalsTo(e.value,e.secondValue)||(o=o+'<h3>- Los campos "'+e.name+'" no coinciden.</h3>'))}),""==o)return!0;var a=document.getElementById(t);return a.innerHTML=o,a.style.display="block",!1}}}]),pmb_im.services.factory("Loader",["$ionicLoading","$timeout","$ionicPopup",function(e,t,n){var o={showLoading:function(t){t=t||"Loading...",e.show({template:t})},hideLoading:function(){e.hide()},toggleLoadingWithMessage:function(e,n){var o=this;o.showLoading(e),t(function(){o.hideLoading()},n||3e3)},confirmPopup:function(e,t){var o=n.confirm({title:e,template:t});return o},showAlert:function(e,t){var o=n.alert({title:e,template:t});return o}};return o}]),pmb_im.services.factory("LocationsService",[function(){var e={};return e.initial_lat="",e.initial_lng="",e.last_user_lat="",e.last_user_lng="",e.council_modal=null,e.selected_council=null,e.selectCouncil=function(t){e.selected_council=t},e.save_initial_position=function(t){e.initial_lat=t.coords.latitude,e.initial_lng=t.coords.longitude},e.save_last_user_position=function(t,n){e.last_user_lat=t,e.last_user_lng=n},e.savedLocations=[],e}]),pmb_im.services.factory("MapService",["leafletData","$compile",function(e,t){proj4.defs("EPSG:32721","+proj=utm +zone=21 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs");var n={};return n.goToPlace=function(n,o,a,r){var i={type:"FeatureCollection",crs:{type:"name",properties:{name:"urn:ogc:def:crs:EPSG::32721"}},features:[{type:"Feature",geometry:{type:"Point",coordinates:[o,a]},properties:{nombre:n}}]};e.getMap().then(function(e){var n,o=L.Proj.geoJson(i,{pointToLayer:function(e,o){n=o;var a="<p align='center'>"+e.properties.nombre+" <br/> <a ng-click='new_report_from_latlon("+n.lat+","+n.lng+");'>Iniciar reporte aquí</a></p>",i=t(a)(r);return L.marker(o).bindPopup(i[0])}});o.addTo(e),e.setView(n,18),o.openPopup()})},n.centerMapOnCoords=function(t,n,o){e.getMap().then(function(e){e.setView(new L.LatLng(t,n),o)})},n}]),pmb_im.services.factory("ModalService",[function(){var e={};return e.activeModal=null,e.checkNoModalIsOpen=function(){e.activeModal&&(e.activeModal.hide(),e.activeModal.remove(),e.activeModal=null)},e}]),pmb_im.services.factory("PinService",["$http","leafletData","ConfigService",function(e,t,n){function o(e){angular.extend(this,e)}var a=n.baseURL+"/oferta.geojson/-34.828518,-55.951376/MATUTINO",r=n.baseURL+"/api/";return o.getAll=function(){return e.get(a,{cache:!1,params:{hash_id:Math.random()}})},o.sendUserLocation=function(t,n,o,a,i){var l="user="+o+"&password="+a+"&lat="+t+"&lon="+n+"&uid="+i;return e.post(r+"send_user_position",l,{withCredentials:!0,headers:{"Content-Type":"application/x-www-form-urlencoded"}})},o._all=[],o.current={},o.lastPinsResponse=null,o.build=function(e){return new o(e)},o.prototype.setLatLng=function(e){this.lat=e.lat,this.lon=e.lng},o}]),pmb_im.services.factory("PopUpService",["$ionicPopup","ValidationService",function(e,t){return{show_alert:function(t,n){var o=e.alert({title:t,template:n});return o.then(function(e){return!0}),!0},confirmPopup:function(t,n){var o=e.confirm({title:t,template:n});return o},askForOneValuePopUp:function(n,o,a,r,i){$scope=n;var l=e.show({template:r+': <input type="text" id="one_value_popup"><div id="error_container_inside"></div>',title:o,subTitle:a,scope:$scope,buttons:[{text:"Cancelar"},{text:"<b>Enviar</b>",type:"button-positive",onTap:function(e){var n="",o=document.getElementById("one_value_popup").value;if("notNull"==i&&(t.validate_not_empty(o)||(n=n+'<h3>- El campo "'+r+'" no puede estar vacío.</h3>')),"email"==i&&(t.validate_email(o)||(n=n+'<h3>- El campo "'+r+'" no es una dirección de correo válida.</h3>')),"iddoc_uy"==i&&(t.validate_iddoc_uy(o)||(n=n+'<h3>- El campo "'+r+'" no es una cédula uruguaya válida.</h3>')),"two_words"==i&&(t.validate_two_words(o)||(n=n+'<h3>- El campo "'+r+'" debe contener al menos dos palabras.</h3>')),""==n)return o;var a=document.getElementById("error_container_inside");a.innerHTML=n,a.style.display="block",e.preventDefault()}}]});return l}}}]),pmb_im.services.factory("SemaphoreService",[function(){var e={};return e.semaphores=new Array,e.semaphores["open-modal"]="available",e.semaphores["submit-form"]="available",e.semaphores["submit-location"]="available",e.semaphores.can_talk="available",e.takeIfAvailable=function(t){return"available"==e.semaphores[t]&&(e.semaphores[t]="occupied",!0)},e.makeAvailableAgain=function(t){return"occupied"==e.semaphores[t]&&(e.semaphores[t]="available",!0)},e}]),pmb_im.services.factory("locationAPI",["$http","$q","ApiImEndpoint","ApiDataEndpoint","ConfigService","LocationsService",function(e,t,n,o,a,r){var i="ubicacionesRestProd",l={};return l.searchLocationByStr=function(t){var n=a.baseURL+"/ajax/geocode?term="+r.selected_council+","+t;return e.get(n,{method:"GET",params:{}})},l.searchEsquinaByStr=function(t){var n=a.baseURL+"/ajax/geocode?term="+r.selected_council+","+t.calle+","+t.esquina;return e.get(n,{method:"GET",params:{}})},l.getLocationGeom=function(t){for(var o=n.url+"/"+i+l.getParamPathByTipo(t.tipo),a=0;a<t.pathParams.length;a++)o+="/"+t.pathParams[a];return e.get(baseURL).then(function(e){return e.data})},l.getLocationGeomPMB=function(t,n,o){var i=a.baseURL+"/ajax/geocode?term="+r.selected_council+","+t+","+n+","+o;return e.get(i)},l.getParamPathByTipo=function(e){var t={ESQUINA:"/esquina",DIRECCION:"/direccion"};return t[e]},l}]),pmb_im.services.factory("_",[function(){return window._}]),pmb_im.services.factory("UserService",["$http",function(e){var t={};return t.uid=null,t.name=null,t.email=null,t.password=null,t.picture_url="url(./img/icon-user-anonymous.png)",t.show_location=null,t.save_user_data=function(e,n,o,a,r,i,l,s){t.uid=r,t.name=e,t.password=n,t.picture_url=o,t.show_location=a,t.status=i,t.gender=l,t.interested=s},t.erase_user_data=function(){t.name=null,t.email=null,t.password=null,t.identity_document=null,t.phone=null,t.picture_url=null},t.get_user_data=function(){},t.add_photo=function(e){t.picture_url=e},t.isLogged=function(){return null!=t.name&&""!=t.name},t}]),pmb_im.services.factory("ValidationService",["$http","$ionicPopup",function(e,t){return{isMobileDevice:function(){return!!window.cordova},validate_not_empty:function(e){return null!=e&&"undefined"!=e&&""!=e},validate_two_words:function(e){if(null!=e&&"undefined"!=e&&""!=e){var t=e.split(" ").filter(function(e){return""!==e});return t.length>1}return!1},validate_equalsTo:function(e,t){return e==t},validate_email:function(e){if(null!=e&&"undefined"!=e&&""!=e){var t=/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;return t.test(e)}return!1},validate_iddoc_uy:function(e){if(null!=e&&"undefined"!=e&&""!=e){e=e.replace(/\D/g,"");var t=e[e.length-1],n=0,o=0;if(e.length<=6)for(o=e.length;o<7;o++)e="0"+e;for(o=0;o<7;o++)n+=parseInt("2987634"[o])*parseInt(e[o])%10;var a;return a=n%10===0?0:10-n%10,t==a}return!1}}}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyIsImNvbnRyb2xsZXJzL2Ficy5jdHJsLmpzIiwiY29udHJvbGxlcnMvZm9ybS5jcnRsLmpzIiwiY29udHJvbGxlcnMvaW50cm8uY3RybC5qcyIsImNvbnRyb2xsZXJzL21hcC5jdHJsLmpzIiwiY29udHJvbGxlcnMvc2VhcmNoLmNydGwuanMiLCJzZXJ2aWNlcy9hcGkuc2VydmljZS5qcyIsInNlcnZpY2VzL2F1dGguc2VydmljZXMuanMiLCJzZXJ2aWNlcy9jb25maWcuc2VydmljZXMuanMiLCJzZXJ2aWNlcy9jb25uZWN0aXZpdHkuc2VydmljZXMuanMiLCJzZXJ2aWNlcy9kYi5zZXJ2aWNlcy5qcyIsInNlcnZpY2VzL2Vycm9yLnNlcnZpY2VzLmpzIiwic2VydmljZXMvbG9hZGVyLnNlcnZpY2VzLmpzIiwic2VydmljZXMvbG9jYXRpb25zU2VydmljZS5qcyIsInNlcnZpY2VzL21hcC5zZXJ2aWNlcy5qcyIsInNlcnZpY2VzL21vZGFsU2VydmljZS5qcyIsInNlcnZpY2VzL3Bpbi5zZXJ2aWNlLmpzIiwic2VydmljZXMvcG9wdXAuc2VydmljZXMuanMiLCJzZXJ2aWNlcy9zZW1hcGhvcmUuc2VydmljZS5qcyIsInNlcnZpY2VzL3ViaWNhY2lvbmVzLnNlcnZpY2VzLmpzIiwic2VydmljZXMvdW5kZXJzY29yZS5zZXJ2aWNlLmpzIiwic2VydmljZXMvdXNlci5zZXJ2aWNlcy5qcyIsInNlcnZpY2VzL3ZhbGlkYXRpb24uc2VydmljZXMuanMiXSwibmFtZXMiOlsicG1iX2ltIiwiY29udHJvbGxlcnMiLCJhbmd1bGFyIiwibW9kdWxlIiwic2VydmljZXMiLCJhcHAiLCJjb25zdGFudCIsInVybCIsImRpcmVjdGl2ZSIsInJlc3RyaWN0Iiwic2NvcGUiLCJsaW5rIiwiZWxlIiwib24iLCJlIiwic3RvcFByb3BhZ2F0aW9uIiwicnVuIiwiJGlvbmljUGxhdGZvcm0iLCIkcm9vdFNjb3BlIiwiJGNvcmRvdmFLZXlib2FyZCIsIlZFUlNJT04iLCJ3aW5kb3ciLCJyZWFkeSIsImNvcmRvdmEiLCJwbHVnaW5zIiwiS2V5Ym9hcmQiLCJpb25pYyIsIlBsYXRmb3JtIiwiaXNGdWxsU2NyZWVuIiwiU3RhdHVzQmFyIiwic3R5bGVEZWZhdWx0IiwiY29uZmlnIiwiJHN0YXRlUHJvdmlkZXIiLCIkdXJsUm91dGVyUHJvdmlkZXIiLCIkY29tcGlsZVByb3ZpZGVyIiwiJGlvbmljQ29uZmlnUHJvdmlkZXIiLCJpc0FuZHJvaWQiLCJzY3JvbGxpbmciLCJqc1Njcm9sbGluZyIsInBsYXRmb3JtIiwiYW5kcm9pZCIsImRlYnVnSW5mb0VuYWJsZWQiLCJzdGF0ZSIsImNhY2hlIiwiYWJzdHJhY3QiLCJ0ZW1wbGF0ZVVybCIsImNvbnRyb2xsZXIiLCJ2aWV3cyIsIm1lbnVDb250ZW50IiwibWFwVmlldyIsIm90aGVyd2lzZSIsIiRzY29wZSIsIiRjb3Jkb3ZhSW5BcHBCcm93c2VyIiwib3BlbldlYnNpdGUiLCJvcHRpb25zIiwibG9jYXRpb24iLCJjbGVhcmNhY2hlIiwidG9vbGJhciIsIm9wZW4iLCJ0aGVuIiwiZXZlbnQiLCIkc3RhdGUiLCIkY29yZG92YUdlb2xvY2F0aW9uIiwiJHN0YXRlUGFyYW1zIiwiJGlvbmljUG9wdXAiLCJMb2NhdGlvbnNTZXJ2aWNlIiwiQXBpU2VydmljZSIsIkRCU2VydmljZSIsIiRpb25pY1NsaWRlQm94RGVsZWdhdGUiLCIkaW9uaWNTY3JvbGxEZWxlZ2F0ZSIsImZvcm0iLCJlZGFkIiwidWx0aW1vX25pdmVsX2Fwcm9iYWRvIiwidWx0aW1vX2FuaW9fYXByb2JhZG8iLCJwbGFuIiwibHVnYXIiLCJxdWUiLCJkb25kZSIsInR1cm5vIiwiU2VhcmNoUXVlUmVzdWx0cyIsIlNlYXJjaERvbmRlUmVzdWx0cyIsInNlYXJjaFF1ZSIsInNlYXJjaERvbmRlIiwib3B0aW9uIiwiZXN0YWJsZWNpbWllbnRvcyIsInJlc3RhckVkYWQiLCJwYXJzZUludCIsInN1bWFyRWRhZCIsInNlbGVjdFVsdGltb05pdmVsIiwiaWROaXZlbCIsImkiLCJ4IiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50c0J5Q2xhc3NOYW1lIiwibGVuZ3RoIiwiY2xhc3NOYW1lIiwiaWQiLCJzZWxlY3RlZCIsImdldEVsZW1lbnRCeUlkIiwic2VsZWN0X3R1cm5vIiwiaWRUdXJubyIsInNlbGVjdF9vcHRpb24iLCJpZE9wdGlvbiIsInN0eWxlIiwiZGlzcGxheSIsInZpc2liaWxpdHkiLCJtaW5IZWlnaHQiLCJvblNlYXJjaENoYW5nZVF1ZSIsInNlYXJjaCIsInNlYXJjaF9zdHIiLCJ2YWx1ZSIsInRyaW0iLCJzZWFyY2hRdWVFc3R1ZGlhciIsInJlc3BvbnNlIiwiZGF0YSIsImhpZGVTZWFyY2hRdWVSZXN1bHRzIiwic2VsZWN0UXVlRXN0dWRpYXJJdGVtIiwiY3Vyc28iLCJub21icmUiLCJsaXN0QWxsUXVlRXN0dWRpYXIiLCJvblNlYXJjaENoYW5nZURvbmRlIiwic2VhcmNoRG9uZGVFc3R1ZGlhciIsImhpZGVTZWFyY2hEb25kZVJlc3VsdHMiLCJzZWxlY3REb25kZUVzdHVkaWFySXRlbSIsImxvY19kZXAiLCJlZGl0U2VhcmNoIiwicHJldmlvdXMiLCJuZXh0Iiwic2xpZGVIYXNDaGFuZ2VkIiwiaW5kZXgiLCJ1cGRhdGVGaWx0ZXJzIiwiZmlsdGVycyIsImdldEVzdGFibGVjaW1pZW50b3NCeUZpbHRlcnMiLCJjb25zb2xlIiwibG9nIiwidXBkYXRlTWFwUGlucyIsIm9wZW5EZXRhaWxzTW9kYWwiLCJnZXRFc3RhYmxlY2ltaWVudG9CeUlkIiwiTW9kYWxTZXJ2aWNlIiwiJG9uIiwiY2hlY2tOb01vZGFsSXNPcGVuIiwiZ2VvbG9jYXRlIiwicG9zT3B0aW9ucyIsInRpbWVvdXQiLCJlbmFibGVIaWdoQWNjdXJhY3kiLCJnZXRDdXJyZW50UG9zaXRpb24iLCJwb3NpdGlvbiIsInNhdmVfaW5pdGlhbF9wb3NpdGlvbiIsImdvIiwiZXJyIiwiZ29fdG9fZm9ybSIsImdvX3RvX3NlYXJjaCIsIl8iLCJsZWFmbGV0RGF0YSIsIkNvbmZpZ1NlcnZpY2UiLCJQaW5TZXJ2aWNlIiwiJGludGVydmFsIiwiJGxvY2F0aW9uIiwiTWFwU2VydmljZSIsIiRpb25pY01vZGFsIiwiJHRpbWVvdXQiLCJiYXNlVVJMIiwiQXBwTmFtZSIsIm9uZV92YWx1ZV9wb3B1cCIsIm15SW50ZXJ2YWxzIiwiQXJyYXkiLCJtYXAiLCJtb2RhbF9tYXAiLCJlc3RhYmxlY2ltaWVudG8iLCJtYXBTY29wZSIsImNyZWF0ZV9vbmxpbmVfbWFwIiwiZmlsdGVyc1VwZGF0ZWQiLCJkZWZhdWx0cyIsInRpbGVMYXllciIsIm1pblpvb20iLCJtYXhab29tIiwiem9vbUNvbnRyb2xQb3NpdGlvbiIsIm1hcmtlcnMiLCJldmVudHMiLCJlbmFibGUiLCJsb2dpYyIsImNlbnRlciIsImxhdCIsImxuZyIsInpvb20iLCJsb2NhdGUiLCJjb29yZHMiLCJsYXRpdHVkZSIsImxvbmdpdHVkZSIsIm5vdyIsIm1lc3NhZ2UiLCJmb2N1cyIsImRyYWdnYWJsZSIsImxvYWRQaW5zTGF5ZXIiLCJnZXRNYXAiLCJlYWNoTGF5ZXIiLCJtYXJrZXIiLCJfdXJsIiwicmVtb3ZlTGF5ZXIiLCJmb3JFYWNoIiwiZmVhdHVyZSIsImxvbiIsIm1hcmtlckljb24iLCJMIiwiaWNvbiIsImljb25VcmwiLCJpY29uU2l6ZSIsImljb25BbmNob3IiLCJwb3B1cEFuY2hvciIsImJpbmRQb3B1cCIsIm9wZW5Qb3B1cCIsImFkZExheWVyIiwiZnJvbVRlbXBsYXRlVXJsIiwiaGFyZHdhcmVCYWNrQnV0dG9uQ2xvc2UiLCJhbmltYXRpb24iLCJtb2RhbCIsImFjdGl2ZU1vZGFsIiwic2hvdyIsIk1hcCIsInByb3RvdHlwZSIsInBhblRvT2Zmc2V0IiwibGF0bG5nIiwib2Zmc2V0IiwidGhpcyIsImxhdExuZ1RvQ29udGFpbmVyUG9pbnQiLCJ5IiwicG9pbnQiLCJjb250YWluZXJQb2ludFRvTGF0TG5nIiwic2V0VmlldyIsInBhbiIsInpvb21Db250cm9sIiwidGl0bGUiLCJwYWRkaW5nWCIsImlubmVyV2lkdGgiLCJjbG9zZV9tb2RhbCIsIm5vbWJyZV9jZW50cm8iLCJvblNlYXJjaENoYW5nZSIsInNob3dNYXAiLCJzaG93TGlzdCIsImZhY3RvcnkiLCIkaHR0cCIsIkFwaU9iamVjdCIsIl9kYXRhIiwiZXh0ZW5kIiwiYXBpVVJMIiwic3RyIiwiZ2V0IiwicGFyYW1zIiwiaGFzaF9pZCIsIk1hdGgiLCJyYW5kb20iLCJmb3JtU2NvcGUiLCJsYXN0U2VhcmNoUmVzcG9uc2VFc3RhYmxlY2ltaWVudG9zIiwiZmlsdGVyc09iamVjdCIsImNyZWF0ZUZpbHRlclBhcmFtc0ZvckdldFJlcXVlc3QiLCJxdWVFc3R1ZGlhcklkIiwicXVlRXN0dWRpYXJOb21icmUiLCJxdWVFc3R1ZGlhclRhZ1VubyIsInRhZyIsInF1ZUVzdHVkaWFyVGFnRG9zIiwiZG9uZGVFc3R1ZGlhckRlcGFydGFtZW50byIsImRlcGFydGFtZW50byIsImRvbmRlRXN0dWRpYXJMb2NhbGlkYWQiLCJsb2NhbGlkYWQiLCJkb25kZUVzdHVkaWFyTGF0IiwiY29vcmRlbmFkYXMiLCJkb25kZUVzdHVkaWFyTG9uIiwidGlwbyIsInBhcmFtZXRlcnMiLCIkY29yZG92YUZpbGVUcmFuc2ZlciIsIlZhbGlkYXRpb25TZXJ2aWNlIiwibG9nX2luIiwidXNlciIsInBhc3N3b3JkIiwiYm9keSIsInBvc3QiLCJ3aXRoQ3JlZGVudGlhbHMiLCJoZWFkZXJzIiwiQ29udGVudC1UeXBlIiwic2lnbl9vdXQiLCJlbWFpbCIsInBhc3N3b3JkX3NpZ25faW4iLCJjcmVhdGVfdXNlciIsInVzZXJPYmoiLCJwaWN0dXJlX3VybCIsImlzTW9iaWxlRGV2aWNlIiwiZmlsZUtleSIsInVzZXJuYW1lIiwiZ2VuZGVyIiwiaW50ZXJlc3RlZCIsInN0YXR1cyIsInNob3dfbG9jYXRpb24iLCJ0cnVzdEFsbEhvc3RzIiwidXBsb2FkIiwiZm9ybURhdGEiLCJGb3JtRGF0YSIsImFwcGVuZCIsInVuZGVmaW5lZCIsInRyYW5zZm9ybVJlcXVlc3QiLCJpZGVudGl0eSIsInBhc3N3b3JkX3JlY292ZXJ5IiwibG9naW5fZW1haWwiLCJwYXNzd29yZF9jaGFuZ2UiLCJvbGRQYXNzd29yZCIsIm5ld1Bhc3N3b3JkIiwiY29uZmlybVBhc3N3b3JkIiwiZWRpdF91c2VyIiwiQ29uZmlnT2JqIiwiaXNXZWJWaWV3IiwiJGNvcmRvdmFOZXR3b3JrIiwiaXNPbmxpbmUiLCJpc09mZmxpbmUiLCIkcSIsInNhdmVVc2VyIiwidXNlcl9uYW1lIiwidXNlcl9wYXNzd29yZCIsInVzZXJfcGljdHVyZV91cmwiLCJ1aWQiLCJfaWQiLCJuYW1lIiwiZ2V0VXNlciIsImRvYyIsIl9yZXYiLCJfZGIiLCJwdXQiLCJlcmFzZVVzZXIiLCJyZW1vdmUiLCJpbml0REIiLCJQb3VjaERCIiwic2F2ZVJlcG9ydCIsInJlcG9ydCIsImRhdGUiLCJEYXRlIiwibmV3X3JlcG9ydF9pZCIsImdldEZ1bGxZZWFyIiwiZ2V0TW9udGgiLCJnZXREYXRlIiwiZ2V0TWlsbGlzZWNvbmRzIiwidXBkYXRlUmVwb3J0IiwiZ2V0Q2F0ZWdvcmllcyIsInNhdmVDYXRlZ29yaWVzIiwiY2F0ZWdvcmllcyIsImdldFJlcG9ydCIsInJlcG9ydElkIiwiZ2V0QWxsUmVwb3J0cyIsImFsbERvY3MiLCJpbmNsdWRlX2RvY3MiLCJhdHRhY2htZW50cyIsInN0YXJ0a2V5IiwiZW5ka2V5IiwiZGVsZXRlUmVwb3J0IiwicmVwb3J0X2lkIiwiZGVsZXRlR2l2ZW5SZXBvcnQiLCJodHRwX3Jlc3BvbnNlX2lzX3N1Y2Nlc3NmdWwiLCJqc29uUmVzdWx0IiwiZXJyb3JDb250YWluZXJJZCIsImVycm9yRGl2IiwiU3RhdHVzIiwiaW5uZXJIVE1MIiwiTWVzc2FnZSIsImh0dHBfcmVzcG9uc2VfaXNfc3VjY2Vzc2Z1bF9hamF4IiwicmVzdWx0IiwiaHR0cF9yZXNwb25zZV9pc19zdWNjZXNzZnVsX3BvcHVwIiwiYWxlcnRQb3B1cCIsImFsZXJ0IiwidGVtcGxhdGUiLCJyZXMiLCJodHRwX2RhdGFfcmVzcG9uc2VfaXNfc3VjY2Vzc2Z1bCIsImh0dHBfZGF0YV9yZXNwb25zZV9pc19zdWNjZXNzZnVsX2FqYXgiLCJzaG93X2Vycm9yX21lc3NhZ2UiLCJzaG93X2Vycm9yX21lc3NhZ2VfcG9wdXAiLCJjaGVja19maWVsZHMiLCJmaWVsZHMiLCJlcnJvcnMiLCJmaWVsZCIsInR5cGUiLCJ2YWxpZGF0ZV9ub3RfZW1wdHkiLCJ2YWxpZGF0ZV9lbWFpbCIsInZhbGlkYXRlX2lkZG9jX3V5IiwidmFsaWRhdGVfdHdvX3dvcmRzIiwidmFsaWRhdGVfZXF1YWxzVG8iLCJzZWNvbmRWYWx1ZSIsIiRpb25pY0xvYWRpbmciLCJMT0FERVJBUEkiLCJzaG93TG9hZGluZyIsInRleHQiLCJoaWRlTG9hZGluZyIsImhpZGUiLCJ0b2dnbGVMb2FkaW5nV2l0aE1lc3NhZ2UiLCJzZWxmIiwiY29uZmlybVBvcHVwIiwiY29uZmlybSIsInNob3dBbGVydCIsIl90aXRsZSIsIl90ZW1wbGF0ZSIsImxvY2F0aW9uc09iaiIsImluaXRpYWxfbGF0IiwiaW5pdGlhbF9sbmciLCJsYXN0X3VzZXJfbGF0IiwibGFzdF91c2VyX2xuZyIsImNvdW5jaWxfbW9kYWwiLCJzZWxlY3RlZF9jb3VuY2lsIiwic2VsZWN0Q291bmNpbCIsImNvdW5jaWxOYW1lIiwic2F2ZV9sYXN0X3VzZXJfcG9zaXRpb24iLCJzYXZlZExvY2F0aW9ucyIsIiRjb21waWxlIiwicHJvajQiLCJkZWZzIiwibWFwU2VydmljZSIsImdvVG9QbGFjZSIsIl9nZW9Kc29uIiwiY3JzIiwicHJvcGVydGllcyIsImZlYXR1cmVzIiwiZ2VvbWV0cnkiLCJjb29yZGluYXRlcyIsIl9sYXRsbmciLCJsYXllciIsIlByb2oiLCJnZW9Kc29uIiwicG9pbnRUb0xheWVyIiwiaHRtbFBvcFVwIiwiY29tcGlsZWQiLCJhZGRUbyIsImNlbnRlck1hcE9uQ29vcmRzIiwiTGF0TG5nIiwibW9kYWxPQkoiLCJQaW4iLCJwaW5zVVJMIiwiZ2V0QWxsIiwic2VuZFVzZXJMb2NhdGlvbiIsIl9hbGwiLCJjdXJyZW50IiwibGFzdFBpbnNSZXNwb25zZSIsImJ1aWxkIiwic2V0TGF0TG5nIiwic2hvd19hbGVydCIsImFsZXJ0X3RpdGxlIiwiYWxlcnRfbWVzc2FnZSIsImFza0Zvck9uZVZhbHVlUG9wVXAiLCJmaWVsZF9uYW1lIiwidmFsaWRhdGlvblR5cGUiLCJteVBvcHVwIiwic3ViVGl0bGUiLCJidXR0b25zIiwib25UYXAiLCJwcmV2ZW50RGVmYXVsdCIsInNlbWFwaG9yZU9iaiIsInNlbWFwaG9yZXMiLCJ0YWtlSWZBdmFpbGFibGUiLCJzZW1hcGhvcmVJZCIsIm1ha2VBdmFpbGFibGVBZ2FpbiIsIkFwaUltRW5kcG9pbnQiLCJBcGlEYXRhRW5kcG9pbnQiLCJyZXN0UHJlZmZpeCIsImxvY2F0aW9uQVBJIiwic2VhcmNoTG9jYXRpb25CeVN0ciIsIl9sb2NhdGlvbiIsIm1ldGhvZCIsInNlYXJjaEVzcXVpbmFCeVN0ciIsImNhbGxlIiwiZXNxdWluYSIsImdldExvY2F0aW9uR2VvbSIsImdldFBhcmFtUGF0aEJ5VGlwbyIsInBhdGhQYXJhbXMiLCJnZXRMb2NhdGlvbkdlb21QTUIiLCJlc3F1aW5hX251bWVybyIsIl90aXBvIiwicmVzdEdlb0RhdGFTZXJ2aWNlUGF0aCIsIkVTUVVJTkEiLCJESVJFQ0NJT04iLCJVc2VyT2JqIiwic2F2ZV91c2VyX2RhdGEiLCJlcmFzZV91c2VyX2RhdGEiLCJpZGVudGl0eV9kb2N1bWVudCIsInBob25lIiwiZ2V0X3VzZXJfZGF0YSIsImFkZF9waG90byIsImlzTG9nZ2VkIiwidmFsdWVzIiwic3BsaXQiLCJmaWx0ZXIiLCJ2IiwicmUiLCJ0ZXN0IiwicmVwbGFjZSIsImRpZyIsImEiXSwibWFwcGluZ3MiOiJBQU9BLEdBQUlBLFNBQ0ZDLFlBQWFDLFFBQVFDLE9BQU8seUJBQzVCQyxTQUFVRixRQUFRQyxPQUFPLHNCQUczQkgsUUFBT0ssSUFBTUgsUUFBUUMsT0FBTyxVQUFXLFFBQVEsZUFBZSxtQkFBbUIsb0JBQXFCLHFCQUFzQixrQkFBbUIsY0FFOUlHLFNBQVMsaUJBQ1JDLElBQUssaUNBR05ELFNBQVMsbUJBQ1JDLElBQUssNkNBR05DLFVB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WkosZUFBZ0IsU0FBVTNRLEdBQ3RCLEdBQVUsTUFBUEEsR0FBc0IsYUFBUEEsR0FBNkIsSUFBUEEsRUFBVSxDQUNoRCxHQUFJc1gsR0FBSyx3SkFDVCxPQUFPQSxHQUFHQyxLQUFLdlgsR0FFZixPQUFPLEdBSWI0USxrQkFBbUIsU0FBVTVRLEdBQzNCLEdBQVUsTUFBUEEsR0FBc0IsYUFBUEEsR0FBNkIsSUFBUEEsRUFBVSxDQUM5Q0EsRUFBUUEsRUFBTXdYLFFBQVEsTUFBTyxHQUM3QixJQUFJQyxHQUFNelgsRUFBTUEsRUFBTWhCLE9BQVMsR0FDM0IwWSxFQUFJLEVBQU85WSxFQUFJLENBQ25CLElBQUdvQixFQUFNaEIsUUFBVSxFQUNqQixJQUFJSixFQUFJb0IsRUFBTWhCLE9BQVFKLEVBQUksRUFBR0EsSUFDM0JvQixFQUFRLElBQU1BLENBR2xCLEtBQUlwQixFQUFJLEVBQUdBLEVBQUksRUFBR0EsSUFDaEI4WSxHQUFNbFosU0FBUyxVQUFVSSxJQUFNSixTQUFTd0IsRUFBTXBCLElBQU8sRUFFdkQsSUFBSStRLEVBTUosT0FKRUEsR0FEQytILEVBQUUsS0FBTyxFQUNELEVBRUEsR0FBS0EsRUFBSSxHQUVqQkQsR0FBTzlILEVBTVosT0FBTyIsImZpbGUiOiJhcHAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJb25pYyBTdGFydGVyIEFwcFxuXG4vLyBhbmd1bGFyLm1vZHVsZSBpcyBhIGdsb2JhbCBwbGFjZSBmb3IgY3JlYXRpbmcsIHJlZ2lzdGVyaW5nIGFuZCByZXRyaWV2aW5nIEFuZ3VsYXIgbW9kdWxlc1xuLy8gJ3BtYl9pbScgaXMgdGhlIG5hbWUgb2YgdGhpcyBhbmd1bGFyIG1vZHVsZSBleGFtcGxlIChhbHNvIHNldCBpbiBhIDxib2R5PiBhdHRyaWJ1dGUgaW4gaW5kZXguaHRtbClcbi8vIHRoZSAybmQgcGFyYW1ldGVyIGlzIGFuIGFycmF5IG9mICdyZXF1aXJlcydcbi8vICdzdGFydGVyLnNlcnZpY2VzJyBpcyBmb3VuZCBpbiBzZXJ2aWNlcy5qc1xuLy8gJ3N0YXJ0ZXIuY29udHJvbGxlcnMnIGlzIGZvdW5kIGluIGNvbnRyb2xsZXJzLmpzXG52YXIgcG1iX2ltID0ge1xuICBjb250cm9sbGVyczogYW5ndWxhci5tb2R1bGUoJ3BtYl9pbS5jb250cm9sbGVycycsIFtdKSxcbiAgc2VydmljZXM6IGFuZ3VsYXIubW9kdWxlKCdwbWJfaW0uc2VydmljZXMnLCBbXSlcbn07XG5cbnBtYl9pbS5hcHAgPSBhbmd1bGFyLm1vZHVsZSgncG1iX2ltJywgWydpb25pYycsJ2lvbmljLndpemFyZCcsJ2lvbi1hdXRvY29tcGxldGUnLCdsZWFmbGV0LWRpcmVjdGl2ZScsICdwbWJfaW0uY29udHJvbGxlcnMnLCAncG1iX2ltLnNlcnZpY2VzJywgJ25nQ29yZG92YSddKVxuXG4uY29uc3RhbnQoJ0FwaUltRW5kcG9pbnQnLCB7XG4gIHVybDogJ2h0dHA6Ly93d3cubW9udGV2aWRlby5ndWIudXknXG59KVxuXG4uY29uc3RhbnQoJ0FwaURhdGFFbmRwb2ludCcsIHtcbiAgdXJsOiAnaHR0cDovL2JhY2tlbmQuZWR1Y2FjaW9uLnRob3IuZGF0YXV5Lm9yZydcbn0pXG5cbi5kaXJlY3RpdmUoJ3NlbGVjdCcsZnVuY3Rpb24oKXsgLy9zYW1lIGFzIFwibmdTZWxlY3RcIlxuICAgIHJldHVybiB7XG4gICAgICAgIHJlc3RyaWN0OiAnRScsXG4gICAgICAgIHNjb3BlOiBmYWxzZSxcbiAgICAgICAgbGluazogZnVuY3Rpb24gKHNjb3BlLCBlbGUpIHtcbiAgICAgICAgICAgIGVsZS5vbigndG91Y2htb3ZlIHRvdWNoc3RhcnQnLGZ1bmN0aW9uKGUpe1xuICAgICAgICAgICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG4gICAgfVxufSlcblxuXG4ucnVuKGZ1bmN0aW9uKCRpb25pY1BsYXRmb3JtLCAkcm9vdFNjb3BlLCAkY29yZG92YUtleWJvYXJkKSB7XG4gICRyb290U2NvcGUuVkVSU0lPTiA9IHdpbmRvdy5WRVJTSU9OO1xuICAkaW9uaWNQbGF0Zm9ybS5yZWFkeShmdW5jdGlvbigpIHtcbiAgICAvLyBIaWRlIHRoZSBhY2Nlc3NvcnkgYmFyIGJ5IGRlZmF1bHQgKHJlbW92ZSB0aGlzIHRvIHNob3cgdGhlIGFjY2Vzc29yeSBiYXIgYWJvdmUgdGhlIGtleWJvYXJkXG4gICAgLy8gZm9yIGZvcm0gaW5wdXRzKVxuICAgIGlmICh3aW5kb3cuY29yZG92YSAmJiB3aW5kb3cuY29yZG92YS5wbHVnaW5zLktleWJvYXJkKSB7XG4gICAgICAvL2NvcmRvdmEucGx1Z2lucy5LZXlib2FyZC5oaWRlS2V5Ym9hcmRBY2Nlc3NvcnlCYXIoZmFsc2UpO1xuICAgICAgLy9jb3Jkb3ZhLnBsdWdpbnMuS2V5Ym9hcmQuZGlzYWJsZVNjcm9sbCh0cnVlKTtcbiAgICB9XG4gICAgLy93aW5kb3cuS2V5Ym9hcmQuaGlkZUtleWJvYXJkQWNjZXNzb3J5QmFyKGZhbHNlKTtcbiAgICAvL2NvcmRvdmEucGx1Z2lucy5LZXlib2FyZC5oaWRlS2V5Ym9hcmRBY2Nlc3NvcnlCYXIoZmFsc2UpO1xuICAgIC8vJGNvcmRvdmFLZXlib2FyZC5oaWRlQWNjZXNzb3J5QmFyKGZhbHNlKVxuICAgIC8vJGNvcmRvdmFLZXlib2FyZC5kaXNhYmxlU2Nyb2xsKHRydWUpXG4gICAgaW9uaWMuUGxhdGZvcm0uaXNGdWxsU2NyZWVuID0gZmFsc2U7XG4gICAgaWYgKHdpbmRvdy5TdGF0dXNCYXIpIHtcbiAgICAgIC8vIG9yZy5hcGFjaGUuY29yZG92YS5zdGF0dXNiYXIgcmVxdWlyZWRcbiAgICAgIFN0YXR1c0Jhci5zdHlsZURlZmF1bHQoKTtcbiAgICB9XG4gIH0pO1xufSlcblxuLmNvbmZpZyhmdW5jdGlvbigkc3RhdGVQcm92aWRlciwgJHVybFJvdXRlclByb3ZpZGVyLCAkY29tcGlsZVByb3ZpZGVyLCAkaW9uaWNDb25maWdQcm92aWRlcikge1xuICBpZiAoaW9uaWMuUGxhdGZvcm0uaXNBbmRyb2lkKCkpIHtcbiAgICAkaW9uaWNDb25maWdQcm92aWRlci5zY3JvbGxpbmcuanNTY3JvbGxpbmcoZmFsc2UpO1xuICAgICRpb25pY0NvbmZpZ1Byb3ZpZGVyLnBsYXRmb3JtLmFuZHJvaWQuc2Nyb2xsaW5nLmpzU2Nyb2xsaW5nKGZhbHNlKTtcbiAgfVxuXG4gICRjb21waWxlUHJvdmlkZXIuZGVidWdJbmZvRW5hYmxlZChmYWxzZSk7XG4gIC8vJGlvbmljQ29uZmlnUHJvdmlkZXIuc2Nyb2xsaW5nLmpzU2Nyb2xsaW5nKHRydWUpO1xuXG4gIC8vIElvbmljIHVzZXMgQW5ndWxhclVJIFJvdXRlciB3aGljaCB1c2VzIHRoZSBjb25jZXB0IG9mIHN0YXRlc1xuICAvLyBMZWFybiBtb3JlIGhlcmU6IGh0dHBzOi8vZ2l0aHViLmNvbS9hbmd1bGFyLXVpL3VpLXJvdXRlclxuICAvLyBTZXQgdXAgdGhlIHZhcmlvdXMgc3RhdGVzIHdoaWNoIHRoZSBhcHAgY2FuIGJlIGluLlxuICAvLyBFYWNoIHN0YXRlJ3MgY29udHJvbGxlciBjYW4gYmUgZm91bmQgaW4gY29udHJvbGxlcnMuanNcbiAgJHN0YXRlUHJvdmlkZXJcblxuLnN0YXRlKCdhcHAnLCB7XG4gICAgY2FjaGU6IGZhbHNlLFxuICAgIHVybDogXCIvYXBwXCIsXG4gICAgYWJzdHJhY3Q6IHRydWUsXG4gICAgdGVtcGxhdGVVcmw6IFwidGVtcGxhdGVzL21lbnUuaHRtbFwiLFxuICAgIGNvbnRyb2xsZXI6ICdBYnNDb250cm9sbGVyJ1xuICB9KVxuXG4uc3RhdGUoJ2FwcC5mb3JtJywge1xuICBjYWNoZTogZmFsc2UsXG4gIHVybDogXCIvZm9ybVwiLFxuICB2aWV3czoge1xuICAgICdtZW51Q29udGVudCcgOntcbiAgICAgIHRlbXBsYXRlVXJsOiBcInRlbXBsYXRlcy9mb3JtLmh0bWxcIixcbiAgICAgIGNvbnRyb2xsZXIgOiBcIkZvcm1DdHJsXCJcbiAgICB9LFxuICAgICdtYXBWaWV3JyA6e1xuICAgICAgdGVtcGxhdGVVcmw6IFwidGVtcGxhdGVzL21hcC5odG1sXCIsXG4gICAgICBjb250cm9sbGVyIDogXCJNYXBDb250cm9sbGVyXCJcbiAgICB9XG4gIH1cbn0pXG5cbi5zdGF0ZSgnYXBwLmludHJvJywge1xuICBjYWNoZTogZmFsc2UsXG4gIHVybDogXCIvaW50cm9cIixcbiAgdmlld3M6IHtcbiAgICAnbWVudUNvbnRlbnQnIDp7XG4gICAgICB0ZW1wbGF0ZVVybDogXCJ0ZW1wbGF0ZXMvaW50cm8uaHRtbFwiLFxuICAgICAgY29udHJvbGxlciA6IFwiSW50cm9DdHJsXCJcbiAgICB9XG4gIH1cbn0pXG5cbi5zdGF0ZSgnYXBwLnNlYXJjaCcsIHtcbiAgY2FjaGU6IGZhbHNlLFxuICB1cmw6IFwiL3NlYXJjaFwiLFxuICB2aWV3czoge1xuICAgICdtZW51Q29udGVudCcgOntcbiAgICAgIHRlbXBsYXRlVXJsOiBcInRlbXBsYXRlcy9zZWFyY2guaHRtbFwiLFxuICAgICAgY29udHJvbGxlciA6IFwiU2VhcmNoQ3RybFwiXG4gICAgfSxcbiAgICAnbWFwVmlldycgOntcbiAgICAgIHRlbXBsYXRlVXJsOiBcInRlbXBsYXRlcy9tYXAuaHRtbFwiLFxuICAgICAgY29udHJvbGxlciA6IFwiTWFwQ29udHJvbGxlclwiXG4gICAgfVxuICB9XG59KVxuXG4vLyBpZiBub25lIG9mIHRoZSBhYm92ZSBzdGF0ZXMgYXJlIG1hdGNoZWQsIHVzZSB0aGlzIGFzIHRoZSBmYWxsYmFja1xuJHVybFJvdXRlclByb3ZpZGVyLm90aGVyd2lzZSgnL2FwcC9pbnRybycpO1xuXG59KTtcbiIsInBtYl9pbS5jb250cm9sbGVycy5jb250cm9sbGVyKCdBYnNDb250cm9sbGVyJyxcblsnJHNjb3BlJywnJGNvcmRvdmFJbkFwcEJyb3dzZXInLFxuZnVuY3Rpb24oJHNjb3BlLCRjb3Jkb3ZhSW5BcHBCcm93c2VyKSB7XG5cbiAgJHNjb3BlLm9wZW5XZWJzaXRlID0gZnVuY3Rpb24odXJsKSB7XG4gICAgdmFyIG9wdGlvbnMgPSB7XG4gICAgICAgICAgICAgIGxvY2F0aW9uOiAnbm8nLFxuICAgICAgICAgICAgICBjbGVhcmNhY2hlOiAneWVzJyxcbiAgICAgICAgICAgICAgdG9vbGJhcjogJ3llcydcbiAgICAgICAgICB9O1xuXG4gICAkY29yZG92YUluQXBwQnJvd3Nlci5vcGVuKHVybCwgJ19ibGFuaycsIG9wdGlvbnMpXG4gICAgICAgIC50aGVuKGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgICAgICAgLy8gc3VjY2Vzc1xuICAgICAgICB9KVxuICAgICAgICAuY2F0Y2goZnVuY3Rpb24oZXZlbnQpIHtcbiAgICAgICAgICAvLyBlcnJvclxuICAgICAgfSk7XG4gIH1cblxufV0pO1xuIiwicG1iX2ltLmNvbnRyb2xsZXJzLmNvbnRyb2xsZXIoJ0Zvcm1DdHJsJywgWyckc2NvcGUnLCAnJHN0YXRlJyxcbiAgJyRjb3Jkb3ZhR2VvbG9jYXRpb24nLFxuICAnJHN0YXRlUGFyYW1zJyxcbiAgJyRpb25pY1BsYXRmb3JtJyxcbiAgJyRpb25pY1BvcHVwJyxcbiAgJ0xvY2F0aW9uc1NlcnZpY2UnLFxuICAnQXBpU2VydmljZScsXG4gICdEQlNlcnZpY2UnLFxuICAnJGlvbmljU2xpZGVCb3hEZWxlZ2F0ZScsXG4gICckaW9uaWNTY3JvbGxEZWxlZ2F0ZScsXG4gIGZ1bmN0aW9uKCRzY29wZSwgJHN0YXRlLCAkY29yZG92YUdlb2xvY2F0aW9uLCAkc3RhdGVQYXJhbXMsICRpb25pY1BsYXRmb3JtLCAkaW9uaWNQb3B1cCwgTG9jYXRpb25zU2VydmljZSwgQXBpU2VydmljZSwgREJTZXJ2aWNlLCAkaW9uaWNTbGlkZUJveERlbGVnYXRlLFxuICAkaW9uaWNTY3JvbGxEZWxlZ2F0ZSkge1xuXG4gICAgJHNjb3BlLmZvcm0gPSB7fTtcbiAgICAkc2NvcGUuZm9ybS5lZGFkID0gMTY7XG4gICAgJHNjb3BlLmZvcm0udWx0aW1vX25pdmVsX2Fwcm9iYWRvID0gXCJwcmltYXJpYVwiO1xuICAgICRzY29wZS5mb3JtLnVsdGltb19hbmlvX2Fwcm9iYWRvID0gXCJcIjtcbiAgICAkc2NvcGUuZm9ybS5wbGFuID0gXCJcIjtcbiAgICAkc2NvcGUuZm9ybS5sdWdhciA9IFwiXCI7XG4gICAgJHNjb3BlLmZvcm0ucXVlID0gXCJcIjtcbiAgICAkc2NvcGUuZm9ybS5kb25kZSA9IFwiXCI7XG4gICAgJHNjb3BlLmZvcm0udHVybm8gPSBcIm1hdHV0aW5vXCI7XG4gICAgJHNjb3BlLmZvcm0uU2VhcmNoUXVlUmVzdWx0cyA9IHt9O1xuICAgICRzY29wZS5mb3JtLlNlYXJjaERvbmRlUmVzdWx0cyA9IHt9O1xuICAgICRzY29wZS5mb3JtLnNlYXJjaFF1ZSA9IFwiXCI7XG4gICAgJHNjb3BlLmZvcm0uc2VhcmNoRG9uZGUgPSBcIlwiO1xuICAgICRzY29wZS5mb3JtLm9wdGlvbiA9IFwibGlzdFwiO1xuICAgICRzY29wZS5lc3RhYmxlY2ltaWVudG9zID0gbnVsbDtcblxuICAgICRzY29wZS5yZXN0YXJFZGFkID0gZnVuY3Rpb24oKXtcbiAgICAgIGlmKHBhcnNlSW50KCRzY29wZS5mb3JtLmVkYWQpID4gNCl7XG4gICAgICAgICRzY29wZS5mb3JtLmVkYWQgPSBwYXJzZUludCgkc2NvcGUuZm9ybS5lZGFkKSAtIDE7XG4gICAgICB9XG4gICAgfTtcblxuICAgICRzY29wZS5zdW1hckVkYWQgPSBmdW5jdGlvbigpe1xuICAgICAgJHNjb3BlLmZvcm0uZWRhZCA9IHBhcnNlSW50KCRzY29wZS5mb3JtLmVkYWQpICsgMTtcbiAgICB9O1xuXG4gICAgJHNjb3BlLnNlbGVjdFVsdGltb05pdmVsID0gZnVuY3Rpb24oaWROaXZlbCl7XG4gICAgICB2YXIgeCA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJuaXZlbFwiKTtcbiAgICAgIHZhciBpO1xuICAgICAgZm9yIChpID0gMDsgaSA8IHgubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICB4W2ldLmNsYXNzTmFtZSA9IFwibml2ZWxfXCIreFtpXS5pZCArXCIgbml2ZWwgaGlkZGVuXCI7XG4gICAgICB9XG4gICAgICB2YXIgc2VsZWN0ZWQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChpZE5pdmVsKTtcbiAgICAgIHNlbGVjdGVkLmNsYXNzTmFtZSA9IFwibml2ZWxfXCIrc2VsZWN0ZWQuaWQgK1wiIG5pdmVsXCI7XG4gICAgICAkc2NvcGUuZm9ybS51bHRpbW9fbml2ZWxfYXByb2JhZG8gPSBpZE5pdmVsO1xuICAgIH1cblxuICAgICRzY29wZS5zZWxlY3RfdHVybm8gPSBmdW5jdGlvbihpZFR1cm5vKXtcbiAgICAgIHZhciB4ID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcInR1cm5vc1wiKTtcbiAgICAgIHZhciBpO1xuICAgICAgZm9yIChpID0gMDsgaSA8IHgubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICB4W2ldLmNsYXNzTmFtZSA9IFwidHVybm9zIHR1cm5vX1wiKyB4W2ldLmlkICtcIl9vZmZcIjtcbiAgICAgIH1cbiAgICAgIHZhciBzZWxlY3RlZCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlkVHVybm8pO1xuICAgICAgc2VsZWN0ZWQuY2xhc3NOYW1lID0gXCJ0dXJub3MgdHVybm9fXCIrIGlkVHVybm87XG4gICAgICAkc2NvcGUuZm9ybS50dXJubyA9IGlkVHVybm87XG4gICAgfVxuXG4gICAgJHNjb3BlLnNlbGVjdF9vcHRpb24gPSBmdW5jdGlvbihpZE9wdGlvbil7XG4gICAgICB2YXIgeCA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJvcHRpb25zXCIpO1xuICAgICAgdmFyIGk7XG4gICAgICBmb3IgKGkgPSAwOyBpIDwgeC5sZW5ndGg7IGkrKykge1xuICAgICAgICAgIHhbaV0uY2xhc3NOYW1lID0gXCJvcHRpb25zIG9wdGlvbl9cIisgeFtpXS5pZCArXCJfb2ZmXCI7XG4gICAgICB9XG4gICAgICB2YXIgc2VsZWN0ZWQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChpZE9wdGlvbik7XG4gICAgICBzZWxlY3RlZC5jbGFzc05hbWUgPSBcIm9wdGlvbnMgb3B0aW9uX1wiKyBpZE9wdGlvbjtcbiAgICAgICRzY29wZS5mb3JtLm9wdGlvbiA9IGlkT3B0aW9uO1xuICAgICAgaWYoaWRPcHRpb249PVwibWFwXCIpe1xuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1hcF93cmFwcGVyXCIpLnN0eWxlLmRpc3BsYXk9XCJibG9ja1wiO1xuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1hcF9jb250YWluZXJcIikuc3R5bGUuZGlzcGxheT1cImJsb2NrXCI7XG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWFwX2NvbnRhaW5lclwiKS5zdHlsZS52aXNpYmlsaXR5PVwidmlzaWJsZVwiO1xuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImxpc3RfY29udGFpbmVyXCIpLnN0eWxlLmRpc3BsYXk9XCJub25lXCI7XG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZm9ybV9jb250YWluZXJcIikuc3R5bGUubWluSGVpZ2h0PVwiMzcwcHhcIjtcbiAgICAgIH1cbiAgICAgIGlmKGlkT3B0aW9uPT1cImxpc3RcIil7XG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWFwX3dyYXBwZXJcIikuc3R5bGUuZGlzcGxheT1cIm5vbmVcIjtcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJsaXN0X2NvbnRhaW5lclwiKS5zdHlsZS5kaXNwbGF5PVwiYmxvY2tcIjtcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtYXBfY29udGFpbmVyXCIpLnN0eWxlLnZpc2liaWxpdHk9XCJoaWRkZW5cIjtcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtYXBfY29udGFpbmVyXCIpLnN0eWxlLmRpc3BsYXk9XCJub25lXCI7XG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZm9ybV9jb250YWluZXJcIikuc3R5bGUubWluSGVpZ2h0PVwiNjQwcHhcIjtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAkc2NvcGUub25TZWFyY2hDaGFuZ2VRdWUgPSBmdW5jdGlvbigpe1xuICAgICAgdmFyIHNlYXJjaCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicXVlX2VzdHVkaWFyXCIpO1xuICAgICAgdmFyIHNlYXJjaF9zdHIgPSBzZWFyY2gudmFsdWUudHJpbSgpO1xuICAgICAgaWYoc2VhcmNoX3N0ci5sZW5ndGg+PTMpe1xuICAgICAgICBBcGlTZXJ2aWNlLnNlYXJjaFF1ZUVzdHVkaWFyKHNlYXJjaF9zdHIpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG4gICAgICAgICAgLy9jb25zb2xlLmxvZyhyZXNwb25zZSk7XG4gICAgICAgICAgJHNjb3BlLmZvcm0uU2VhcmNoUXVlUmVzdWx0cyA9IHJlc3BvbnNlLmRhdGE7XG4gICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJTZWFyY2hRdWVSZXN1bHRzXCIpLnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XG4gICAgICAgIH0pO1xuICAgICAgfWVsc2V7XG4gICAgICAgICRzY29wZS5oaWRlU2VhcmNoUXVlUmVzdWx0cygpO1xuICAgICAgfVxuICAgIH1cblxuICAgICRzY29wZS5oaWRlU2VhcmNoUXVlUmVzdWx0cyA9IGZ1bmN0aW9uKCl7XG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIlNlYXJjaFF1ZVJlc3VsdHNcIikuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgIH1cblxuICAgICRzY29wZS5zZWxlY3RRdWVFc3R1ZGlhckl0ZW0gPSBmdW5jdGlvbihjdXJzbyl7XG4gICAgICAkc2NvcGUuZm9ybS5xdWUgPSBjdXJzbztcbiAgICAgICRzY29wZS5oaWRlU2VhcmNoUXVlUmVzdWx0cygpO1xuICAgICAgJHNjb3BlLmZvcm0uc2VhcmNoUXVlID0gY3Vyc28ubm9tYnJlO1xuICAgIH1cblxuICAgICRzY29wZS5saXN0QWxsUXVlRXN0dWRpYXIgPSBmdW5jdGlvbigpe1xuICAgICAgdmFyIHNlYXJjaF9zdHIgPSBcImFwaS1nZXQtYWxsXCI7XG4gICAgICAgIEFwaVNlcnZpY2Uuc2VhcmNoUXVlRXN0dWRpYXIoc2VhcmNoX3N0cikudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHtcbiAgICAgICAgICAvL2NvbnNvbGUubG9nKHJlc3BvbnNlKTtcbiAgICAgICAgICAkc2NvcGUuZm9ybS5TZWFyY2hRdWVSZXN1bHRzID0gcmVzcG9uc2UuZGF0YTtcbiAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIlNlYXJjaFF1ZVJlc3VsdHNcIikuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgJHNjb3BlLm9uU2VhcmNoQ2hhbmdlRG9uZGUgPSBmdW5jdGlvbigpe1xuICAgICAgdmFyIHNlYXJjaCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZG9uZGVfZXN0dWRpYXJcIik7XG4gICAgICB2YXIgc2VhcmNoX3N0ciA9IHNlYXJjaC52YWx1ZS50cmltKCk7XG4gICAgICBpZihzZWFyY2hfc3RyLmxlbmd0aD49Myl7XG4gICAgICAgIEFwaVNlcnZpY2Uuc2VhcmNoRG9uZGVFc3R1ZGlhcihzZWFyY2hfc3RyKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkge1xuICAgICAgICAgIC8vY29uc29sZS5sb2cocmVzcG9uc2UpO1xuICAgICAgICAgICRzY29wZS5mb3JtLlNlYXJjaERvbmRlUmVzdWx0cyA9IHJlc3BvbnNlLmRhdGE7XG4gICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJTZWFyY2hEb25kZVJlc3VsdHNcIikuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcbiAgICAgICAgfSk7XG4gICAgICB9ZWxzZXtcbiAgICAgICAgJHNjb3BlLmhpZGVTZWFyY2hEb25kZVJlc3VsdHMoKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAkc2NvcGUuaGlkZVNlYXJjaERvbmRlUmVzdWx0cyA9IGZ1bmN0aW9uKCl7XG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIlNlYXJjaERvbmRlUmVzdWx0c1wiKS5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgfVxuXG4gICAgJHNjb3BlLnNlbGVjdERvbmRlRXN0dWRpYXJJdGVtID0gZnVuY3Rpb24oZG9uZGUpe1xuICAgICAgJHNjb3BlLmZvcm0uZG9uZGUgPSBkb25kZTtcbiAgICAgICRzY29wZS5oaWRlU2VhcmNoRG9uZGVSZXN1bHRzKCk7XG4gICAgICAkc2NvcGUuZm9ybS5zZWFyY2hEb25kZSA9IGRvbmRlLmxvY19kZXA7XG4gICAgfVxuXG4gICAgJHNjb3BlLmVkaXRTZWFyY2ggPSBmdW5jdGlvbigpe1xuICAgICAgJGlvbmljU2xpZGVCb3hEZWxlZ2F0ZS5wcmV2aW91cygpO1xuICAgICAgJGlvbmljU2xpZGVCb3hEZWxlZ2F0ZS5wcmV2aW91cygpO1xuICAgIH1cblxuXHQgICRzY29wZS5uZXh0ID0gZnVuY3Rpb24oKSB7XG5cdCAgICAkaW9uaWNTbGlkZUJveERlbGVnYXRlLm5leHQoKTtcblx0ICB9O1xuXG5cdCAgJHNjb3BlLnByZXZpb3VzID0gZnVuY3Rpb24oKSB7XG5cdCAgICAkaW9uaWNTbGlkZUJveERlbGVnYXRlLnByZXZpb3VzKCk7XG5cdCAgfTtcblxuICAgICRzY29wZS5zbGlkZUhhc0NoYW5nZWQgPSBmdW5jdGlvbihpbmRleCl7XG4gICAgICAkc2NvcGUuc2VsZWN0X29wdGlvbihcImxpc3RcIik7XG4gICAgICBpZihpbmRleD09Mil7XG4gICAgICAgIC8vaW5kZXggMiBlcyBlbCBzbGlkZSBxdWUgdGllbmUgZWwgYm90w7NuIGRlbCBtYXBhIHkgZGUgZWwgbGlzdGFkb1xuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1hcF9jb250YWluZXJcIikuc3R5bGUuZGlzcGxheT1cIm5vbmVcIjtcbiAgICAgICAgQXBpU2VydmljZS51cGRhdGVGaWx0ZXJzKCRzY29wZS5mb3JtKTtcbiAgICAgICAgaWYoQXBpU2VydmljZS5maWx0ZXJzIT1udWxsKXtcbiAgICAgICAgICAgIEFwaVNlcnZpY2UuZ2V0RXN0YWJsZWNpbWllbnRvc0J5RmlsdGVycygpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG4gICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlKTtcbiAgICAgICAgICAgICAgLy9BcGlTZXJ2aWNlLmxhc3RTZWFyY2hSZXNwb25zZUVzdGFibGVjaW1pZW50b3MgPSByZXNwb25zZS5kYXRhO1xuICAgICAgICAgICAgICAvL0VMIFNFUlZJQ0lPIERFIExBIEFQSSBBQ1RVQUxJWkEgQUwgQ09OVFJPTEFET1IgREVMIE1BUEFcbiAgICAgICAgICAgICAgJHNjb3BlLmVzdGFibGVjaW1pZW50b3MgPSByZXNwb25zZS5kYXRhO1xuICAgICAgICAgICAgICBBcGlTZXJ2aWNlLnVwZGF0ZU1hcFBpbnMocmVzcG9uc2UuZGF0YSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIC8qaWYoJHNjb3BlLmVzdGFibGVjaW1pZW50b3M9PW51bGwpe1xuICAgICAgICAgICAgICAvL0VTVE8gU0UgUFJFQ0FSR0EgUEFSQSBMQSBSRVVOSU9OIENPTiBST01BTk8gRU4gQ0FTTyBERSBRVUUgTk8gRVNURSBMQSBBUEkgUVVFIFJFQ0lCRSBMT1MgRklMVFJPUyBZIERFVlVFTFZFIExPUyBFU1RBQkxFQ0lNSUVOVE9TXG4gICAgICAgICAgICAgICAkc2NvcGUuZXN0YWJsZWNpbWllbnRvcyA9IFtcbiAgICAgICAgICAgICAgICAge25vbWJyZTogXCJMaWNlbyBOwrogMVwiLCBpZDogMTIxNCwgbGF0OiAtMzQuOTA2MzQ2LCBsb246IC01Ni4xNzIwNjUgfSxcbiAgICAgICAgICAgICAgICAge25vbWJyZTogXCJMaWNlbyBOwrogMlwiLCBpZDogMjQzNCwgbGF0OiAtMzQuOTAyNzU0LCBsb246IC01Ni4xNjQxMjcgfSxcbiAgICAgICAgICAgICAgICAge25vbWJyZTogXCJMaWNlbyBOwrogN1wiLCBpZDogNDMyNH0sXG4gICAgICAgICAgICAgICAgIHtub21icmU6IFwiTGljZW8gSnVhbiBab3JyaWxsYVwiLCBpZDogNTM0NX1cbiAgICAgICAgICAgICAgIF07XG4gICAgICAgICAgICAgICBBcGlTZXJ2aWNlLnVwZGF0ZU1hcFBpbnMoJHNjb3BlLmVzdGFibGVjaW1pZW50b3MpO1xuICAgICAgICAgICAgfSovXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAkc2NvcGUub3BlbkRldGFpbHNNb2RhbCA9IGZ1bmN0aW9uKGlkKXtcbiAgICAgIEFwaVNlcnZpY2UuZ2V0RXN0YWJsZWNpbWllbnRvQnlJZChpZCkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHtcbiAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UpO1xuICAgICAgICByZXNwb25zZS5kYXRhLmVzdGFibGVjaW1pZW50b3NbMF0uaWQ9aWQ7XG4gICAgICAgIEFwaVNlcnZpY2Uub3BlbkRldGFpbHNNb2RhbChyZXNwb25zZS5kYXRhLmVzdGFibGVjaW1pZW50b3NbMF0pO1xuICAgICAgfSk7XG4gICAgfVxuXG5cdCAgLyokc2NvcGUuZ29fdG9fbWFwID0gZnVuY3Rpb24oKXtcblx0ICAgICRzdGF0ZS5nbyhcImFwcC5tYXBcIik7XG5cdCAgfSovXG5cbiAgfVxuXSk7XG4iLCJwbWJfaW0uY29udHJvbGxlcnMuY29udHJvbGxlcignSW50cm9DdHJsJywgWyckc2NvcGUnLCAnJHN0YXRlJyxcbiAgJyRjb3Jkb3ZhR2VvbG9jYXRpb24nLFxuICAnJHN0YXRlUGFyYW1zJyxcbiAgJyRpb25pY1BsYXRmb3JtJyxcbiAgJyRpb25pY1BvcHVwJyxcbiAgJ0xvY2F0aW9uc1NlcnZpY2UnLFxuICAnTW9kYWxTZXJ2aWNlJyxcbiAgZnVuY3Rpb24oJHNjb3BlLCAkc3RhdGUsICRjb3Jkb3ZhR2VvbG9jYXRpb24sICRzdGF0ZVBhcmFtcywgJGlvbmljUGxhdGZvcm0sICRpb25pY1BvcHVwLCBMb2NhdGlvbnNTZXJ2aWNlLCBNb2RhbFNlcnZpY2UpIHtcblxuICAgICRzY29wZS4kb24oXCIkaW9uaWNWaWV3LmJlZm9yZUVudGVyXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJmb3JtX2NvbnRhaW5lclwiKS5zdHlsZS5taW5IZWlnaHQgPSBcIjY0MHB4XCI7XG4gICAgICBNb2RhbFNlcnZpY2UuY2hlY2tOb01vZGFsSXNPcGVuKCk7XG4gICAgfSk7XG5cbiAgICAkc2NvcGUuJG9uKFwiJGlvbmljVmlldy5hZnRlckVudGVyXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtYXBfd3JhcHBlclwiKS5zdHlsZS5kaXNwbGF5PVwibm9uZVwiO1xuICAgIH0pO1xuXG5cbiAgJHNjb3BlLmdlb2xvY2F0ZSA9IGZ1bmN0aW9uKCkge1xuXG4gICAgICB2YXIgcG9zT3B0aW9ucyA9IHt0aW1lb3V0OiAzNTAwLCBlbmFibGVIaWdoQWNjdXJhY3k6IHRydWV9O1xuICAgICAgJGNvcmRvdmFHZW9sb2NhdGlvblxuICAgICAgICAuZ2V0Q3VycmVudFBvc2l0aW9uKHBvc09wdGlvbnMpXG4gICAgICAgIC50aGVuKGZ1bmN0aW9uKHBvc2l0aW9uKSB7XG4gICAgICAgICAgTG9jYXRpb25zU2VydmljZS5zYXZlX2luaXRpYWxfcG9zaXRpb24ocG9zaXRpb24pO1xuICAgICAgICAgICRzdGF0ZS5nbyhcImFwcC5mb3JtXCIpO1xuICAgICAgICB9LCBmdW5jdGlvbihlcnIpIHtcbiAgICAgICAgICAkc3RhdGUuZ28oXCJhcHAuZm9ybVwiKTtcbiAgICAgICAgfSk7XG4gICAgfTtcblxuICAkc2NvcGUuZ29fdG9fZm9ybSA9IGZ1bmN0aW9uKCl7XG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtYXBfd3JhcHBlclwiKS5zdHlsZS5kaXNwbGF5PVwiYmxvY2tcIjtcbiAgICAkc3RhdGUuZ28oXCJhcHAuZm9ybVwiKTtcbiAgfVxuXG4gICRzY29wZS5nb190b19zZWFyY2ggPSBmdW5jdGlvbigpe1xuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWFwX3dyYXBwZXJcIikuc3R5bGUuZGlzcGxheT1cImJsb2NrXCI7XG4gICAgJHN0YXRlLmdvKFwiYXBwLnNlYXJjaFwiKTtcbiAgfVxuXG4gICAvKiRzY29wZS4kb24oJyRpb25pY1ZpZXcuZW50ZXInLCBmdW5jdGlvbigpe1xuICAgfSk7Ki9cblxuXG5cbiAgfVxuXSk7XG4iLCJwbWJfaW0uY29udHJvbGxlcnMuY29udHJvbGxlcignTWFwQ29udHJvbGxlcicsIFtcbiAgJyRzY29wZScsXG4gICdfJyxcbiAgJyRjb3Jkb3ZhR2VvbG9jYXRpb24nLFxuICAnbGVhZmxldERhdGEnLFxuICAnQ29uZmlnU2VydmljZScsXG4gICdQaW5TZXJ2aWNlJyxcbiAgJyRpbnRlcnZhbCcsXG4gICckbG9jYXRpb24nLFxuICAnTWFwU2VydmljZScsXG4gICckaW9uaWNNb2RhbCcsXG4gICdNb2RhbFNlcnZpY2UnLFxuICAnQXBpU2VydmljZScsXG4gICckdGltZW91dCcsXG4gICckY29yZG92YUluQXBwQnJvd3NlcicsXG4gIGZ1bmN0aW9uKFxuICAgICRzY29wZSxcbiAgICBfLFxuICAgICRjb3Jkb3ZhR2VvbG9jYXRpb24sXG4gICAgbGVhZmxldERhdGEsXG4gICAgQ29uZmlnU2VydmljZSxcbiAgICBQaW5TZXJ2aWNlLFxuICAgICRpbnRlcnZhbCxcbiAgICAkbG9jYXRpb24sXG4gICAgTWFwU2VydmljZSxcbiAgICAkaW9uaWNNb2RhbCxcbiAgICBNb2RhbFNlcnZpY2UsXG4gICAgQXBpU2VydmljZSxcbiAgICAkdGltZW91dCxcbiAgICAkY29yZG92YUluQXBwQnJvd3NlclxuICApIHtcblxuICAgIC8qKlxuICAgICAqIE9uY2Ugc3RhdGUgbG9hZGVkLCBnZXQgcHV0IG1hcCBvbiBzY29wZS5cbiAgICAgKi9cbiAgICAvKiRzY29wZS5vbmxpbmVfdXNlcl9nZW8gPSB7fTsqL1xuICAgICRzY29wZS5iYXNlVVJMID0gQ29uZmlnU2VydmljZS5iYXNlVVJMO1xuICAgICRzY29wZS5BcHBOYW1lID0gQ29uZmlnU2VydmljZS5BcHBOYW1lO1xuICAgICRzY29wZS5vbmVfdmFsdWVfcG9wdXAgPSBudWxsO1xuICAgICRzY29wZS5teUludGVydmFscyA9IG5ldyBBcnJheSgpO1xuICAgICRzY29wZS5tYXAgPSBudWxsO1xuICAgICRzY29wZS5tb2RhbF9tYXAgPSBudWxsO1xuICAgICRzY29wZS5lc3RhYmxlY2ltaWVudG8gPSBbXTtcblxuICAgICRzY29wZS4kb24oXCIkaW9uaWNWaWV3LmxvYWRlZFwiLCBmdW5jdGlvbigpIHtcbiAgICAgIE1vZGFsU2VydmljZS5jaGVja05vTW9kYWxJc09wZW4oKTtcbiAgICAgIC8vREJTZXJ2aWNlLmluaXREQigpO1xuICAgICAgQXBpU2VydmljZS5tYXBTY29wZSA9ICRzY29wZTtcbiAgICAgICRzY29wZS5jcmVhdGVfb25saW5lX21hcCgpO1xuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzcGlubmVyXCIpLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicGluc3Bpbm5lclwiKS5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgfSk7XG5cbiAgICAkc2NvcGUuZmlsdGVyc1VwZGF0ZWQgPSBmdW5jdGlvbigpe1xuICAgICAgLypjb25zb2xlLmxvZyhBcGlTZXJ2aWNlLmZpbHRlcnMpO1xuICAgICAgJHNjb3BlLmxvYWRQaW5zTGF5ZXIoKTsqL1xuICAgIH1cblxuXG4gICAgJHNjb3BlLmNyZWF0ZV9vbmxpbmVfbWFwID0gZnVuY3Rpb24oKXtcbiAgICAgIGlmKCRzY29wZS5tYXA9PW51bGwpe1xuICAgICAgICAkc2NvcGUubWFwID0ge1xuICAgICAgICAgIGRlZmF1bHRzOiB7XG4gICAgICAgICAgICB0aWxlTGF5ZXI6ICdodHRwczovL3tzfS50aWxlLm9wZW5zdHJlZXRtYXAub3JnL3t6fS97eH0ve3l9LnBuZycsXG4gICAgICAgICAgICBtaW5ab29tOiAxLFxuICAgICAgICAgICAgbWF4Wm9vbTogMTgsXG4gICAgICAgICAgICB6b29tQ29udHJvbFBvc2l0aW9uOiAndG9wbGVmdCcsXG4gICAgICAgICAgfSxcbiAgICAgICAgICBtYXJrZXJzOiB7fSxcbiAgICAgICAgICBldmVudHM6IHtcbiAgICAgICAgICAgIG1hcDoge1xuICAgICAgICAgICAgICBlbmFibGU6IFsnY29udGV4dCddLFxuICAgICAgICAgICAgICBsb2dpYzogJ2VtaXQnXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICBjZW50ZXI6IHtcbiAgICAgICAgICAgIGxhdDogLTM0LjkwMTExMyxcbiAgICAgICAgICAgIGxuZzogLTU2LjE2NDUzMSxcbiAgICAgICAgICAgIHpvb206IDE2XG4gICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICAkdGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1hcF93cmFwcGVyXCIpLnN0eWxlLmRpc3BsYXk9XCJub25lXCI7XG4gICAgICAgIH0sMTAwMCk7XG4gICAgICB9XG4gICAgfTtcblxuXG5cbiAgICAgIC8qKlxuICAgICAqIENlbnRlciBtYXAgb24gdXNlcidzIGN1cnJlbnQgcG9zaXRpb25cbiAgICAgKi9cbiAgICAkc2NvcGUubG9jYXRlID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICRjb3Jkb3ZhR2VvbG9jYXRpb25cbiAgICAgICAgLmdldEN1cnJlbnRQb3NpdGlvbigpXG4gICAgICAgIC50aGVuKGZ1bmN0aW9uKHBvc2l0aW9uKSB7XG4gICAgICAgICAgJHNjb3BlLm1hcC5jZW50ZXIubGF0ID0gcG9zaXRpb24uY29vcmRzLmxhdGl0dWRlO1xuICAgICAgICAgICRzY29wZS5tYXAuY2VudGVyLmxuZyA9IHBvc2l0aW9uLmNvb3Jkcy5sb25naXR1ZGU7XG4gICAgICAgICAgJHNjb3BlLm1hcC5jZW50ZXIuem9vbSA9IDE1O1xuXG4gICAgICAgICAgJHNjb3BlLm1hcC5tYXJrZXJzLm5vdyA9IHtcbiAgICAgICAgICAgIGxhdDogcG9zaXRpb24uY29vcmRzLmxhdGl0dWRlLFxuICAgICAgICAgICAgbG5nOiBwb3NpdGlvbi5jb29yZHMubG9uZ2l0dWRlLFxuICAgICAgICAgICAgbWVzc2FnZTogXCJFc3TDoXMgYXF1w61cIixcbiAgICAgICAgICAgIGZvY3VzOiB0cnVlLFxuICAgICAgICAgICAgZHJhZ2dhYmxlOiBmYWxzZVxuICAgICAgICAgIH07XG5cbiAgICAgICAgfSwgZnVuY3Rpb24oZXJyKSB7XG4gICAgICAgICAgLy8gZXJyb3JcbiAgICAgICAgICAvL2NvbnNvbGUubG9nKFwiTG9jYXRpb24gZXJyb3IhXCIpO1xuICAgICAgICAgIC8vY29uc29sZS5sb2coZXJyKTtcbiAgICAgICAgfSk7XG5cbiAgICB9O1xuXG4gICAgJHNjb3BlLmxvYWRQaW5zTGF5ZXIgPSBmdW5jdGlvbihlc3RhYmxlY2ltaWVudG9zKXtcbiAgICAgIGlmKGVzdGFibGVjaW1pZW50b3MhPW51bGwpe1xuICAgICAgICAvL1JlY29ycmVyIGxvcyBlc3RhYmxpY2ltaWVudG9zIHkgY3JlYXIgbG9zIHBpbmVzXG4gICAgICAgIGxlYWZsZXREYXRhLmdldE1hcChcInByaW1hcnlfbWFwXCIpLnRoZW4oZnVuY3Rpb24obWFwKSB7XG4gICAgICAgICAgbWFwLmVhY2hMYXllcihmdW5jdGlvbihtYXJrZXIpIHtcbiAgICAgICAgICAgICBpZihtYXJrZXIuX3VybCl7XG4gICAgICAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICAgICBtYXAucmVtb3ZlTGF5ZXIobWFya2VyKTtcbiAgICAgICAgICAgICB9XG4gICAgICAgICAgfSlcbiAgICAgICAgICBlc3RhYmxlY2ltaWVudG9zLmZvckVhY2goZnVuY3Rpb24oZmVhdHVyZSl7XG4gICAgICAgICAgICBpZihmZWF0dXJlLmxhdCAmJiBmZWF0dXJlLmxvbil7XG4gICAgICAgICAgICAgIHZhciBtYXJrZXJJY29uID0gTC5pY29uKHtcbiAgICAgICAgICAgICAgICAgICAgaWNvblVybDogJy4vaW1nL2JsdWVfcGluLnN2ZycsXG4gICAgICAgICAgICAgICAgICAgIC8vc2hhZG93VXJsOiAnbGVhZi1zaGFkb3cucG5nJyxcbiAgICAgICAgICAgICAgICAgICAgaWNvblNpemU6ICAgICBbNDgsIDY1XSwgLy8gc2l6ZSBvZiB0aGUgaWNvblxuICAgICAgICAgICAgICAgICAgICAvL3NoYWRvd1NpemU6ICAgWzUwLCA2NF0sIC8vIHNpemUgb2YgdGhlIHNoYWRvd1xuICAgICAgICAgICAgICAgICAgICBpY29uQW5jaG9yOiAgIFsyNCwgNjVdLCAvLyBwb2ludCBvZiB0aGUgaWNvbiB3aGljaCB3aWxsIGNvcnJlc3BvbmQgdG8gbWFya2VyJ3MgbG9jYXRpb25cbiAgICAgICAgICAgICAgICAgICAgLy9zaGFkb3dBbmNob3I6IFs0LCA2Ml0sICAvLyB0aGUgc2FtZSBmb3IgdGhlIHNoYWRvd1xuICAgICAgICAgICAgICAgICAgICBwb3B1cEFuY2hvcjogIFswLCAtNjVdIC8vIHBvaW50IGZyb20gd2hpY2ggdGhlIHBvcHVwIHNob3VsZCBvcGVuIHJlbGF0aXZlIHRvIHRoZSBpY29uQW5jaG9yXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgIHZhciBtYXJrZXIgPSBMLm1hcmtlcihbZmVhdHVyZS5sYXQsIGZlYXR1cmUubG9uXSwge2ljb246IG1hcmtlckljb259KTtcbiAgICAgICAgICAgICAgbWFya2VyLmJpbmRQb3B1cChcIjxiPlwiK2ZlYXR1cmUubm9tYnJlK1wiPC9iPlwiKS5vcGVuUG9wdXAoKTtcbiAgICAgICAgICAgICAgbWFwLmFkZExheWVyKG1hcmtlcik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSlcbiAgICAgICAgfSlcbiAgICAgIH1lbHNle1xuICAgICAgICAvL2NvbnNvbGUubG9nKFwiTm8gaGF5IGVzdGFibGVjaW1pZW50b3MgY2FyZ2Fkb3NcIik7XG4gICAgICB9XG4gICAgfVxuXG4gICAgJHNjb3BlLm9wZW5EZXRhaWxzTW9kYWwgPSBmdW5jdGlvbihlc3RhYmxlY2ltaWVudG8pe1xuICAgICAgY29uc29sZS5sb2coZXN0YWJsZWNpbWllbnRvKTtcbiAgICAgIGlmKGVzdGFibGVjaW1pZW50byE9bnVsbCl7XG4gICAgICAgICRzY29wZS5lc3RhYmxlY2ltaWVudG8gPSBlc3RhYmxlY2ltaWVudG87XG4gICAgICAgICRpb25pY01vZGFsLmZyb21UZW1wbGF0ZVVybCgndGVtcGxhdGVzL2RldGFpbHMuaHRtbCcsIHtcbiAgICAgICAgICBzY29wZTogJHNjb3BlLFxuICAgICAgICAgIGhhcmR3YXJlQmFja0J1dHRvbkNsb3NlOiB0cnVlLFxuICAgICAgICAgIGFuaW1hdGlvbjogJ25vbmUnLFxuICAgICAgICAgIC8vZm9jdXNGaXJzdElucHV0OiB0cnVlXG4gICAgICAgIH0pLnRoZW4oZnVuY3Rpb24obW9kYWwpIHtcbiAgICAgICAgICAgIC8vZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzcGlubmVyXCIpLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICAgICAgICAgIE1vZGFsU2VydmljZS5jaGVja05vTW9kYWxJc09wZW4oKTtcbiAgICAgICAgICAgIE1vZGFsU2VydmljZS5hY3RpdmVNb2RhbCA9IG1vZGFsO1xuICAgICAgICAgICAgTW9kYWxTZXJ2aWNlLmFjdGl2ZU1vZGFsLnNob3coKTtcbiAgICAgICAgICAgIEwuTWFwLnByb3RvdHlwZS5wYW5Ub09mZnNldCA9IGZ1bmN0aW9uIChsYXRsbmcsIG9mZnNldCwgb3B0aW9ucykge1xuICAgICAgICAgICAgICAgIHZhciB4ID0gdGhpcy5sYXRMbmdUb0NvbnRhaW5lclBvaW50KGxhdGxuZykueCAtIG9mZnNldFswXVxuICAgICAgICAgICAgICAgIHZhciB5ID0gdGhpcy5sYXRMbmdUb0NvbnRhaW5lclBvaW50KGxhdGxuZykueSAtIG9mZnNldFsxXVxuICAgICAgICAgICAgICAgIHZhciBwb2ludCA9IHRoaXMuY29udGFpbmVyUG9pbnRUb0xhdExuZyhbeCwgeV0pXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuc2V0Vmlldyhwb2ludCwgMTgsIHsgcGFuOiBvcHRpb25zIH0pXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAkc2NvcGUubW9kYWxfbWFwID0ge1xuICAgICAgICAgICAgICBkZWZhdWx0czoge1xuICAgICAgICAgICAgICAgIHRpbGVMYXllcjogJ2h0dHBzOi8ve3N9LnRpbGUub3BlbnN0cmVldG1hcC5vcmcve3p9L3t4fS97eX0ucG5nJyxcbiAgICAgICAgICAgICAgICBtaW5ab29tOiAxOCxcbiAgICAgICAgICAgICAgICBtYXhab29tOiAxOCxcbiAgICAgICAgICAgICAgICAvL3pvb21Db250cm9sUG9zaXRpb246ICd0b3BsZWZ0JyxcbiAgICAgICAgICAgICAgICB6b29tQ29udHJvbDogZmFsc2UsXG4gICAgICAgICAgICAgICAgLy9kcmFnZ2luZzogZmFsc2UsXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIG1hcmtlcnM6IHt9LFxuICAgICAgICAgICAgICBldmVudHM6IHtcbiAgICAgICAgICAgICAgICBtYXA6IHtcbiAgICAgICAgICAgICAgICAgIGVuYWJsZTogWydjb250ZXh0J10sXG4gICAgICAgICAgICAgICAgICBsb2dpYzogJ2VtaXQnXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBjZW50ZXI6IHtcbiAgICAgICAgICAgICAgICBsYXQ6IC0zNC45MDExMTMsXG4gICAgICAgICAgICAgICAgbG5nOiAtNTYuMTY0NTMxLFxuICAgICAgICAgICAgICAgIHpvb206IDE4XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIkVTVEFCTEVDSU1JRU5UTzpcIik7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygkc2NvcGUuZXN0YWJsZWNpbWllbnRvKTtcbiAgICAgICAgICAgIGxlYWZsZXREYXRhLmdldE1hcChcInNlY29uZGFyeV9tYXBcIikudGhlbihmdW5jdGlvbihtYXApIHtcbiAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiTUFQQSBTRUNVTkRBUklPOlwiKTtcbiAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKG1hcCk7XG4gICAgICAgICAgICAgICAgICB2YXIgbWFya2VySWNvbiA9IEwuaWNvbih7XG4gICAgICAgICAgICAgICAgICAgICAgICBpY29uVXJsOiAnLi9pbWcvYmx1ZV9waW4uc3ZnJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vc2hhZG93VXJsOiAnbGVhZi1zaGFkb3cucG5nJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGljb25TaXplOiAgICAgWzI1LCAzNF0sIC8vIHNpemUgb2YgdGhlIGljb25cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vc2hhZG93U2l6ZTogICBbNTAsIDY0XSwgLy8gc2l6ZSBvZiB0aGUgc2hhZG93XG4gICAgICAgICAgICAgICAgICAgICAgICBpY29uQW5jaG9yOiAgIFsxMiwgMzRdLCAvLyBwb2ludCBvZiB0aGUgaWNvbiB3aGljaCB3aWxsIGNvcnJlc3BvbmQgdG8gbWFya2VyJ3MgbG9jYXRpb25cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vc2hhZG93QW5jaG9yOiBbNCwgNjJdLCAgLy8gdGhlIHNhbWUgZm9yIHRoZSBzaGFkb3dcbiAgICAgICAgICAgICAgICAgICAgICAgIHBvcHVwQW5jaG9yOiAgWzAsIC0zNF0gLy8gcG9pbnQgZnJvbSB3aGljaCB0aGUgcG9wdXAgc2hvdWxkIG9wZW4gcmVsYXRpdmUgdG8gdGhlIGljb25BbmNob3JcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICB2YXIgbWFya2VyID0gTC5tYXJrZXIoWyRzY29wZS5lc3RhYmxlY2ltaWVudG8ubGF0LCAkc2NvcGUuZXN0YWJsZWNpbWllbnRvLmxvbmddLCB7aWNvbjogbWFya2VySWNvbn0pO1xuICAgICAgICAgICAgICAgICAgbWFya2VyLmJpbmRQb3B1cChcIjxiPlwiKyRzY29wZS5lc3RhYmxlY2ltaWVudG8udGl0bGUrXCI8L2I+XCIpLm9wZW5Qb3B1cCgpO1xuICAgICAgICAgICAgICAgICAgbWFwLmFkZExheWVyKG1hcmtlcik7XG4gICAgICAgICAgICAgICAgICB2YXIgcGFkZGluZ1ggPSB3aW5kb3cuaW5uZXJXaWR0aCAvIDQ7XG4gICAgICAgICAgICAgICAgICBtYXAucGFuVG9PZmZzZXQoWyRzY29wZS5lc3RhYmxlY2ltaWVudG8ubGF0LCAkc2NvcGUuZXN0YWJsZWNpbWllbnRvLmxvbmddLFtwYWRkaW5nWCwyNV0se30pO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgJHNjb3BlLmNsb3NlX21vZGFsID0gZnVuY3Rpb24oKXtcbiAgICAgIE1vZGFsU2VydmljZS5jaGVja05vTW9kYWxJc09wZW4oKTtcbiAgICB9XG5cbiAgICAkc2NvcGUub3BlbldlYnNpdGUgPSBmdW5jdGlvbih1cmwpIHtcbiAgICAgIHZhciBvcHRpb25zID0ge1xuICAgICAgICAgICAgICAgIGxvY2F0aW9uOiAnbm8nLFxuICAgICAgICAgICAgICAgIGNsZWFyY2FjaGU6ICd5ZXMnLFxuICAgICAgICAgICAgICAgIHRvb2xiYXI6ICd5ZXMnXG4gICAgICAgICAgICB9O1xuXG4gICAgICRjb3Jkb3ZhSW5BcHBCcm93c2VyLm9wZW4odXJsLCAnX2JsYW5rJywgb3B0aW9ucylcbiAgICAgICAgICAudGhlbihmdW5jdGlvbihldmVudCkge1xuICAgICAgICAgICAgLy8gc3VjY2Vzc1xuICAgICAgICAgIH0pXG4gICAgICAgICAgLmNhdGNoKGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgICAgICAgICAvLyBlcnJvclxuICAgICAgICB9KTtcbiAgICB9XG5cblxuICB9XG5cbl0pO1xuIiwicG1iX2ltLmNvbnRyb2xsZXJzLmNvbnRyb2xsZXIoJ1NlYXJjaEN0cmwnLCBbJyRzY29wZScsICckc3RhdGUnLFxuICAnJGNvcmRvdmFHZW9sb2NhdGlvbicsXG4gICckc3RhdGVQYXJhbXMnLFxuICAnJGlvbmljUGxhdGZvcm0nLFxuICAnJGlvbmljUG9wdXAnLFxuICAnTG9jYXRpb25zU2VydmljZScsXG4gICdBcGlTZXJ2aWNlJyxcbiAgJ0RCU2VydmljZScsXG4gICckaW9uaWNTbGlkZUJveERlbGVnYXRlJyxcbiAgJyRpb25pY1Njcm9sbERlbGVnYXRlJyxcbiAgZnVuY3Rpb24oJHNjb3BlLCAkc3RhdGUsICRjb3Jkb3ZhR2VvbG9jYXRpb24sICRzdGF0ZVBhcmFtcywgJGlvbmljUGxhdGZvcm0sICRpb25pY1BvcHVwLCBMb2NhdGlvbnNTZXJ2aWNlLCBBcGlTZXJ2aWNlLCBEQlNlcnZpY2UsICRpb25pY1NsaWRlQm94RGVsZWdhdGUsXG4gICRpb25pY1Njcm9sbERlbGVnYXRlKSB7XG5cbiAgICAkc2NvcGUuZm9ybSA9IHt9O1xuICAgICRzY29wZS5mb3JtLmx1Z2FyID0gXCJcIjtcbiAgICAkc2NvcGUuZm9ybS5ub21icmVfY2VudHJvID0gXCJcIjtcbiAgICAkc2NvcGUuZm9ybS5vcHRpb24gPSBcImxpc3RcIjtcbiAgICAkc2NvcGUuZXN0YWJsZWNpbWllbnRvcyA9IG51bGw7XG5cbiAgICAkc2NvcGUuJG9uKFwiJGlvbmljVmlldy5iZWZvcmVFbnRlclwiLCBmdW5jdGlvbigpIHtcbiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZm9ybV9jb250YWluZXJcIikuc3R5bGUubWluSGVpZ2h0ID0gXCI0NjBweFwiO1xuICAgIH0pO1xuXG4gICAgJHNjb3BlLm9uU2VhcmNoQ2hhbmdlID0gZnVuY3Rpb24oKXtcbiAgICAgIC8qdmFyIHNlYXJjaCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicXVlX2VzdHVkaWFyXCIpO1xuICAgICAgdmFyIHNlYXJjaF9zdHIgPSBzZWFyY2gudmFsdWUudHJpbSgpO1xuICAgICAgaWYoc2VhcmNoX3N0ci5sZW5ndGg+PTMpe1xuICAgICAgICBBcGlTZXJ2aWNlLnNlYXJjaFF1ZUVzdHVkaWFyKHNlYXJjaF9zdHIpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG4gICAgICAgICAgLy9jb25zb2xlLmxvZyhyZXNwb25zZSk7XG4gICAgICAgICAgJHNjb3BlLmZvcm0uU2VhcmNoUXVlUmVzdWx0cyA9IHJlc3BvbnNlLmRhdGE7XG4gICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJTZWFyY2hRdWVSZXN1bHRzXCIpLnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XG4gICAgICAgIH0pO1xuICAgICAgfWVsc2V7XG4gICAgICAgICRzY29wZS5oaWRlU2VhcmNoUXVlUmVzdWx0cygpO1xuICAgICAgfSovXG4gICAgfVxuXG4gICAgJHNjb3BlLmhpZGVTZWFyY2hRdWVSZXN1bHRzID0gZnVuY3Rpb24oKXtcbiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiU2VhcmNoUXVlUmVzdWx0c1wiKS5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgfVxuXG4gICAgJHNjb3BlLnNob3dNYXAgPSBmdW5jdGlvbigpe1xuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtYXBfd3JhcHBlclwiKS5zdHlsZS5kaXNwbGF5PVwiYmxvY2tcIjtcbiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWFwX2NvbnRhaW5lclwiKS5zdHlsZS5kaXNwbGF5PVwiYmxvY2tcIjtcbiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWFwX2NvbnRhaW5lclwiKS5zdHlsZS52aXNpYmlsaXR5PVwidmlzaWJsZVwiO1xuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJmb3JtX2NvbnRhaW5lclwiKS5zdHlsZS5taW5IZWlnaHQ9XCIyMTBweFwiO1xuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzZWFyY2hfdmlld19saXN0X2J1dHRvblwiKS5zdHlsZS5kaXNwbGF5PVwiYmxvY2tcIjtcbiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic2VhcmNoX3ZpZXdfbWFwX2J1dHRvblwiKS5zdHlsZS5kaXNwbGF5PVwibm9uZVwiO1xuICAgIH1cblxuICAgICRzY29wZS5zaG93TGlzdCA9IGZ1bmN0aW9uKCl7XG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1hcF93cmFwcGVyXCIpLnN0eWxlLmRpc3BsYXk9XCJub25lXCI7XG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1hcF9jb250YWluZXJcIikuc3R5bGUuZGlzcGxheT1cIm5vbmVcIjtcbiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWFwX2NvbnRhaW5lclwiKS5zdHlsZS52aXNpYmlsaXR5PVwiaGlkZGVuXCI7XG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImZvcm1fY29udGFpbmVyXCIpLnN0eWxlLm1pbkhlaWdodD1cIjQ2MHB4XCI7XG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNlYXJjaF92aWV3X21hcF9idXR0b25cIikuc3R5bGUuZGlzcGxheT1cImJsb2NrXCI7XG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNlYXJjaF92aWV3X2xpc3RfYnV0dG9uXCIpLnN0eWxlLmRpc3BsYXk9XCJub25lXCI7XG4gICAgfVxuXG5cbiAgfVxuXSk7XG4iLCJwbWJfaW0uc2VydmljZXMuZmFjdG9yeSgnQXBpU2VydmljZScsIFsnJGh0dHAnLCAnQ29uZmlnU2VydmljZScsIGZ1bmN0aW9uKCRodHRwLCBDb25maWdTZXJ2aWNlKSB7XG5cbiAgdmFyIGFwaVVSTCA9IENvbmZpZ1NlcnZpY2UuYmFzZVVSTCArIFwiL2FwaS9cIjtcblxuLyoqXG4gICAqIENvbnN0cnVjdG9yLCB3aXRoIGNsYXNzIG5hbWVcbiAgICovXG4gIGZ1bmN0aW9uIEFwaU9iamVjdChfZGF0YSkge1xuICAgIGFuZ3VsYXIuZXh0ZW5kKHRoaXMsIF9kYXRhKTtcbiAgfVxuXG5cbiAgQXBpT2JqZWN0LnNlYXJjaFF1ZUVzdHVkaWFyID0gZnVuY3Rpb24oc3RyKXtcbiAgICByZXR1cm4gJGh0dHAuZ2V0KGFwaVVSTCArICdzZWFyY2gvJyArIHN0ciwge2NhY2hlOiBmYWxzZSwgcGFyYW1zOiB7aGFzaF9pZDpNYXRoLnJhbmRvbSgpfX0pO1xuICB9XG5cbiAgQXBpT2JqZWN0LnNlYXJjaERvbmRlRXN0dWRpYXIgPSBmdW5jdGlvbihzdHIpe1xuICAgIHJldHVybiAkaHR0cC5nZXQoYXBpVVJMICsgJ3NlYXJjaEJ5TG9jYWxpZGFkRGVwYXJ0YW1lbnRvLycgKyBzdHIsIHtjYWNoZTogZmFsc2UsIHBhcmFtczoge2hhc2hfaWQ6TWF0aC5yYW5kb20oKX19KTtcbiAgfVxuXG4gICAgQXBpT2JqZWN0LmZpbHRlcnMgPSBudWxsO1xuICAgIEFwaU9iamVjdC5tYXBTY29wZSA9IG51bGw7XG4gICAgQXBpT2JqZWN0LmZvcm1TY29wZSA9IHt9O1xuICAgIEFwaU9iamVjdC5sYXN0U2VhcmNoUmVzcG9uc2VFc3RhYmxlY2ltaWVudG9zID0gbnVsbDtcblxuICAgIEFwaU9iamVjdC51cGRhdGVGaWx0ZXJzID0gZnVuY3Rpb24oZmlsdGVyc09iamVjdCl7XG4gICAgICBBcGlPYmplY3QuZmlsdGVycyA9IGZpbHRlcnNPYmplY3Q7XG4gICAgICBpZihBcGlPYmplY3QubWFwU2NvcGUgIT0gbnVsbCl7XG4gICAgICAgIEFwaU9iamVjdC5tYXBTY29wZS5maWx0ZXJzVXBkYXRlZCgpO1xuICAgICAgfVxuICAgIH1cblxuICAgIEFwaU9iamVjdC5jcmVhdGVGaWx0ZXJQYXJhbXNGb3JHZXRSZXF1ZXN0ID0gZnVuY3Rpb24oKXtcbiAgICAgIGNvbnNvbGUubG9nKEFwaU9iamVjdC5maWx0ZXJzKTtcbiAgICAgIHZhciBwYXJhbXMgPSB7XG4gICAgICAgIGhhc2hfaWQ6IE1hdGgucmFuZG9tKCksXG4gICAgICAgIGVkYWQ6IEFwaU9iamVjdC5maWx0ZXJzLmVkYWQsXG4gICAgICAgIHVsdGltb19uaXZlbF9hcHJvYmFkbzogQXBpT2JqZWN0LmZpbHRlcnMudWx0aW1vX25pdmVsX2Fwcm9iYWRvLFxuICAgICAgICB1bHRpbW9fYW5pb19hcHJvYmFkbzogQXBpT2JqZWN0LmZpbHRlcnMudWx0aW1vX2FuaW9fYXByb2JhZG8sXG4gICAgICAgIC8qcGxhbjogQXBpT2JqZWN0LmZpbHRlcnMucGxhbixcbiAgICAgICAgbHVnYXI6IEFwaU9iamVjdC5maWx0ZXJzLmx1Z2FyLCovXG4gICAgICAgIHR1cm5vOiBBcGlPYmplY3QuZmlsdGVycy50dXJub1xuICAgICAgfTtcbiAgICAgIGlmKEFwaU9iamVjdC5maWx0ZXJzLnF1ZSE9XCJcIil7XG4gICAgICAgIHBhcmFtcy5xdWVFc3R1ZGlhcklkID0gQXBpT2JqZWN0LmZpbHRlcnMucXVlLmlkO1xuICAgICAgICBwYXJhbXMucXVlRXN0dWRpYXJOb21icmUgPSBBcGlPYmplY3QuZmlsdGVycy5xdWUubm9tYnJlO1xuICAgICAgICBwYXJhbXMucXVlRXN0dWRpYXJUYWdVbm8gPSBBcGlPYmplY3QuZmlsdGVycy5xdWUudGFnWzBdO1xuICAgICAgICBwYXJhbXMucXVlRXN0dWRpYXJUYWdEb3MgPSBBcGlPYmplY3QuZmlsdGVycy5xdWUudGFnWzFdO1xuICAgICAgfVxuICAgICAgaWYoQXBpT2JqZWN0LmZpbHRlcnMuZG9uZGUhPVwiXCIpe1xuICAgICAgICBwYXJhbXMuZG9uZGVFc3R1ZGlhckRlcGFydGFtZW50byA9IEFwaU9iamVjdC5maWx0ZXJzLmRvbmRlLmRlcGFydGFtZW50bztcbiAgICAgICAgcGFyYW1zLmRvbmRlRXN0dWRpYXJMb2NhbGlkYWQgPSBBcGlPYmplY3QuZmlsdGVycy5kb25kZS5sb2NhbGlkYWQ7XG4gICAgICAgIHBhcmFtcy5kb25kZUVzdHVkaWFyTGF0ID0gQXBpT2JqZWN0LmZpbHRlcnMuZG9uZGUuY29vcmRlbmFkYXMubGF0O1xuICAgICAgICBwYXJhbXMuZG9uZGVFc3R1ZGlhckxvbiA9IEFwaU9iamVjdC5maWx0ZXJzLmRvbmRlLmNvb3JkZW5hZGFzLmxvbjtcbiAgICAgIH1cbiAgICAgIGlmICggQXBpT2JqZWN0LmZpbHRlcnMucXVlLnRpcG8gPT0gJ3RpcG8nICkge1xuICAgICAgICBwYXJhbXMgPSBBcGlPYmplY3QuZmlsdGVycy5xdWUuaWQrJy9hbGwnO1xuICAgICAgfVxuICAgICAgZWxzZSB7XG4gICAgICAgIHBhcmFtcyA9ICdhbGwvJytBcGlPYmplY3QuZmlsdGVycy5xdWUuaWQ7XG4gICAgICB9XG4gICAgICByZXR1cm4gcGFyYW1zO1xuICAgIH1cblxuICAgIEFwaU9iamVjdC5nZXRFc3RhYmxlY2ltaWVudG9zQnlGaWx0ZXJzID0gZnVuY3Rpb24oKXtcbiAgICAgIGlmKEFwaU9iamVjdC5maWx0ZXJzIT1udWxsKXtcbiAgICAgICAgdmFyIHBhcmFtZXRlcnMgPSBBcGlPYmplY3QuY3JlYXRlRmlsdGVyUGFyYW1zRm9yR2V0UmVxdWVzdCgpO1xuICAgICAgICBjb25zb2xlLmxvZyhwYXJhbWV0ZXJzKTtcbiAgICAgICAgcmV0dXJuICRodHRwLmdldChhcGlVUkwgKyAnZXN0YWJsZWNpbWllbnRvLXBvci10aXBvLycrcGFyYW1ldGVycyk7Ly8sIHtjYWNoZTogZmFsc2UsIHBhcmFtczogcGFyYW1ldGVyc30pO1xuICAgICAgfVxuICAgIH1cblxuICAgIEFwaU9iamVjdC5nZXRFc3RhYmxlY2ltaWVudG9CeUlkID0gZnVuY3Rpb24oaWQpe1xuICAgICAgICByZXR1cm4gJGh0dHAuZ2V0KGFwaVVSTCArICdlc3RhYmxlY2ltaWVudG9zLXBvci1pZC8nK2lkLCB7Y2FjaGU6IGZhbHNlLCBwYXJhbXM6IHtoYXNoX2lkOk1hdGgucmFuZG9tKCl9fSk7XG4gICAgfVxuXG4gICAgQXBpT2JqZWN0LnVwZGF0ZU1hcFBpbnMgPSBmdW5jdGlvbihlc3RhYmxlY2ltaWVudG9zKXtcbiAgICAgIEFwaU9iamVjdC5tYXBTY29wZS5sb2FkUGluc0xheWVyKGVzdGFibGVjaW1pZW50b3MpO1xuICAgIH1cblxuICAgIEFwaU9iamVjdC5vcGVuRGV0YWlsc01vZGFsID0gZnVuY3Rpb24oZXN0YWJsZWNpbWllbnRvKXtcbiAgICAgIEFwaU9iamVjdC5tYXBTY29wZS5vcGVuRGV0YWlsc01vZGFsKGVzdGFibGVjaW1pZW50byk7XG4gICAgfVxuXG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm4gdGhlIGNvbnN0cnVjdG9yIGZ1bmN0aW9uXG4gICAgICovXG4gICAgcmV0dXJuIEFwaU9iamVjdDtcblxufV0pO1xuIiwicG1iX2ltLnNlcnZpY2VzLmZhY3RvcnkoJ0F1dGhTZXJ2aWNlJywgWyckaHR0cCcsICckY29yZG92YUZpbGVUcmFuc2ZlcicsICdDb25maWdTZXJ2aWNlJywnVmFsaWRhdGlvblNlcnZpY2UnLCBmdW5jdGlvbigkaHR0cCwgJGNvcmRvdmFGaWxlVHJhbnNmZXIsIENvbmZpZ1NlcnZpY2UsIFZhbGlkYXRpb25TZXJ2aWNlKSB7XG5cbiAgdmFyIGJhc2VVUkwgPSBDb25maWdTZXJ2aWNlLmJhc2VVUkwgKyBcIi9hcGkvXCI7XG5cbiAgcmV0dXJuIHtcbiAgICBsb2dfaW46IGZ1bmN0aW9uICh1c2VyLHBhc3N3b3JkKSB7XG4gICAgICAgIHZhciBib2R5ID0gJ3VzZXI9Jyt1c2VyKycmcGFzc3dvcmQ9JytwYXNzd29yZDtcbiAgICAgICAgcmV0dXJuICRodHRwLnBvc3QoYmFzZVVSTCArICdsb2dpbicsIGJvZHkse3dpdGhDcmVkZW50aWFsczogdHJ1ZSwgaGVhZGVyczogeydDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJ319KTtcbiAgICB9LFxuXG4gICAgc2lnbl9vdXQ6IGZ1bmN0aW9uIChwYXNzd29yZCwgZW1haWwpIHtcbiAgICAgIHJldHVybiAkaHR0cC5nZXQoYmFzZVVSTCArIFwic2lnbl9vdXRcIiwgeyB3aXRoQ3JlZGVudGlhbHM6IHRydWUsIHBhcmFtczogeyBwYXNzd29yZF9zaWduX2luOiBwYXNzd29yZCwgZW1haWw6IGVtYWlsIH0gfSk7XG4gICAgfSxcblxuICAgIGNyZWF0ZV91c2VyOiBmdW5jdGlvbiAodXNlck9iaikge1xuICAgICAgaWYodXNlck9iai5waWN0dXJlX3VybCAmJiBWYWxpZGF0aW9uU2VydmljZS5pc01vYmlsZURldmljZSgpKXtcbiAgICAgICAgdmFyIG9wdGlvbnMgPSB7XG4gICAgICAgICBmaWxlS2V5OiBcInBob3RvXCIsXG4gICAgICAgICAvL2ZpbGVOYW1lOiBmaWxlbmFtZSxcbiAgICAgICAgIC8vY2h1bmtlZE1vZGU6IGZhbHNlLFxuICAgICAgICAgLy9taW1lVHlwZTogXCJpbWFnZS9qcGdcIixcbiAgICAgICAgIHdpdGhDcmVkZW50aWFsczogdHJ1ZSxcbiAgICAgICAgIHBhcmFtcyA6IHsgIHVzZXI6IHVzZXJPYmoudXNlcm5hbWUsXG4gICAgICAgICAgICAgICAgICAgICBwYXNzd29yZDogdXNlck9iai5wYXNzd29yZCxcbiAgICAgICAgICAgICAgICAgICAgIGVtYWlsOiB1c2VyT2JqLmVtYWlsLFxuICAgICAgICAgICAgICAgICAgICAgZ2VuZGVyOiB1c2VyT2JqLmdlbmRlcixcbiAgICAgICAgICAgICAgICAgICAgIGludGVyZXN0ZWQ6IHVzZXJPYmouaW50ZXJlc3RlZCxcbiAgICAgICAgICAgICAgICAgICAgIHN0YXR1czogdXNlck9iai5zdGF0dXMsXG4gICAgICAgICAgICAgICAgICAgICBzaG93X2xvY2F0aW9uOiB1c2VyT2JqLnNob3dfbG9jYXRpb24sXG4gICAgICAgICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICB2YXIgdHJ1c3RBbGxIb3N0cyA9IHRydWU7XG4gICAgICAgIHJldHVybiAkY29yZG92YUZpbGVUcmFuc2Zlci51cGxvYWQoYmFzZVVSTCArIFwiY3JlYXRlX3VzZXJcIiwgdXNlck9iai5waWN0dXJlX3VybCwgb3B0aW9ucywgdHJ1c3RBbGxIb3N0cyk7XG4gICAgICB9ZWxzZXtcbiAgICAgICAgaWYodXNlck9iai5waWN0dXJlX3VybCl7XG4gICAgICAgICAgdmFyIGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKCk7XG4gICAgICAgIFx0Zm9ybURhdGEuYXBwZW5kKFwicGhvdG9cIiwgdXNlck9iai5waWN0dXJlX3VybCk7XG4gICAgICAgIFx0Zm9ybURhdGEuYXBwZW5kKFwidXNlclwiLCB1c2VyT2JqLnVzZXJuYW1lKTtcbiAgICAgICAgXHRmb3JtRGF0YS5hcHBlbmQoXCJwYXNzd29yZFwiLCB1c2VyT2JqLnBhc3N3b3JkKTtcbiAgICAgICAgXHRmb3JtRGF0YS5hcHBlbmQoXCJlbWFpbFwiLCB1c2VyT2JqLmVtYWlsKTtcbiAgICAgICAgXHRmb3JtRGF0YS5hcHBlbmQoXCJnZW5kZXJcIiwgdXNlck9iai5nZW5kZXIpO1xuICAgICAgICBcdGZvcm1EYXRhLmFwcGVuZChcImludGVyZXN0ZWRcIiwgdXNlck9iai5pbnRlcmVzdGVkKTtcbiAgICAgICAgXHRmb3JtRGF0YS5hcHBlbmQoXCJzdGF0dXNcIiwgdXNlck9iai5zdGF0dXMpO1xuICAgICAgICBcdGZvcm1EYXRhLmFwcGVuZChcInNob3dfbG9jYXRpb25cIiwgdXNlck9iai5zaG93X2xvY2F0aW9uKTtcbiAgICAgICAgICByZXR1cm4gJGh0dHAucG9zdChiYXNlVVJMICsgJ2NyZWF0ZV91c2VyJywgZm9ybURhdGEsIHtcbiAgICAgICAgICAgICAgaGVhZGVyczogeyAnQ29udGVudC1UeXBlJzogdW5kZWZpbmVkIH0sXG4gICAgICAgICAgICAgIHRyYW5zZm9ybVJlcXVlc3Q6IGFuZ3VsYXIuaWRlbnRpdHlcbiAgICAgICAgICB9KTtcbiAgICAgICAgfWVsc2V7XG4gICAgICAgICAgdmFyIGJvZHkgPSAndXNlcj0nK3VzZXJPYmoudXNlcm5hbWUrJyZwYXNzd29yZD0nK3VzZXJPYmoucGFzc3dvcmQrJyZlbWFpbD0nK3VzZXJPYmouZW1haWwrJyZnZW5kZXI9Jyt1c2VyT2JqLmdlbmRlcjtcbiAgICAgICAgICBib2R5ID0gYm9keSArJyZpbnRlcmVzdGVkPScrdXNlck9iai5pbnRlcmVzdGVkKycmc3RhdHVzPScrdXNlck9iai5zdGF0dXMrJyZzaG93X2xvY2F0aW9uPScrdXNlck9iai5zaG93X2xvY2F0aW9uO1xuICAgICAgICAgIHJldHVybiAkaHR0cC5wb3N0KGJhc2VVUkwgKyAnY3JlYXRlX3VzZXInLCBib2R5LHt3aXRoQ3JlZGVudGlhbHM6IHRydWUsIGhlYWRlcnM6IHsnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCd9fSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgIH0sXG5cbiAgICBwYXNzd29yZF9yZWNvdmVyeTogZnVuY3Rpb24gKGVtYWlsKSB7XG4gICAgICByZXR1cm4gJGh0dHAuZ2V0KGJhc2VVUkwgKyBcImZvcmdvdF9wYXNzd29yZFwiLCB7IHBhcmFtczogeyBsb2dpbl9lbWFpbDogZW1haWx9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgfSxcblxuICAgIHBhc3N3b3JkX2NoYW5nZTogZnVuY3Rpb24gKGVtYWlsLG9sZFBhc3N3b3JkLG5ld1Bhc3N3b3JkLGNvbmZpcm1QYXNzd29yZCkge1xuXG4gICAgICB2YXIgYm9keSA9ICdlbWFpbD0nK2VtYWlsKycmcGFzc3dvcmRfc2lnbl9pbj0nK29sZFBhc3N3b3JkKycmbmV3X3Bhc3N3b3JkPScrbmV3UGFzc3dvcmQrJyZjb25maXJtPScrY29uZmlybVBhc3N3b3JkO1xuICAgICAgcmV0dXJuICRodHRwLnBvc3QoYmFzZVVSTCArICdjaGFuZ2VfcGFzc3dvcmQnLCBib2R5LHtoZWFkZXJzOiB7J0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnfX0pO1xuXG4gICAgfSxcblxuXG4gICAgZWRpdF91c2VyOiBmdW5jdGlvbiAodXNlck9iaikge1xuICAgICAgaWYodXNlck9iai5waWN0dXJlX3VybCAmJiBWYWxpZGF0aW9uU2VydmljZS5pc01vYmlsZURldmljZSgpKXtcbiAgICAgICAgdmFyIG9wdGlvbnMgPSB7XG4gICAgICAgICBmaWxlS2V5OiBcInBob3RvXCIsXG4gICAgICAgICAvL2ZpbGVOYW1lOiBmaWxlbmFtZSxcbiAgICAgICAgIC8vY2h1bmtlZE1vZGU6IGZhbHNlLFxuICAgICAgICAgLy9taW1lVHlwZTogXCJpbWFnZS9qcGdcIixcbiAgICAgICAgIHdpdGhDcmVkZW50aWFsczogdHJ1ZSxcbiAgICAgICAgIHBhcmFtcyA6IHsgIHVzZXI6IHVzZXJPYmoudXNlcm5hbWUsXG4gICAgICAgICAgICAgICAgICAgICBwYXNzd29yZDogdXNlck9iai5wYXNzd29yZCxcbiAgICAgICAgICAgICAgICAgICAgIGVtYWlsOiB1c2VyT2JqLmVtYWlsLFxuICAgICAgICAgICAgICAgICAgICAgZ2VuZGVyOiB1c2VyT2JqLmdlbmRlcixcbiAgICAgICAgICAgICAgICAgICAgIGludGVyZXN0ZWQ6IHVzZXJPYmouaW50ZXJlc3RlZCxcbiAgICAgICAgICAgICAgICAgICAgIHN0YXR1czogdXNlck9iai5zdGF0dXMsXG4gICAgICAgICAgICAgICAgICAgICBzaG93X2xvY2F0aW9uOiB1c2VyT2JqLnNob3dfbG9jYXRpb24sXG4gICAgICAgICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICB2YXIgdHJ1c3RBbGxIb3N0cyA9IHRydWU7XG4gICAgICAgIHJldHVybiAkY29yZG92YUZpbGVUcmFuc2Zlci51cGxvYWQoYmFzZVVSTCArIFwiZWRpdF9wcm9maWxlXCIsIHVzZXJPYmoucGljdHVyZV91cmwsIG9wdGlvbnMsIHRydXN0QWxsSG9zdHMpO1xuICAgICAgfWVsc2V7XG4gICAgICAgIHZhciBib2R5ID0gJ3VzZXI9Jyt1c2VyT2JqLnVzZXJuYW1lKycmcGFzc3dvcmQ9Jyt1c2VyT2JqLnBhc3N3b3JkKycmZW1haWw9Jyt1c2VyT2JqLmVtYWlsKycmZ2VuZGVyPScrdXNlck9iai5nZW5kZXI7XG4gICAgICAgIGJvZHkgPSBib2R5ICsnJmludGVyZXN0ZWQ9Jyt1c2VyT2JqLmludGVyZXN0ZWQrJyZzdGF0dXM9Jyt1c2VyT2JqLnN0YXR1cysnJnNob3dfbG9jYXRpb249Jyt1c2VyT2JqLnNob3dfbG9jYXRpb247XG4gICAgICAgIGlmKHVzZXJPYmoucGljdHVyZV91cmwpe1xuICAgICAgICAgIHZhciBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YSgpO1xuICAgICAgICBcdGZvcm1EYXRhLmFwcGVuZChcInBob3RvXCIsIHVzZXJPYmoucGljdHVyZV91cmwpO1xuICAgICAgICBcdGZvcm1EYXRhLmFwcGVuZChcInVzZXJcIiwgdXNlck9iai51c2VybmFtZSk7XG4gICAgICAgIFx0Zm9ybURhdGEuYXBwZW5kKFwicGFzc3dvcmRcIiwgdXNlck9iai5wYXNzd29yZCk7XG4gICAgICAgIFx0Zm9ybURhdGEuYXBwZW5kKFwiZW1haWxcIiwgdXNlck9iai5lbWFpbCk7XG4gICAgICAgIFx0Zm9ybURhdGEuYXBwZW5kKFwiZ2VuZGVyXCIsIHVzZXJPYmouZ2VuZGVyKTtcbiAgICAgICAgXHRmb3JtRGF0YS5hcHBlbmQoXCJpbnRlcmVzdGVkXCIsIHVzZXJPYmouaW50ZXJlc3RlZCk7XG4gICAgICAgIFx0Zm9ybURhdGEuYXBwZW5kKFwic3RhdHVzXCIsIHVzZXJPYmouc3RhdHVzKTtcbiAgICAgICAgXHRmb3JtRGF0YS5hcHBlbmQoXCJzaG93X2xvY2F0aW9uXCIsIHVzZXJPYmouc2hvd19sb2NhdGlvbik7XG4gICAgICAgICAgcmV0dXJuICRodHRwLnBvc3QoYmFzZVVSTCArICdlZGl0X3Byb2ZpbGUnLCBmb3JtRGF0YSwge1xuICAgICAgICAgICAgICBoZWFkZXJzOiB7ICdDb250ZW50LVR5cGUnOiB1bmRlZmluZWQgfSxcbiAgICAgICAgICAgICAgdHJhbnNmb3JtUmVxdWVzdDogYW5ndWxhci5pZGVudGl0eVxuICAgICAgICAgIH0pO1xuICAgICAgICB9ZWxzZXtcbiAgICAgICAgICByZXR1cm4gJGh0dHAucG9zdChiYXNlVVJMICsgJ2VkaXRfcHJvZmlsZScsIGJvZHkse3dpdGhDcmVkZW50aWFsczogdHJ1ZSwgaGVhZGVyczogeydDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJ319KTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICB9O1xufV0pO1xuIiwicG1iX2ltLnNlcnZpY2VzLmZhY3RvcnkoJ0NvbmZpZ1NlcnZpY2UnLCBbJyRodHRwJywgZnVuY3Rpb24oJGh0dHApIHtcblxuICB2YXIgQ29uZmlnT2JqID0ge307XG4gIENvbmZpZ09iai5iYXNlVVJMID0gXCJodHRwOi8vZWVfYmFja2VuZC5kZXZlbG9wbWVudC5kYXRhdXkub3JnXCI7XG4gIGlmKGlvbmljLlBsYXRmb3JtLmlzV2ViVmlldygpKXtcbiAgICBDb25maWdPYmouYmFzZVVSTCA9IFwiaHR0cDovL2VlX2JhY2tlbmQuZGV2ZWxvcG1lbnQuZGF0YXV5Lm9yZ1wiO1xuICB9IGVsc2Uge1xuICAgIENvbmZpZ09iai5iYXNlVVJMID0gXCIvYmFja2VuZFwiO1xuICB9XG4gIENvbmZpZ09iai5BcHBOYW1lID0gXCJFbGlqbyBFc3R1ZGlhclwiO1xuXG5cbiAgcmV0dXJuIENvbmZpZ09iajtcblxufV0pO1xuIiwicG1iX2ltLnNlcnZpY2VzLmZhY3RvcnkoJ0Nvbm5lY3Rpdml0eVNlcnZpY2UnLCBbJyRjb3Jkb3ZhTmV0d29yaycsIGZ1bmN0aW9uKCRjb3Jkb3ZhTmV0d29yayl7XG5cbiAgcmV0dXJuIHtcbiAgICBpc09ubGluZTogZnVuY3Rpb24oKXtcbiAgICAgIC8qaWYoaW9uaWMuUGxhdGZvcm0uaXNXZWJWaWV3KCkpe1xuICAgICAgICByZXR1cm4gJGNvcmRvdmFOZXR3b3JrLmlzT25saW5lKCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gbmF2aWdhdG9yLm9uTGluZTtcbiAgICAgICAgLy9yZXR1cm4gZmFsc2U7XG4gICAgICB9Ki9cbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH0sXG4gICAgaXNPZmZsaW5lOiBmdW5jdGlvbigpe1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgLyppZihpb25pYy5QbGF0Zm9ybS5pc1dlYlZpZXcoKSl7XG4gICAgICAgIHJldHVybiAhJGNvcmRvdmFOZXR3b3JrLmlzT25saW5lKCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gIW5hdmlnYXRvci5vbkxpbmU7XG4gICAgICB9Ki9cbiAgICB9XG4gIH1cbn1dKVxuIiwicG1iX2ltLnNlcnZpY2VzLmZhY3RvcnkoJ0RCU2VydmljZScsIFsnJHEnLCBmdW5jdGlvbigkcSkge1xuICAgdmFyIF9kYjtcblxuICAgcmV0dXJuIHtcbiAgICAgICBpbml0REI6IGluaXREQixcbiAgICAgICBzYXZlVXNlcjogc2F2ZVVzZXIsXG4gICAgICAgZ2V0VXNlcjogZ2V0VXNlcixcbiAgICAgICBlcmFzZVVzZXI6IGVyYXNlVXNlcixcbiAgICAgICBzYXZlUmVwb3J0OiBzYXZlUmVwb3J0LFxuICAgICAgIGdldFJlcG9ydDogZ2V0UmVwb3J0LFxuICAgICAgIGdldEFsbFJlcG9ydHM6IGdldEFsbFJlcG9ydHMsXG4gICAgICAgdXBkYXRlUmVwb3J0OiB1cGRhdGVSZXBvcnQsXG4gICAgICAgZGVsZXRlUmVwb3J0OiBkZWxldGVSZXBvcnQsXG4gICAgICAgZGVsZXRlR2l2ZW5SZXBvcnQ6IGRlbGV0ZUdpdmVuUmVwb3J0LFxuICAgICAgIGdldENhdGVnb3JpZXM6IGdldENhdGVnb3JpZXMsXG4gICAgICAgc2F2ZUNhdGVnb3JpZXM6IHNhdmVDYXRlZ29yaWVzXG4gICB9O1xuXG4gICBmdW5jdGlvbiBzYXZlVXNlcih1c2VyX25hbWUsIHVzZXJfcGFzc3dvcmQsIHVzZXJfcGljdHVyZV91cmwsc2hvd19sb2NhdGlvbiwgdWlkLCBzdGF0dXMsIGdlbmRlciwgaW50ZXJlc3RlZCkge1xuICAgICAgICAgdmFyIHVzZXIgPSB7XG4gICAgICAgICAgICBfaWQ6ICd1c2VyLWxvZ2dlZCcsXG4gICAgICAgICAgICBuYW1lOiB1c2VyX25hbWUsXG4gICAgICAgICAgICBwYXNzd29yZDogdXNlcl9wYXNzd29yZCxcbiAgICAgICAgICAgIHBpY3R1cmVfdXJsOiB1c2VyX3BpY3R1cmVfdXJsLFxuICAgICAgICAgICAgc2hvd19sb2NhdGlvbjogc2hvd19sb2NhdGlvbixcbiAgICAgICAgICAgIHVpZDogdWlkLFxuICAgICAgICAgICAgc3RhdHVzOiBzdGF0dXMsXG4gICAgICAgICAgICBnZW5kZXI6IGdlbmRlcixcbiAgICAgICAgICAgIGludGVyZXN0ZWQ6IGludGVyZXN0ZWRcbiAgICAgICAgIH07XG4gICAgICAgICBnZXRVc2VyKCkudGhlbihmdW5jdGlvbiAoZG9jKSB7XG4gICAgICAgICAgIHVzZXIuX3JldiA9IGRvYy5fcmV2O1xuICAgICAgICAgICByZXR1cm4gX2RiLnB1dCh1c2VyKTtcbiAgICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgICAgICAgcmV0dXJuIF9kYi5wdXQodXNlcik7XG4gICAgICAgICB9KVxuICAgfTtcblxuICBmdW5jdGlvbiBnZXRVc2VyKCkge1xuICAgICByZXR1cm4gX2RiLmdldCgndXNlci1sb2dnZWQnKTtcbiAgfTtcblxuICBmdW5jdGlvbiBlcmFzZVVzZXIoKSB7XG4gICAgX2RiLmdldCgndXNlci1sb2dnZWQnKS50aGVuKGZ1bmN0aW9uKGRvYykge1xuICAgICAgcmV0dXJuIF9kYi5yZW1vdmUoZG9jKTtcbiAgICB9KTtcbiAgfVxuXG4gICBmdW5jdGlvbiBpbml0REIoKSB7XG4gICAgICAgLy8gQ3JlYXRlcyB0aGUgZGF0YWJhc2Ugb3Igb3BlbnMgaWYgaXQgYWxyZWFkeSBleGlzdHNcbiAgICAgICBfZGIgPSBuZXcgUG91Y2hEQigndG9tYW1vc3VuYV9sb2NhbF9kYicpO1xuICAgICAgIHJldHVybiBfZGI7XG4gICB9O1xuXG4gICBmdW5jdGlvbiBzYXZlUmVwb3J0KHJlcG9ydCkge1xuICAgICAgLy9uZXdfcmVwb3J0X2lkID0gXCJyZXBvcnRfXCIgKyBwb3VjaENvbGxhdGUudG9JbmRleGFibGVTdHJpbmcoW3JlcG9ydF0pO1xuICAgICAgdmFyIGRhdGUgPSBuZXcgRGF0ZSgpO1xuICAgICAgdmFyIG5ld19yZXBvcnRfaWQgPSBcInJlcG9ydF9cIiArIGRhdGUuZ2V0RnVsbFllYXIoKSArIChkYXRlLmdldE1vbnRoKCkgKyAxKSArIGRhdGUuZ2V0RGF0ZSgpICsgZGF0ZS5nZXRNaWxsaXNlY29uZHMoKTtcbiAgICAgIHJlcG9ydC5faWQgPSBuZXdfcmVwb3J0X2lkO1xuICAgICAgcmV0dXJuIF9kYi5wdXQocmVwb3J0KTtcbiAgIH07XG5cbiAgIGZ1bmN0aW9uIHVwZGF0ZVJlcG9ydChyZXBvcnQpIHtcbiAgICAgcmV0dXJuIF9kYi5wdXQocmVwb3J0KTtcbiAgfTtcblxuICAgZnVuY3Rpb24gZ2V0Q2F0ZWdvcmllcygpIHtcbiAgICAgcmV0dXJuIF9kYi5nZXQoJ2NhdGVnb3JpZXMtbGlzdCcpO1xuICAgfTtcblxuICAgZnVuY3Rpb24gc2F2ZUNhdGVnb3JpZXMoY2F0ZWdvcmllcykge1xuICAgICBnZXRDYXRlZ29yaWVzKCkudGhlbihmdW5jdGlvbiAoZG9jKSB7XG4gICAgICAgY2F0ZWdvcmllcy5fcmV2ID0gZG9jLl9yZXY7XG4gICAgICAgcmV0dXJuIF9kYi5wdXQoY2F0ZWdvcmllcyk7XG4gICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgICBjYXRlZ29yaWVzLl9pZCA9IFwiY2F0ZWdvcmllcy1saXN0XCI7XG4gICAgICAgcmV0dXJuIF9kYi5wdXQoY2F0ZWdvcmllcyk7XG4gICAgIH0pXG4gICB9O1xuXG4gIGZ1bmN0aW9uIGdldFJlcG9ydChyZXBvcnRJZCkge1xuICAgICByZXR1cm4gX2RiLmdldChyZXBvcnRJZCk7XG4gIH07XG5cbiAgIGZ1bmN0aW9uIGdldEFsbFJlcG9ydHMoKSB7XG4gICAgIHJldHVybiBfZGIuYWxsRG9jcyh7XG4gICAgICBpbmNsdWRlX2RvY3M6IHRydWUsXG4gICAgICBhdHRhY2htZW50czogZmFsc2UsXG4gICAgICBzdGFydGtleTogJ3JlcG9ydF8nLFxuICAgICAgZW5ka2V5OiAncmVwb3J0X1xcdWZmZmYnXG4gICAgIH0pOy8qLnRoZW4oZnVuY3Rpb24gKHJlc3VsdCkge1xuICAgICAgLy8gaGFuZGxlIHJlc3VsdFxuICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgfSk7Ki9cbiAgfTtcblxuICBmdW5jdGlvbiBkZWxldGVSZXBvcnQocmVwb3J0X2lkKSB7XG4gICAgX2RiLmdldChyZXBvcnRfaWQpLnRoZW4oZnVuY3Rpb24oZG9jKSB7XG4gICAgICByZXR1cm4gX2RiLnJlbW92ZShkb2MpO1xuICAgIH0pO1xuICB9O1xuXG4gIGZ1bmN0aW9uIGRlbGV0ZUdpdmVuUmVwb3J0KHJlcG9ydCkge1xuICAgIHJldHVybiBfZGIucmVtb3ZlKHJlcG9ydCk7XG4gIH07XG5cbn1dKTtcbiIsInBtYl9pbS5zZXJ2aWNlcy5mYWN0b3J5KCdFcnJvclNlcnZpY2UnLCBbJyRodHRwJywnJGlvbmljUG9wdXAnLCAnVmFsaWRhdGlvblNlcnZpY2UnLCBmdW5jdGlvbigkaHR0cCwkaW9uaWNQb3B1cCxWYWxpZGF0aW9uU2VydmljZSkge1xuXG4gIHJldHVybiB7XG4gICAgaHR0cF9yZXNwb25zZV9pc19zdWNjZXNzZnVsOiBmdW5jdGlvbiAoanNvblJlc3VsdCwgZXJyb3JDb250YWluZXJJZCkge1xuICAgICAgdmFyIGVycm9yRGl2ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoZXJyb3JDb250YWluZXJJZCk7XG4gICAgICBpZihqc29uUmVzdWx0LmRhdGEgJiYganNvblJlc3VsdC5kYXRhLlN0YXR1cz09XCJzdWNjZXNzXCIgfHwganNvblJlc3VsdC5TdGF0dXM9PVwic3VjY2Vzc1wiKXtcbiAgICAgICAgZXJyb3JEaXYuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1lbHNle1xuICAgICAgICBpZihqc29uUmVzdWx0LmRhdGEpe1xuICAgICAgICAgIGVycm9yRGl2LmlubmVySFRNTD1cIjxoMz5cIiArIGpzb25SZXN1bHQuZGF0YS5NZXNzYWdlICsgXCI8L2gzPlwiO1xuICAgICAgICB9ZWxzZXtcbiAgICAgICAgICBlcnJvckRpdi5pbm5lckhUTUw9XCI8aDM+XCIgKyBqc29uUmVzdWx0Lk1lc3NhZ2UgKyBcIjwvaDM+XCI7XG4gICAgICAgIH1cbiAgICAgICAgZXJyb3JEaXYuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgIH0sXG5cbiAgICBodHRwX3Jlc3BvbnNlX2lzX3N1Y2Nlc3NmdWxfYWpheDogZnVuY3Rpb24gKGpzb25SZXN1bHQpIHtcbiAgICAgIGlmKGpzb25SZXN1bHQuZGF0YS5yZXN1bHQ9PTApe1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9ZWxzZXtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gICAgfSxcblxuICAgIGh0dHBfcmVzcG9uc2VfaXNfc3VjY2Vzc2Z1bF9wb3B1cDogZnVuY3Rpb24gKGpzb25SZXN1bHQpIHtcbiAgICAgIGlmKGpzb25SZXN1bHQuZGF0YS5yZXN1bHQ9PTApe1xuICAgICAgICB2YXIgYWxlcnRQb3B1cCA9ICRpb25pY1BvcHVwLmFsZXJ0KHtcbiAgICAgICAgIHRpdGxlOiBcIkVycm9yXCIsXG4gICAgICAgICB0ZW1wbGF0ZToganNvblJlc3VsdC5kYXRhLm1lc3NhZ2VcbiAgICAgICAgfSk7XG4gICAgICAgIGFsZXJ0UG9wdXAudGhlbihmdW5jdGlvbihyZXMpIHtcbiAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9ZWxzZXtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gICAgfSxcblxuICAgIGh0dHBfZGF0YV9yZXNwb25zZV9pc19zdWNjZXNzZnVsOiBmdW5jdGlvbiAoZGF0YSwgZXJyb3JDb250YWluZXJJZCkge1xuICAgICAgdmFyIGVycm9yRGl2ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoZXJyb3JDb250YWluZXJJZCk7XG4gICAgICBpZihkYXRhLlN0YXR1cyE9J3N1Y2Nlc3MnKXtcbiAgICAgICAgZXJyb3JEaXYuaW5uZXJIVE1MPVwiPGgzPlwiICsgZGF0YS5NZXNzYWdlICsgXCI8L2gzPlwiO1xuICAgICAgICBlcnJvckRpdi5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiO1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9ZWxzZXtcbiAgICAgICAgZXJyb3JEaXYuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cbiAgICB9LFxuXG4gICAgaHR0cF9kYXRhX3Jlc3BvbnNlX2lzX3N1Y2Nlc3NmdWxfYWpheDogZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgIGlmKGRhdGEucmVzdWx0PT0wKXtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfWVsc2V7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuICAgIH0sXG5cbiAgICBzaG93X2Vycm9yX21lc3NhZ2U6IGZ1bmN0aW9uIChlcnJvckNvbnRhaW5lcklkLCBtZXNzYWdlKSB7XG4gICAgICAgIHZhciBlcnJvckRpdiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGVycm9yQ29udGFpbmVySWQpO1xuICAgICAgICBlcnJvckRpdi5pbm5lckhUTUw9XCI8aDM+XCIgKyBtZXNzYWdlICsgXCI8L2gzPlwiO1xuICAgICAgICBlcnJvckRpdi5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiO1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfSxcblxuICAgIHNob3dfZXJyb3JfbWVzc2FnZV9wb3B1cDogZnVuY3Rpb24gKG1lc3NhZ2UpIHtcbiAgICAgICAgdmFyIGFsZXJ0UG9wdXAgPSAkaW9uaWNQb3B1cC5hbGVydCh7XG4gICAgICAgICB0aXRsZTogXCJFcnJvclwiLFxuICAgICAgICAgdGVtcGxhdGU6IG1lc3NhZ2VcbiAgICAgICAgfSk7XG4gICAgICAgIGFsZXJ0UG9wdXAudGhlbihmdW5jdGlvbihyZXMpIHtcbiAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfSxcblxuICAgIGNoZWNrX2ZpZWxkczogZnVuY3Rpb24gKGZpZWxkcywgZXJyb3JDb250YWluZXJJZCkge1xuICAgICAgdmFyIGVycm9ycyA9IFwiXCI7XG4gICAgICBmaWVsZHMuZm9yRWFjaChmdW5jdGlvbihmaWVsZCkge1xuICAgICAgICBpZihmaWVsZC50eXBlPT1cIm5vdE51bGxcIil7XG4gICAgICAgICAgaWYoIVZhbGlkYXRpb25TZXJ2aWNlLnZhbGlkYXRlX25vdF9lbXB0eShmaWVsZC52YWx1ZSkpe1xuICAgICAgICAgICAgZXJyb3JzID0gZXJyb3JzICsgJzxoMz4tIEVsIGNhbXBvIFwiJyArIGZpZWxkLm5hbWUgKyAnXCIgbm8gcHVlZGUgZXN0YXIgdmFjw61vLjwvaDM+JztcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYoZmllbGQudHlwZT09XCJlbWFpbFwiKXtcbiAgICAgICAgICBpZighVmFsaWRhdGlvblNlcnZpY2UudmFsaWRhdGVfZW1haWwoZmllbGQudmFsdWUpKXtcbiAgICAgICAgICAgIGVycm9ycyA9IGVycm9ycyArICc8aDM+LSBFbCBjYW1wbyBcIicgKyBmaWVsZC5uYW1lICsgJ1wiIG5vIGVzIHVuYSBkaXJlY2Npw7NuIGRlIGNvcnJlbyB2w6FsaWRhLjwvaDM+JztcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYoZmllbGQudHlwZT09XCJpZGRvY191eVwiKXtcbiAgICAgICAgICBpZighVmFsaWRhdGlvblNlcnZpY2UudmFsaWRhdGVfaWRkb2NfdXkoZmllbGQudmFsdWUpKXtcbiAgICAgICAgICAgIGVycm9ycyA9IGVycm9ycyArICc8aDM+LSBFbCBjYW1wbyBcIicgKyBmaWVsZC5uYW1lICsgJ1wiIG5vIGVzIHVuYSBjw6lkdWxhIHVydWd1YXlhIHbDoWxpZGEuPC9oMz4nO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZihmaWVsZC50eXBlPT1cInR3b193b3Jkc1wiKXtcbiAgICAgICAgICBpZighVmFsaWRhdGlvblNlcnZpY2UudmFsaWRhdGVfdHdvX3dvcmRzKGZpZWxkLnZhbHVlKSl7XG4gICAgICAgICAgICBlcnJvcnMgPSBlcnJvcnMgKyAnPGgzPi0gRWwgY2FtcG8gXCInICsgZmllbGQubmFtZSArICdcIiBkZWJlIGNvbnRlbmVyIGFsIG1lbm9zIGRvcyBwYWxhYnJhcy48L2gzPic7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmKGZpZWxkLnR5cGU9PVwiZXF1YWxzVG9cIil7XG4gICAgICAgICAgaWYoIVZhbGlkYXRpb25TZXJ2aWNlLnZhbGlkYXRlX2VxdWFsc1RvKGZpZWxkLnZhbHVlLCBmaWVsZC5zZWNvbmRWYWx1ZSkpe1xuICAgICAgICAgICAgZXJyb3JzID0gZXJyb3JzICsgJzxoMz4tIExvcyBjYW1wb3MgXCInICsgZmllbGQubmFtZSArICdcIiBubyBjb2luY2lkZW4uPC9oMz4nO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICBpZihlcnJvcnMgPT1cIlwiKXtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9ZWxzZXtcbiAgICAgICAgdmFyIGVycm9yRGl2ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoZXJyb3JDb250YWluZXJJZCk7XG4gICAgICAgIGVycm9yRGl2LmlubmVySFRNTD0gZXJyb3JzO1xuICAgICAgICBlcnJvckRpdi5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiO1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgfVxuXG5cbiAgfTtcbn1dKTtcbiIsInBtYl9pbS5zZXJ2aWNlcy5mYWN0b3J5KCdMb2FkZXInLCBbJyRpb25pY0xvYWRpbmcnLCAnJHRpbWVvdXQnLCckaW9uaWNQb3B1cCcsZnVuY3Rpb24oJGlvbmljTG9hZGluZywkdGltZW91dCwkaW9uaWNQb3B1cCkge1xuXG4gIHZhciBMT0FERVJBUEkgPSB7XG5cbiAgICBzaG93TG9hZGluZzogZnVuY3Rpb24odGV4dCkge1xuICAgICAgdGV4dCA9IHRleHQgfHwgJ0xvYWRpbmcuLi4nO1xuICAgICAgJGlvbmljTG9hZGluZy5zaG93KHtcbiAgICAgICAgdGVtcGxhdGU6IHRleHRcbiAgICAgIH0pO1xuICAgIH0sXG5cbiAgICBoaWRlTG9hZGluZzogZnVuY3Rpb24oKSB7XG4gICAgICAkaW9uaWNMb2FkaW5nLmhpZGUoKTtcbiAgICB9LFxuXG4gICAgdG9nZ2xlTG9hZGluZ1dpdGhNZXNzYWdlOiBmdW5jdGlvbih0ZXh0LCB0aW1lb3V0KSB7XG4gICAgICB2YXIgc2VsZiA9IHRoaXM7XG5cbiAgICAgIHNlbGYuc2hvd0xvYWRpbmcodGV4dCk7XG5cbiAgICAgICR0aW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAgICBzZWxmLmhpZGVMb2FkaW5nKCk7XG4gICAgICB9LCB0aW1lb3V0IHx8IDMwMDApO1xuICAgIH0sXG5cbiAgICBjb25maXJtUG9wdXA6ZnVuY3Rpb24odGl0bGUsdGV4dCl7XG4gICAgICB2YXIgY29uZmlybVBvcHVwID0gJGlvbmljUG9wdXAuY29uZmlybSh7XG4gICAgIHRpdGxlOiB0aXRsZSxcbiAgICAgdGVtcGxhdGU6IHRleHRcbiAgIH0pO1xuICAgcmV0dXJuIGNvbmZpcm1Qb3B1cDtcbiB9LFxuXG5cbiAgICBzaG93QWxlcnQ6ZnVuY3Rpb24oX3RpdGxlLF90ZW1wbGF0ZSkge1xuICAgICAgdmFyIGFsZXJ0UG9wdXAgPSAkaW9uaWNQb3B1cC5hbGVydCh7XG4gICAgICAgIHRpdGxlOiBfdGl0bGUsXG4gICAgICAgIHRlbXBsYXRlOiBfdGVtcGxhdGVcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIGFsZXJ0UG9wdXA7XG4gfVxuXG4gIH07XG4gIHJldHVybiBMT0FERVJBUEk7XG59XSk7XG4iLCJwbWJfaW0uc2VydmljZXMuZmFjdG9yeSgnTG9jYXRpb25zU2VydmljZScsIFsgZnVuY3Rpb24oKSB7XG5cbiAgdmFyIGxvY2F0aW9uc09iaiA9IHt9O1xuICBsb2NhdGlvbnNPYmouaW5pdGlhbF9sYXQgPSBcIlwiO1xuICBsb2NhdGlvbnNPYmouaW5pdGlhbF9sbmcgPSBcIlwiO1xuICBsb2NhdGlvbnNPYmoubGFzdF91c2VyX2xhdCA9IFwiXCI7XG4gIGxvY2F0aW9uc09iai5sYXN0X3VzZXJfbG5nID0gXCJcIjtcbiAgbG9jYXRpb25zT2JqLmNvdW5jaWxfbW9kYWwgPSBudWxsO1xuICBsb2NhdGlvbnNPYmouc2VsZWN0ZWRfY291bmNpbCA9IG51bGw7XG5cbiAgbG9jYXRpb25zT2JqLnNlbGVjdENvdW5jaWwgPSBmdW5jdGlvbihjb3VuY2lsTmFtZSkge1xuICAgIGxvY2F0aW9uc09iai5zZWxlY3RlZF9jb3VuY2lsID0gIGNvdW5jaWxOYW1lO1xuICB9XG5cbiAgbG9jYXRpb25zT2JqLnNhdmVfaW5pdGlhbF9wb3NpdGlvbiA9IGZ1bmN0aW9uKHBvc2l0aW9uKSB7XG4gICAgbG9jYXRpb25zT2JqLmluaXRpYWxfbGF0ID0gIHBvc2l0aW9uLmNvb3Jkcy5sYXRpdHVkZTtcbiAgICBsb2NhdGlvbnNPYmouaW5pdGlhbF9sbmcgPSAgcG9zaXRpb24uY29vcmRzLmxvbmdpdHVkZTtcbiAgfVxuXG4gIGxvY2F0aW9uc09iai5zYXZlX2xhc3RfdXNlcl9wb3NpdGlvbiA9IGZ1bmN0aW9uKGxhdCxsbmcpe1xuICAgIGxvY2F0aW9uc09iai5sYXN0X3VzZXJfbGF0ID0gbGF0O1xuICAgIGxvY2F0aW9uc09iai5sYXN0X3VzZXJfbG5nID0gbG5nO1xuICB9XG5cbiAgbG9jYXRpb25zT2JqLnNhdmVkTG9jYXRpb25zID0gW107XG5cbiAgcmV0dXJuIGxvY2F0aW9uc09iajtcblxufV0pO1xuIiwiIC8vcG1iX2ltLnNlcnZpY2VzLmZhY3RvcnkoJ01hcFNlcnZpY2UnLCBbIGZ1bmN0aW9uKCkge1xuIHBtYl9pbS5zZXJ2aWNlcy5mYWN0b3J5KCdNYXBTZXJ2aWNlJywgWydsZWFmbGV0RGF0YScsICckY29tcGlsZScsIGZ1bmN0aW9uKGxlYWZsZXREYXRhLCAkY29tcGlsZSkge1xuXG4gICAvL0RlZmluaWNpb24gZGUgbGEgcHJveWVjY2Npb24gVVRNIDIxIHNcbiAgIHByb2o0LmRlZnMoJ0VQU0c6MzI3MjEnLCAnK3Byb2o9dXRtICt6b25lPTIxICtzb3V0aCArZWxscHM9V0dTODQgK2RhdHVtPVdHUzg0ICt1bml0cz1tICtub19kZWZzJyk7XG5cblxuICAgdmFyIG1hcFNlcnZpY2UgPSB7fTtcblxuICAgbWFwU2VydmljZS5nb1RvUGxhY2UgPSBmdW5jdGlvbihuYW1lLGxhdCxsb24sc2NvcGUpIHtcbiAgICB2YXIgX2dlb0pzb24gPSB7XG4gICAgICAgICAgICAgIFwidHlwZVwiOiBcIkZlYXR1cmVDb2xsZWN0aW9uXCIsXG4gICAgICAgICAgICAgIFwiY3JzXCI6IHsgXCJ0eXBlXCI6IFwibmFtZVwiLFxuICAgICAgICAgICAgICAgICAgICAgIFwicHJvcGVydGllc1wiOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIm5hbWVcIjogJ3VybjpvZ2M6ZGVmOmNyczpFUFNHOjozMjcyMSdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgXCJmZWF0dXJlc1wiOiBbXG4gICAgICAgICAgICAgICAgeyBcInR5cGVcIjogXCJGZWF0dXJlXCIsXG4gICAgICAgICAgICAgICAgXCJnZW9tZXRyeVwiOntcbiAgICAgICAgICAgICAgICAgICAgICAgXCJ0eXBlXCI6XCJQb2ludFwiLFxuICAgICAgICAgICAgICAgICAgICAgICBcImNvb3JkaW5hdGVzXCI6W2xhdCxsb25dXG4gICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBcInByb3BlcnRpZXNcIjp7XG4gICAgICAgICAgICAgICAgICAgICAgXCJub21icmVcIjogbmFtZVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBdXG4gICAgICAgICAgICB9O1xuICAgICBsZWFmbGV0RGF0YS5nZXRNYXAoKS50aGVuKGZ1bmN0aW9uKG1hcCkge1xuICAgICAgdmFyIF9sYXRsbmc7XG4gICAgICAgdmFyIGxheWVyID0gTC5Qcm9qLmdlb0pzb24oX2dlb0pzb24sIHtcbiAgICAgICAgICdwb2ludFRvTGF5ZXInOiBmdW5jdGlvbihmZWF0dXJlLCBsYXRsbmcpIHtcbiAgICAgICAgICAgX2xhdGxuZyA9IGxhdGxuZztcbiAgICAgICAgICAgdmFyIGh0bWxQb3BVcCA9IFwiPHAgYWxpZ249J2NlbnRlcic+XCIrZmVhdHVyZS5wcm9wZXJ0aWVzLm5vbWJyZStcIiA8YnIvPiA8YSBuZy1jbGljaz0nbmV3X3JlcG9ydF9mcm9tX2xhdGxvbihcIitfbGF0bG5nLmxhdCtcIixcIitfbGF0bG5nLmxuZytcIik7Jz5JbmljaWFyIHJlcG9ydGUgYXF1w608L2E+PC9wPlwiO1xuICAgICAgICAgICB2YXIgY29tcGlsZWQgPSAkY29tcGlsZShodG1sUG9wVXApKHNjb3BlKTtcbiAgICAgICAgICAgcmV0dXJuIEwubWFya2VyKGxhdGxuZykuYmluZFBvcHVwKGNvbXBpbGVkWzBdKTtcbiAgICAgICAgIH1cbiAgICAgICB9KTtcblxuICAgICAgIGxheWVyLmFkZFRvKG1hcCk7XG4gICAgICAgbWFwLnNldFZpZXcoX2xhdGxuZywgMTgpO1xuICAgICAgIGxheWVyLm9wZW5Qb3B1cCgpO1xuICAgICB9KTtcbiAgIH07XG5cbiAgbWFwU2VydmljZS5jZW50ZXJNYXBPbkNvb3JkcyA9IGZ1bmN0aW9uKGxhdCxsbmcsem9vbSkge1xuICAgICBsZWFmbGV0RGF0YS5nZXRNYXAoKS50aGVuKGZ1bmN0aW9uKG1hcCkge1xuICAgICAgICBtYXAuc2V0VmlldyhuZXcgTC5MYXRMbmcobGF0LCBsbmcpLHpvb20pO1xuICAgICAgIH0pO1xuICAgICB9XG5cbiAgIHJldHVybiBtYXBTZXJ2aWNlO1xuXG4gfV0pO1xuIiwicG1iX2ltLnNlcnZpY2VzLmZhY3RvcnkoJ01vZGFsU2VydmljZScsIFsgZnVuY3Rpb24oKSB7XG5cbiAgdmFyIG1vZGFsT0JKID0ge307XG4gIG1vZGFsT0JKLmFjdGl2ZU1vZGFsID0gbnVsbDtcblxuICBtb2RhbE9CSi5jaGVja05vTW9kYWxJc09wZW4gPSBmdW5jdGlvbigpIHtcbiAgICBpZihtb2RhbE9CSi5hY3RpdmVNb2RhbCl7XG4gICAgICBtb2RhbE9CSi5hY3RpdmVNb2RhbC5oaWRlKCk7XG4gICAgICBtb2RhbE9CSi5hY3RpdmVNb2RhbC5yZW1vdmUoKTtcbiAgICAgIG1vZGFsT0JKLmFjdGl2ZU1vZGFsID0gbnVsbDtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gbW9kYWxPQko7XG5cbn1dKTtcbiIsInBtYl9pbS5zZXJ2aWNlcy5mYWN0b3J5KCdQaW5TZXJ2aWNlJywgWyckaHR0cCcsICdsZWFmbGV0RGF0YScsJ0NvbmZpZ1NlcnZpY2UnLCBmdW5jdGlvbigkaHR0cCwgbGVhZmxldERhdGEsIENvbmZpZ1NlcnZpY2UpIHtcblxuICB2YXIgcGluc1VSTCA9IENvbmZpZ1NlcnZpY2UuYmFzZVVSTCArIFwiL29mZXJ0YS5nZW9qc29uLy0zNC44Mjg1MTgsLTU1Ljk1MTM3Ni9NQVRVVElOT1wiO1xuICB2YXIgYXBpVVJMID0gQ29uZmlnU2VydmljZS5iYXNlVVJMICsgXCIvYXBpL1wiXG4vKipcbiAgICogQ29uc3RydWN0b3IsIHdpdGggY2xhc3MgbmFtZVxuICAgKi9cbiAgZnVuY3Rpb24gUGluKF9kYXRhKSB7XG4gICAgYW5ndWxhci5leHRlbmQodGhpcywgX2RhdGEpO1xuICB9XG5cblxuICBQaW4uZ2V0QWxsID0gZnVuY3Rpb24oKXtcbiAgICByZXR1cm4gJGh0dHAuZ2V0KHBpbnNVUkwsIHtjYWNoZTogZmFsc2UsIHBhcmFtczoge2hhc2hfaWQ6TWF0aC5yYW5kb20oKX19KTtcbiAgfVxuXG4gIFBpbi5zZW5kVXNlckxvY2F0aW9uID0gZnVuY3Rpb24obGF0aXR1ZGUsbG9uZ2l0dWRlLHVzZXJuYW1lLHBhc3N3b3JkLHVpZCl7XG4gICAgdmFyIGJvZHkgPSAndXNlcj0nK3VzZXJuYW1lKycmcGFzc3dvcmQ9JytwYXNzd29yZCsnJmxhdD0nK2xhdGl0dWRlKycmbG9uPScrbG9uZ2l0dWRlK1wiJnVpZD1cIit1aWQ7XG4gICAgcmV0dXJuICRodHRwLnBvc3QoYXBpVVJMICsgJ3NlbmRfdXNlcl9wb3NpdGlvbicsIGJvZHkse3dpdGhDcmVkZW50aWFsczogdHJ1ZSwgaGVhZGVyczogeydDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJ319KTtcblxuICB9XG5cblxuICAgIFBpbi5fYWxsID0gW107XG4gICAgUGluLmN1cnJlbnQgPSB7fTtcbiAgICBQaW4ubGFzdFBpbnNSZXNwb25zZSA9IG51bGw7XG5cblxuXG5cbiAgICAvKipcbiAgICAgKiBTdGF0aWMgbWV0aG9kLCBhc3NpZ25lZCB0byBjbGFzc1xuICAgICAqIEluc3RhbmNlICgndGhpcycpIGlzIG5vdCBhdmFpbGFibGUgaW4gc3RhdGljIGNvbnRleHRcbiAgICAgKi9cbiAgICBQaW4uYnVpbGQgPSBmdW5jdGlvbihfZGF0YSkge1xuXG4gICAgICByZXR1cm4gbmV3IFBpbihcbiAgICAgICAgX2RhdGFcbiAgICAgICk7XG4gICAgfTtcblxuICAgIFBpbi5wcm90b3R5cGUuc2V0TGF0TG5nID0gZnVuY3Rpb24gKGxhdGxuZykge1xuXG4gICAgICB0aGlzLmxhdCA9IGxhdGxuZy5sYXQ7XG4gICAgICB0aGlzLmxvbiA9IGxhdGxuZy5sbmc7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFJldHVybiB0aGUgY29uc3RydWN0b3IgZnVuY3Rpb25cbiAgICAgKi9cbiAgICByZXR1cm4gUGluO1xuXG59XSk7XG4iLCJwbWJfaW0uc2VydmljZXMuZmFjdG9yeSgnUG9wVXBTZXJ2aWNlJywgWyckaW9uaWNQb3B1cCcsJ1ZhbGlkYXRpb25TZXJ2aWNlJywgZnVuY3Rpb24oJGlvbmljUG9wdXAsVmFsaWRhdGlvblNlcnZpY2UpIHtcblxuICByZXR1cm4ge1xuICAgIHNob3dfYWxlcnQ6IGZ1bmN0aW9uIChhbGVydF90aXRsZSxhbGVydF9tZXNzYWdlKSB7XG4gICAgICAgIHZhciBhbGVydFBvcHVwID0gJGlvbmljUG9wdXAuYWxlcnQoe1xuICAgICAgICAgdGl0bGU6IGFsZXJ0X3RpdGxlLFxuICAgICAgICAgdGVtcGxhdGU6IGFsZXJ0X21lc3NhZ2VcbiAgICAgICAgfSk7XG4gICAgICAgIGFsZXJ0UG9wdXAudGhlbihmdW5jdGlvbihyZXMpIHtcbiAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH0sXG5cbiAgIGNvbmZpcm1Qb3B1cDogZnVuY3Rpb24odGl0bGUsdGV4dCl7XG4gICAgIHZhciBjb25maXJtUG9wdXAgPSAkaW9uaWNQb3B1cC5jb25maXJtKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZTogdGl0bGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGU6IHRleHRcbiAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgIHJldHVybiBjb25maXJtUG9wdXA7XG4gICB9LFxuXG4gICBhc2tGb3JPbmVWYWx1ZVBvcFVwOiBmdW5jdGlvbihzY29wZSx0aXRsZSx0ZXh0LGZpZWxkX25hbWUsdmFsaWRhdGlvblR5cGUpe1xuICAgICAgJHNjb3BlID0gc2NvcGU7XG4gICAgICB2YXIgbXlQb3B1cCA9ICRpb25pY1BvcHVwLnNob3coe1xuICAgICAgdGVtcGxhdGU6IGZpZWxkX25hbWUgKyAnOiA8aW5wdXQgdHlwZT1cInRleHRcIiBpZD1cIm9uZV92YWx1ZV9wb3B1cFwiPjxkaXYgaWQ9XCJlcnJvcl9jb250YWluZXJfaW5zaWRlXCI+PC9kaXY+JyxcbiAgICAgIHRpdGxlOiB0aXRsZSxcbiAgICAgIHN1YlRpdGxlOiB0ZXh0LFxuICAgICAgc2NvcGU6ICRzY29wZSxcbiAgICAgIGJ1dHRvbnM6IFtcbiAgICAgICAgeyB0ZXh0OiAnQ2FuY2VsYXInIH0sXG4gICAgICAgIHtcbiAgICAgICAgICB0ZXh0OiAnPGI+RW52aWFyPC9iPicsXG4gICAgICAgICAgdHlwZTogJ2J1dHRvbi1wb3NpdGl2ZScsXG4gICAgICAgICAgb25UYXA6IGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICAgIHZhciBlcnJvcnMgPSBcIlwiO1xuICAgICAgICAgICAgdmFyIHZhbHVlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJvbmVfdmFsdWVfcG9wdXBcIikudmFsdWU7XG4gICAgICAgICAgICBpZih2YWxpZGF0aW9uVHlwZT09XCJub3ROdWxsXCIpe1xuICAgICAgICAgICAgICBpZighVmFsaWRhdGlvblNlcnZpY2UudmFsaWRhdGVfbm90X2VtcHR5KHZhbHVlKSl7XG4gICAgICAgICAgICAgICAgZXJyb3JzID0gZXJyb3JzICsgJzxoMz4tIEVsIGNhbXBvIFwiJyArIGZpZWxkX25hbWUgKyAnXCIgbm8gcHVlZGUgZXN0YXIgdmFjw61vLjwvaDM+JztcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYodmFsaWRhdGlvblR5cGU9PVwiZW1haWxcIil7XG4gICAgICAgICAgICAgIGlmKCFWYWxpZGF0aW9uU2VydmljZS52YWxpZGF0ZV9lbWFpbCh2YWx1ZSkpe1xuICAgICAgICAgICAgICAgIGVycm9ycyA9IGVycm9ycyArICc8aDM+LSBFbCBjYW1wbyBcIicgKyBmaWVsZF9uYW1lICsgJ1wiIG5vIGVzIHVuYSBkaXJlY2Npw7NuIGRlIGNvcnJlbyB2w6FsaWRhLjwvaDM+JztcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYodmFsaWRhdGlvblR5cGU9PVwiaWRkb2NfdXlcIil7XG4gICAgICAgICAgICAgIGlmKCFWYWxpZGF0aW9uU2VydmljZS52YWxpZGF0ZV9pZGRvY191eSh2YWx1ZSkpe1xuICAgICAgICAgICAgICAgIGVycm9ycyA9IGVycm9ycyArICc8aDM+LSBFbCBjYW1wbyBcIicgKyBmaWVsZF9uYW1lICsgJ1wiIG5vIGVzIHVuYSBjw6lkdWxhIHVydWd1YXlhIHbDoWxpZGEuPC9oMz4nO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZih2YWxpZGF0aW9uVHlwZT09XCJ0d29fd29yZHNcIil7XG4gICAgICAgICAgICAgIGlmKCFWYWxpZGF0aW9uU2VydmljZS52YWxpZGF0ZV90d29fd29yZHModmFsdWUpKXtcbiAgICAgICAgICAgICAgICBlcnJvcnMgPSBlcnJvcnMgKyAnPGgzPi0gRWwgY2FtcG8gXCInICsgZmllbGRfbmFtZSArICdcIiBkZWJlIGNvbnRlbmVyIGFsIG1lbm9zIGRvcyBwYWxhYnJhcy48L2gzPic7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmKGVycm9ycyE9XCJcIil7XG4gICAgICAgICAgICAgIHZhciBlcnJvckRpdiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZXJyb3JfY29udGFpbmVyX2luc2lkZVwiKTtcbiAgICAgICAgICAgICAgZXJyb3JEaXYuaW5uZXJIVE1MPSBlcnJvcnM7XG4gICAgICAgICAgICAgIGVycm9yRGl2LnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XG4gICAgICAgICAgICAgIC8vZG9uJ3QgYWxsb3cgdGhlIHVzZXIgdG8gY2xvc2UgdW5sZXNzIGhlIGVudGVycyB3aWZpIHBhc3N3b3JkXG4gICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIF1cbiAgICB9KTtcbiAgICByZXR1cm4gbXlQb3B1cDtcbiAgIH1cblxuXG4gIH07XG59XSk7XG4iLCJwbWJfaW0uc2VydmljZXMuZmFjdG9yeSgnU2VtYXBob3JlU2VydmljZScsIFtmdW5jdGlvbigpIHtcblxuICB2YXIgc2VtYXBob3JlT2JqID0ge307XG4gIHNlbWFwaG9yZU9iai5zZW1hcGhvcmVzID0gbmV3IEFycmF5KCk7XG4gIHNlbWFwaG9yZU9iai5zZW1hcGhvcmVzWydvcGVuLW1vZGFsJ10gPSBcImF2YWlsYWJsZVwiO1xuICBzZW1hcGhvcmVPYmouc2VtYXBob3Jlc1snc3VibWl0LWZvcm0nXSA9IFwiYXZhaWxhYmxlXCI7XG4gIHNlbWFwaG9yZU9iai5zZW1hcGhvcmVzWydzdWJtaXQtbG9jYXRpb24nXSA9IFwiYXZhaWxhYmxlXCI7XG4gIHNlbWFwaG9yZU9iai5zZW1hcGhvcmVzWydjYW5fdGFsayddID0gXCJhdmFpbGFibGVcIjtcblxuXG5cblxuICBzZW1hcGhvcmVPYmoudGFrZUlmQXZhaWxhYmxlID0gZnVuY3Rpb24oc2VtYXBob3JlSWQpIHtcbiAgICAvL2NvbnNvbGUubG9nKHNlbWFwaG9yZUlkICsgXCI6XCIgKyBzZW1hcGhvcmVPYmouc2VtYXBob3Jlc1tzZW1hcGhvcmVJZF0pO1xuICAgIGlmKHNlbWFwaG9yZU9iai5zZW1hcGhvcmVzW3NlbWFwaG9yZUlkXT09XCJhdmFpbGFibGVcIil7XG4gICAgICAgIHNlbWFwaG9yZU9iai5zZW1hcGhvcmVzW3NlbWFwaG9yZUlkXSA9IFwib2NjdXBpZWRcIjtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfWVsc2V7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgc2VtYXBob3JlT2JqLm1ha2VBdmFpbGFibGVBZ2FpbiA9IGZ1bmN0aW9uKHNlbWFwaG9yZUlkKSB7XG4gICAgaWYoc2VtYXBob3JlT2JqLnNlbWFwaG9yZXNbc2VtYXBob3JlSWRdPT1cIm9jY3VwaWVkXCIpe1xuICAgICAgICBzZW1hcGhvcmVPYmouc2VtYXBob3Jlc1tzZW1hcGhvcmVJZF0gPSBcImF2YWlsYWJsZVwiO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9ZWxzZXtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gc2VtYXBob3JlT2JqO1xuXG59XSk7XG4iLCJwbWJfaW0uc2VydmljZXMuZmFjdG9yeSgnbG9jYXRpb25BUEknLCBbJyRodHRwJywgJyRxJywgJ0FwaUltRW5kcG9pbnQnLCAnQXBpRGF0YUVuZHBvaW50JywgJ0NvbmZpZ1NlcnZpY2UnLCAnTG9jYXRpb25zU2VydmljZScsIGZ1bmN0aW9uKCRodHRwLCAkcSwgQXBpSW1FbmRwb2ludCwgQXBpRGF0YUVuZHBvaW50LCBDb25maWdTZXJ2aWNlLCBMb2NhdGlvbnNTZXJ2aWNlKSB7XG5cbiAgdmFyIHJlc3RQcmVmZml4ID0gXCJ1YmljYWNpb25lc1Jlc3RQcm9kXCI7XG5cblxuICB2YXIgbG9jYXRpb25BUEkgPSB7fTtcblxuICBsb2NhdGlvbkFQSS5zZWFyY2hMb2NhdGlvbkJ5U3RyID0gZnVuY3Rpb24oX2xvY2F0aW9uKSB7XG4gICAgLypyZXR1cm4gJGh0dHAuZ2V0KEFwaUltRW5kcG9pbnQudXJsICsgJy8nICsgcmVzdFByZWZmaXggKyAnL2NhbGxlcycsIHtcbiAgICAgIG1ldGhvZDogJ0dFVCcsXG4gICAgICBwYXJhbXM6IHtcbiAgICAgICAgbm9tYnJlOiBfbG9jYXRpb25cbiAgICAgIH1cbiAgICB9KTsqL1xuICAgIHZhciBiYXNlVVJMID0gQ29uZmlnU2VydmljZS5iYXNlVVJMICsgXCIvYWpheC9nZW9jb2RlP3Rlcm09XCIgKyBMb2NhdGlvbnNTZXJ2aWNlLnNlbGVjdGVkX2NvdW5jaWwgKyBcIixcIiArIF9sb2NhdGlvbjtcbiAgICByZXR1cm4gJGh0dHAuZ2V0KGJhc2VVUkwsIHtcbiAgICAgIG1ldGhvZDogJ0dFVCcsXG4gICAgICBwYXJhbXM6IHt9XG4gICAgfSk7XG4gIH07XG5cblxuICBsb2NhdGlvbkFQSS5zZWFyY2hFc3F1aW5hQnlTdHIgPSBmdW5jdGlvbihfbG9jYXRpb24pIHtcbiAgICAvL2NvbnNvbGUubG9nKFwic2VhcmNoRXNxdWluYUJ5U3RyID0gXCIgKyBKU09OLnN0cmluZ2lmeShfbG9jYXRpb24pKTtcbiAgICAvL3JldHVybiAkaHR0cC5nZXQoQXBpSW1FbmRwb2ludC51cmwgKyAnLycgKyByZXN0UHJlZmZpeCArICcvZXNxdWluYS8nICsgX2xvY2F0aW9uLmNhbGxlICsgJy8nICsgX2xvY2F0aW9uLmVzcXVpbmEsIHtcbiAgICAgIC8qcmV0dXJuICRodHRwLmdldChBcGlJbUVuZHBvaW50LnVybCArICcvJyArIHJlc3RQcmVmZml4ICsgJy9jcnVjZXMvJyArIF9sb2NhdGlvbi5jYWxsZSArICcvJyxcbiAgICAgIHtcbiAgICAgICAgcGFyYW1zOiB7XG4gICAgICAgICAgbm9tYnJlOiBfbG9jYXRpb24uZXNxdWluYVxuICAgICAgICB9XG4gICAgICB9KTsqL1xuXG4gICAgICB2YXIgYmFzZVVSTCA9IENvbmZpZ1NlcnZpY2UuYmFzZVVSTCArIFwiL2FqYXgvZ2VvY29kZT90ZXJtPVwiICsgTG9jYXRpb25zU2VydmljZS5zZWxlY3RlZF9jb3VuY2lsICsgXCIsXCJcbiAgICAgICAgICAgICAgICAgICAgKyBfbG9jYXRpb24uY2FsbGUgKyBcIixcIiArIF9sb2NhdGlvbi5lc3F1aW5hO1xuICAgICAgcmV0dXJuICRodHRwLmdldChiYXNlVVJMLCB7XG4gICAgICAgIG1ldGhvZDogJ0dFVCcsXG4gICAgICAgIHBhcmFtczoge31cbiAgICAgIH0pO1xuICB9O1xuXG4gIGxvY2F0aW9uQVBJLmdldExvY2F0aW9uR2VvbSA9IGZ1bmN0aW9uKF9sb2NhdGlvbikge1xuICAgIHZhciB1cmwgPSBBcGlJbUVuZHBvaW50LnVybCArICcvJyArIHJlc3RQcmVmZml4ICsgbG9jYXRpb25BUEkuZ2V0UGFyYW1QYXRoQnlUaXBvKF9sb2NhdGlvbi50aXBvKTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IF9sb2NhdGlvbi5wYXRoUGFyYW1zLmxlbmd0aDsgaSsrKSB7XG4gICAgICB1cmwgKz0gJy8nICsgX2xvY2F0aW9uLnBhdGhQYXJhbXNbaV07XG4gICAgfVxuICAgIHJldHVybiAkaHR0cC5nZXQoYmFzZVVSTCkudGhlbihmdW5jdGlvbihyZXNwb25zZSl7XG4gICAgICByZXR1cm4gcmVzcG9uc2UuZGF0YTtcbiAgICB9KTtcbiAgfTtcblxuICBsb2NhdGlvbkFQSS5nZXRMb2NhdGlvbkdlb21QTUIgPSBmdW5jdGlvbihjYWxsZSxlc3F1aW5hX251bWVybyx0aXBvKSB7XG4gICAgdmFyIGJhc2VVUkwgPSBDb25maWdTZXJ2aWNlLmJhc2VVUkwgKyBcIi9hamF4L2dlb2NvZGU/dGVybT1cIiArIExvY2F0aW9uc1NlcnZpY2Uuc2VsZWN0ZWRfY291bmNpbCArIFwiLFwiXG4gICAgICAgICAgICAgICsgY2FsbGUgKyBcIixcIiArIGVzcXVpbmFfbnVtZXJvICsgXCIsXCIgKyB0aXBvO1xuXG4gICAgcmV0dXJuICRodHRwLmdldChiYXNlVVJMKTtcblxuICB9O1xuXG4gIGxvY2F0aW9uQVBJLmdldFBhcmFtUGF0aEJ5VGlwbyA9IGZ1bmN0aW9uKF90aXBvKSB7XG5cbiAgICB2YXIgcmVzdEdlb0RhdGFTZXJ2aWNlUGF0aCA9IHtcbiAgICAgICdFU1FVSU5BJzpcIi9lc3F1aW5hXCIsXG4gICAgICAnRElSRUNDSU9OJzpcIi9kaXJlY2Npb25cIlxuICAgIH07XG5cbiAgICByZXR1cm4gcmVzdEdlb0RhdGFTZXJ2aWNlUGF0aFtfdGlwb107XG5cblxuICB9O1xuXG4gIHJldHVybiBsb2NhdGlvbkFQSTtcblxufV0pO1xuIiwicG1iX2ltLnNlcnZpY2VzLmZhY3RvcnkoJ18nLCBbZnVuY3Rpb24oKSB7XG4gIHJldHVybiB3aW5kb3cuXzsgLy9VbmRlcnNjb3JlIG11c3QgYWxyZWFkeSBiZSBsb2FkZWQgb24gdGhlIHBhZ2Vcbn1dKTtcbiIsInBtYl9pbS5zZXJ2aWNlcy5mYWN0b3J5KCdVc2VyU2VydmljZScsIFsnJGh0dHAnLCBmdW5jdGlvbigkaHR0cCkge1xuXG4gIC8vdmFyIGJhc2VVUkwgPSBcImh0dHA6Ly9wbWJ1eS5kZXZlbG9wbWVudC5kYXRhdXkub3JnL2F1dGgvYWpheC9cIjtcbiAgdmFyIFVzZXJPYmogPSB7fTtcbiAgVXNlck9iai51aWQgPSBudWxsO1xuICBVc2VyT2JqLm5hbWUgPSBudWxsO1xuICBVc2VyT2JqLmVtYWlsID0gbnVsbDtcbiAgVXNlck9iai5wYXNzd29yZCA9IG51bGw7XG4gIFVzZXJPYmoucGljdHVyZV91cmwgPSBcInVybCguL2ltZy9pY29uLXVzZXItYW5vbnltb3VzLnBuZylcIjtcbiAgVXNlck9iai5zaG93X2xvY2F0aW9uID0gbnVsbDtcblxuXG4gIFVzZXJPYmouc2F2ZV91c2VyX2RhdGEgPSBmdW5jdGlvbiAodXNlcl9uYW1lLCB1c2VyX3Bhc3N3b3JkLCB1c2VyX3BpY3R1cmVfdXJsLCBzaG93X2xvY2F0aW9uLCB1aWQsIHN0YXR1cywgZ2VuZGVyLCBpbnRlcmVzdGVkKSB7XG4gICAgICBVc2VyT2JqLnVpZCA9IHVpZDtcbiAgICAgIFVzZXJPYmoubmFtZSA9IHVzZXJfbmFtZTtcbiAgICAgIFVzZXJPYmoucGFzc3dvcmQgPSB1c2VyX3Bhc3N3b3JkO1xuICAgICAgVXNlck9iai5waWN0dXJlX3VybCA9IHVzZXJfcGljdHVyZV91cmw7XG4gICAgICBVc2VyT2JqLnNob3dfbG9jYXRpb24gPSBzaG93X2xvY2F0aW9uO1xuICAgICAgVXNlck9iai5zdGF0dXMgPSBzdGF0dXM7XG4gICAgICBVc2VyT2JqLmdlbmRlciA9IGdlbmRlcjtcbiAgICAgIFVzZXJPYmouaW50ZXJlc3RlZCA9IGludGVyZXN0ZWQ7XG5cbiAgICAgIC8vU0FWRSBJTiBQT1VDSERCXG4gIH1cblxuICBVc2VyT2JqLmVyYXNlX3VzZXJfZGF0YSA9IGZ1bmN0aW9uICgpIHtcbiAgICBVc2VyT2JqLm5hbWUgPSBudWxsO1xuICAgIFVzZXJPYmouZW1haWwgPSBudWxsO1xuICAgIFVzZXJPYmoucGFzc3dvcmQgPSBudWxsO1xuICAgIFVzZXJPYmouaWRlbnRpdHlfZG9jdW1lbnQgPSBudWxsO1xuICAgIFVzZXJPYmoucGhvbmUgPSBudWxsO1xuICAgIFVzZXJPYmoucGljdHVyZV91cmwgPSBudWxsO1xuICAgIC8vREVMRVRFIElOIFBPVUNIREJcbiAgfVxuXG4gIFVzZXJPYmouZ2V0X3VzZXJfZGF0YSA9IGZ1bmN0aW9uICgpIHtcbiAgICAvL0xFVkFOVEEgREUgUE9VQ0hEQiBMT1MgREFUT1MgREVMIFVTVUFSSU8uIFNJIEhBWSBMT1MgUE9ORSBFTiBMQVMgVkFSSUFCTEVTIERFTCBTRVJWSUNJTy4gU0kgTk8gSEFZIFBPTkUgVE9ETyBOVUxMXG4gIH1cblxuICBVc2VyT2JqLmFkZF9waG90byA9IGZ1bmN0aW9uICh1c2VyX3BpY3R1cmVfdXJsKSB7XG4gICAgVXNlck9iai5waWN0dXJlX3VybCA9IHVzZXJfcGljdHVyZV91cmw7XG4gIH1cblxuICBVc2VyT2JqLmlzTG9nZ2VkID0gZnVuY3Rpb24gKCkge1xuICAgIGlmKFVzZXJPYmoubmFtZSE9bnVsbCAmJiBVc2VyT2JqLm5hbWUhPVwiXCIpe1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfWVsc2V7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG5cblxuICByZXR1cm4gVXNlck9iajtcblxufV0pO1xuIiwicG1iX2ltLnNlcnZpY2VzLmZhY3RvcnkoJ1ZhbGlkYXRpb25TZXJ2aWNlJywgWyckaHR0cCcsJyRpb25pY1BvcHVwJywgZnVuY3Rpb24oJGh0dHAsJGlvbmljUG9wdXApIHtcblxuICByZXR1cm4ge1xuICAgIGlzTW9iaWxlRGV2aWNlOiBmdW5jdGlvbigpe1xuICAgICAgaWYod2luZG93LmNvcmRvdmEpe1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cblxuICAgIH0sXG5cbiAgICB2YWxpZGF0ZV9ub3RfZW1wdHk6IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgICBpZih2YWx1ZSE9bnVsbCAmJiB2YWx1ZSE9XCJ1bmRlZmluZWRcIiAmJiB2YWx1ZSE9XCJcIil7XG4gICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1lbHNle1xuICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgIH0sXG5cbiAgICB2YWxpZGF0ZV90d29fd29yZHM6IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgICBpZih2YWx1ZSE9bnVsbCAmJiB2YWx1ZSE9XCJ1bmRlZmluZWRcIiAmJiB2YWx1ZSE9XCJcIil7XG4gICAgICAgICAgdmFyIHZhbHVlcyA9IHZhbHVlLnNwbGl0KCcgJykuZmlsdGVyKGZ1bmN0aW9uKHYpe3JldHVybiB2IT09Jyd9KTtcbiAgICAgICAgICBpZiAodmFsdWVzLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgICAgICAgLy90d28gb3IgbW9yZSB3b3Jkc1xuICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAvL25vdCBlbm91Z2ggd29yZHNcbiAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgIH1cbiAgICAgICAgfWVsc2V7XG4gICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfSxcblxuICAgIHZhbGlkYXRlX2VxdWFsc1RvOiBmdW5jdGlvbiAodmFsdWUsc2Vjb25kVmFsdWUpIHtcbiAgICAgIGlmKHZhbHVlPT1zZWNvbmRWYWx1ZSl7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfWVsc2V7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICB9LFxuXG4gICAgdmFsaWRhdGVfZW1haWw6IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgICBpZih2YWx1ZSE9bnVsbCAmJiB2YWx1ZSE9XCJ1bmRlZmluZWRcIiAmJiB2YWx1ZSE9XCJcIil7XG4gICAgICAgICAgdmFyIHJlID0gL14oKFtePD4oKVxcW1xcXVxcXFwuLDs6XFxzQFwiXSsoXFwuW148PigpXFxbXFxdXFxcXC4sOzpcXHNAXCJdKykqKXwoXCIuK1wiKSlAKChcXFtbMC05XXsxLDN9XFwuWzAtOV17MSwzfVxcLlswLTldezEsM31cXC5bMC05XXsxLDN9XSl8KChbYS16QS1aXFwtMC05XStcXC4pK1thLXpBLVpdezIsfSkpJC87XG4gICAgICAgICAgcmV0dXJuIHJlLnRlc3QodmFsdWUpO1xuICAgICAgICB9ZWxzZXtcbiAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9LFxuXG4gICAgdmFsaWRhdGVfaWRkb2NfdXk6IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgaWYodmFsdWUhPW51bGwgJiYgdmFsdWUhPVwidW5kZWZpbmVkXCIgJiYgdmFsdWUhPVwiXCIpe1xuICAgICAgICAgIHZhbHVlID0gdmFsdWUucmVwbGFjZSgvXFxEL2csICcnKTtcbiAgICAgICAgICB2YXIgZGlnID0gdmFsdWVbdmFsdWUubGVuZ3RoIC0gMV07XG4gICAgICAgICAgdmFyIGEgPSAwOyB2YXIgaSA9IDA7XG4gICAgICAgICAgaWYodmFsdWUubGVuZ3RoIDw9IDYpe1xuICAgICAgICAgICAgZm9yKGkgPSB2YWx1ZS5sZW5ndGg7IGkgPCA3OyBpKyspe1xuICAgICAgICAgICAgICB2YWx1ZSA9ICcwJyArIHZhbHVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICBmb3IoaSA9IDA7IGkgPCA3OyBpKyspe1xuICAgICAgICAgICAgYSArPSAocGFyc2VJbnQoXCIyOTg3NjM0XCJbaV0pICogcGFyc2VJbnQodmFsdWVbaV0pKSAlIDEwO1xuICAgICAgICAgIH1cbiAgICAgICAgICB2YXIgcmVzdWx0O1xuICAgICAgICAgIGlmKGElMTAgPT09IDApe1xuICAgICAgICAgICAgcmVzdWx0ID0gMDtcbiAgICAgICAgICB9ZWxzZXtcbiAgICAgICAgICAgIHJlc3VsdCA9IDEwIC0gYSAlIDEwO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZihkaWcgPT0gcmVzdWx0KXtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgIH1lbHNle1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgIH1cbiAgICAgIH1lbHNle1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgfVxuICB9O1xufV0pO1xuIl19
