window.VERSION = "0.0.1";var pmb_im={controllers:angular.module("pmb_im.controllers",[]),services:angular.module("pmb_im.services",[])};pmb_im.app=angular.module("pmb_im",["ionic","ionic.wizard","ion-autocomplete","leaflet-directive","pmb_im.controllers","pmb_im.services","ngCordova"]).constant("ApiImEndpoint",{url:"http://www.montevideo.gub.uy"}).constant("ApiDataEndpoint",{url:"http://backend.educacion.thor.datauy.org"}).run(["$ionicPlatform","$rootScope","$cordovaKeyboard",function(e,t,n){t.VERSION=window.VERSION,e.ready(function(){window.cordova&&window.cordova.plugins.Keyboard&&(cordova.plugins.Keyboard.hideKeyboardAccessoryBar(!1),cordova.plugins.Keyboard.disableScroll(!1)),ionic.Platform.isFullScreen=!0,window.StatusBar&&StatusBar.styleDefault()})}]).config(["$stateProvider","$urlRouterProvider","$compileProvider","$ionicConfigProvider",function(e,t,n,o){n.debugInfoEnabled(!1),e.state("app",{cache:!1,url:"/app","abstract":!0,templateUrl:"templates/menu.html",controller:"AbsController"}).state("app.map",{cache:!1,url:"/map",views:{menuContent:{templateUrl:"templates/map.html",controller:"MapController"}}}).state("app.form",{cache:!1,url:"/form",views:{menuContent:{templateUrl:"templates/form.html",controller:"FormCtrl"}}}).state("app.intro",{cache:!1,url:"/intro",views:{menuContent:{templateUrl:"templates/intro.html",controller:"IntroCtrl"}}}),t.otherwise("/app/intro")}]),pmb_im.controllers.controller("AbsController",["$scope",function(e){}]),pmb_im.controllers.controller("FormCtrl",["$scope","$state","$cordovaGeolocation","$stateParams","$ionicPlatform","$ionicPopup","LocationsService","DBService","$ionicSlideBoxDelegate","$ionicScrollDelegate",function(e,t,n,o,a,r,i,s,l,c){e.form={},e.form.edad=16,e.form.ultimo_nivel_aprobado="",e.form.ultimo_anio_aprobado="",e.form.plan="",e.form.lugar="",e.form.turno="",e.restarEdad=function(){e.form.edad>4&&(e.form.edad=e.form.edad-1)},e.sumarEdad=function(){e.form.edad=e.form.edad+1},e.selectUltimoNivel=function(t){var n,o=document.getElementsByClassName("nivel");for(n=0;n<o.length;n++)o[n].className="nivel_"+o[n].id+" nivel hidden";var a=document.getElementById(t);a.className="nivel_"+a.id+" nivel",e.form.ultimo_nivel_aprobado=t},e.next=function(){l.next()},e.previous=function(){l.previous()},e.go_to_map=function(){t.go("app.map")}}]),pmb_im.controllers.controller("IntroCtrl",["$scope","$state","$cordovaGeolocation","$stateParams","$ionicPlatform","$ionicPopup","LocationsService","DBService",function(e,t,n,o,a,r,i,s){var l=s.initDB();l.info().then(console.log.bind(console)),e.geolocate=function(){var e={timeout:3500,enableHighAccuracy:!0};n.getCurrentPosition(e).then(function(e){i.save_initial_position(e),t.go("app.form")},function(e){t.go("app.form")})},e.go_to_form=function(){t.go("app.form")}}]),pmb_im.controllers.controller("MapController",["$scope","_","$cordovaCamera","$cordovaGeolocation","$compile","$ionicModal","$ionicPopup","leafletData","ConfigService","LocationsService","PinService","AuthService","UserService","DBService","$timeout","$interval","$location","ErrorService","$ionicSlideBoxDelegate","$ionicScrollDelegate","PopUpService","ConnectivityService","$cordovaInAppBrowser","MapService","ModalService","SemaphoreService","ValidationService",function(e,t,n,o,a,r,i,s,l,c,u,d,p,m,_,g,f,h,v,y,b,w,I,E,k,D,A){e.online_user_geo={},e.online_user_geo_array=new Array,e.baseURL=l.baseURL,e.AppName=l.AppName,e.user_cached_image="./img/icon-user-anonymous.png",e.one_value_popup=null,e.myIntervals=new Array,e.$on("$ionicView.beforeEnter",function(){k.checkNoModalIsOpen(),m.initDB(),w.isOnline()?e.check_user_logged():e.set_offline_user(),document.getElementById("foot_bar").style.display="block",w.isOnline()&&e.create_online_map()}),e.$on("$ionicView.afterEnter",function(){s.getMap();""!=c.initial_lat?E.centerMapOnCoords(c.initial_lat,c.initial_lng,16):E.centerMapOnCoords(-34.901113,-56.164531,14),document.getElementById("spinner").style.display="none"}),e.openWebsite=function(e){var t={location:"no",clearcache:"yes",toolbar:"no"};I.open(e,"_blank",t).then(function(e){})["catch"](function(e){})},e.create_online_map=function(){e.map={defaults:{tileLayer:"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",minZoom:1,maxZoom:18,zoomControlPosition:"topleft"},markers:{},events:{map:{enable:["context"],logic:"emit"}},center:{}},e.loadPinsLayer(),e.map.center={lat:-34.901113,lng:-56.164531,zoom:16},s.getMap().then(function(t){t.on("moveend",e.hideOffScreenPins)})},e.next=function(){v.next()},e.previous=function(){v.previous()},e.back_to_map=function(e){e?(k.checkNoModalIsOpen(),document.getElementById("foot_bar").style.display="block",document.getElementById("spinner-inside-modal").style.display="none"):document.getElementById("spinner-inside-modal").style.display="none"},e.image=null,e.addImage=function(t,o,a,r){e.isUserPhoto=o,e.isCommentPhoto=a,e.isNewUserPhoto=r;var i=Camera.PictureSourceType.CAMERA,s=!0,l=!0;1==t&&(i=Camera.PictureSourceType.PHOTOLIBRARY,s=!1,l=!1);var c={quality:90,destinationType:Camera.DestinationType.FILE_URI,sourceType:i,allowEdit:!1,correctOrientation:s,encodingType:Camera.EncodingType.JPEG,popoverOptions:CameraPopoverOptions,saveToPhotoAlbum:l,targetWidth:500,targetHeight:500};n.getPicture(c).then(function(t){function n(t){window.FilePath.resolveNativePath(t,function(n){t="file://"+n,n.startsWith("file://")&&(t=n),1==e.isUserPhoto?e.profile.picture_url=t:1==e.isCommentPhoto?e.comment.file=t:1==e.isNewUserPhoto&&(e.newuser.picture_url=t),e.imgURI=t},function(e){alert("Error resolveNativePath"+e)})}n(t)},function(e){})},e.urlForImage=function(){var t="http://placehold.it/200x200";if(e.image){var n=e.image.substr(e.image.lastIndexOf("/")+1);t=cordova.file.dataDirectory+n}return t},e.scrollMe=function(e){f.hash(e);var t=y.$getByHandle("content");t.anchorScroll()},e.set_active_option=function(e){document.getElementById(e).className="option-active"},e.hide_special_divs=function(){document.getElementById("user-options-menu").style.display="none"},e.close_report_detail_modal=function(){k.checkNoModalIsOpen(),e.report_detail_id=null},e.locate=function(){o.getCurrentPosition().then(function(t){e.map.center.lat=t.coords.latitude,e.map.center.lng=t.coords.longitude,e.map.center.zoom=15,e.map.markers.now={lat:t.coords.latitude,lng:t.coords.longitude,message:"You Are Here",focus:!0,draggable:!1}},function(e){})},e.addMapControls=function(){document.getElementById("map_crosshair").style.display="block",document.getElementById("map_crosshair_button").style.display="block"},e.changeUserLocationPin=function(t,n,o){if(e.online_user_geo_array[o]){layer=e.online_user_geo_array[o];var a=new L.LatLng(t,n);layer.setLatLng(a)}},e.hideOffScreenPins=function(){s.getMap().then(function(t){var n=t.getBounds();e.usersVisible=[],e.online_user_geo_array.forEach(function(o,a){var r=n.contains(o.getLatLng());r?r&&(t.addLayer(o),e.usersVisible.push(o.feature)):t.removeLayer(o)})})},e.loadPinsLayer=function(){},e.timeConverter=function(e){var t=new Date(1e3*e),n=t.getFullYear(),o=t.getMonth();o<10&&(o="0"+o);var a=t.getDate();a<10&&(a="0"+a);var r=t.getHours();r<10&&(r="0"+r);var i=t.getMinutes();i<10&&(i="0"+i);var s=(t.getSeconds(),a+"/"+o+"/"+n+" "+r+":"+i);return s},e.model=[],e.externalModel=[],e.selectedItems=[],e.preselectedSearchItems=[],e.clickedValueModel="",e.removedValueModel="",e.itemsRemoved=function(t){e.removedValueModel=t},e.user_options=function(){var t=document.getElementById("user-options-menu");if("block"==t.style.display)t.style.display="none";else{var n=p.name;null==n?e.show_anonymous_menu():e.show_user_menu()}},e.show_anonymous_menu=function(){var t=document.getElementById("user-options-menu"),n="<div id='auth_options'><div class='nonauth-link' ng-click='show_login_modal()'>Iniciar sesión</div>";n+="<div class='nonauth-link' ng-click='show_sign_up_modal()'>Registrarse</div></div>",t.innerHTML=n,a(t)(e),t.style.height="120px",t.style.width="150px",t.style.display="block"},e.show_user_menu=function(){var t=document.getElementById("user-options-menu"),n=p.name+"<div id='auth_options'><div class='user-logged-link' ng-click='show_edit_profile_modal()'>Mi perfil</div>";n+="<div class='user-logged-link' ng-click='sign_out()'>Cerrar sesión</div></div>",t.innerHTML=n,a(t)(e),t.style.height="220px",t.style.width="200px",t.style.display="block"},e.create_field_array=function(e,t,n){var o=new Array;return o.name=e,o.type=t,o.value=n,o},e.create_field_array_with_twoFields=function(e,t,n,o){var a=new Array;return a.name=e,a.type=t,a.value=n,a.secondValue=o,a},e.fix_fb_image_link=function(e){if(e.indexOf("http://graph.facebook.com")>=0){var t=e.split("http://graph.facebook.com"),n="http://graph.facebook.com"+t[1];return n}return e},e.log_in=function(t,n){if(D.takeIfAvailable("submit-form"))if(w.isOnline()){document.getElementById("spinner-inside-modal").style.display="block";var o=new Array;o.push(e.create_field_array("Usuario","notNull",t)),o.push(e.create_field_array("Contraseña","notNull",n)),h.check_fields(o,"error_container")?d.log_in(t,n).then(function(t){h.http_response_is_successful(t,"error_container")?(photo=e.fix_fb_image_link(e.getObjectDataFromResponse(t).Photo),"anon"==photo&&(photo="url(./img/icon-user-anonymous.png)"),p.save_user_data(e.getObjectDataFromResponse(t).Name,e.nonauth.password,photo,e.getObjectDataFromResponse(t).ShowLocation,e.getObjectDataFromResponse(t).Uid,e.getObjectDataFromResponse(t).Estado,e.getObjectDataFromResponse(t).Gender,e.getObjectDataFromResponse(t).InterestedIn),m.saveUser(e.getObjectDataFromResponse(t).Name,e.nonauth.password,photo,e.getObjectDataFromResponse(t).ShowLocation,e.getObjectDataFromResponse(t).Uid,e.getObjectDataFromResponse(t).Estado,e.getObjectDataFromResponse(t).Gender,e.getObjectDataFromResponse(t).InterestedIn),e.set_user_picture(1),document.getElementById("spinner-inside-modal").style.display="none",D.makeAvailableAgain("submit-form"),e.close_login_modal()):(D.makeAvailableAgain("submit-form"),document.getElementById("spinner-inside-modal").style.display="none")},function(e){document.getElementById("spinner-inside-modal").style.display="none",D.makeAvailableAgain("submit-form"),h.show_error_message("error_container",e.statusText)}):(document.getElementById("spinner-inside-modal").style.display="none",D.makeAvailableAgain("submit-form"))}else D.makeAvailableAgain("submit-form"),b.show_alert("Sin conexión a internet","Para iniciar sesión debe estar conectado a internet")},e.log_in_background=function(t,n){d.log_in(t,n).then(function(t){return h.http_response_is_successful_ajax(t)?(photo=e.fix_fb_image_link(e.getObjectDataFromResponse(t).Photo),"anon"==photo&&(photo="url(./img/icon-user-anonymous.png)"),p.save_user_data(e.getObjectDataFromResponse(t).Name,n,photo,e.getObjectDataFromResponse(t).ShowLocation,e.getObjectDataFromResponse(t).Uid,e.getObjectDataFromResponse(t).Estado,e.getObjectDataFromResponse(t).Gender,e.getObjectDataFromResponse(t).InterestedIn),m.saveUser(e.getObjectDataFromResponse(t).Name,n,photo,e.getObjectDataFromResponse(t).ShowLocation,e.getObjectDataFromResponse(t).Uid,e.getObjectDataFromResponse(t).Estado,e.getObjectDataFromResponse(t).Gender,e.getObjectDataFromResponse(t).InterestedIn),e.set_user_picture(1),1):0},function(e){return 0})},e.sign_out=function(){p.erase_user_data(),m.eraseUser(),document.getElementById("spinner").style.display="none",e.set_user_picture(0),document.getElementById("user-options-menu").style.display="none"},e.show_edit_profile_modal=function(){D.takeIfAvailable("open-modal")&&(document.getElementById("spinner").style.display="block",e.newuser=new Array,e.newuser.email=p.email,e.newuser.gender=p.gender,e.newuser.username=p.name,e.newuser.interested=p.interested,e.newuser.status=p.status,e.newuser.show_location=p.show_location,e.actual_photo=p.picture_url,null!=e.actual_photo||(e.actual_photo="./img/icon-user-anonymous.png"),"url(./img/icon-user-anonymous.png)"==e.actual_photo&&(e.actual_photo="./img/icon-user-anonymous.png"),k.checkNoModalIsOpen(),A.isMobileDevice()?r.fromTemplateUrl("templates/edit_profile_with_photo.html",{scope:e,hardwareBackButtonClose:!1,animation:"slide-in-up"}).then(function(e){document.getElementById("spinner").style.display="none",document.getElementById("user-options-menu").style.display="none",k.activeModal=e,document.getElementById("foot_bar").style.display="none",k.activeModal.show(),D.makeAvailableAgain("open-modal")}):r.fromTemplateUrl("templates/edit_profile_with_photo_desktop.html",{scope:e,hardwareBackButtonClose:!1,animation:"slide-in-up"}).then(function(e){document.getElementById("spinner").style.display="none",document.getElementById("user-options-menu").style.display="none",k.activeModal=e,document.getElementById("foot_bar").style.display="none",k.activeModal.show(),D.makeAvailableAgain("open-modal")}))},e.readURL=function(t,n){if(t.files&&t.files[0]){1==n?e.newuser.picture_url=t.files[0]:2==n?e.comment.photo=t.files[0]:e.report.file=t.files[0];var o=new FileReader;o.onload=function(e){document.getElementById("myImage").src=e.target.result},o.readAsDataURL(t.files[0])}},e.close_edit_profile_modal=function(){document.getElementById("foot_bar").style.display="block",k.checkNoModalIsOpen()},e.edit_profile_ok=function(){e.edit_profile()},e.getObjectDataFromResponse=function(e){return e.data?e.data:e},e.edit_profile=function(){if(D.takeIfAvailable("submit-form"))if(w.isOnline()){document.getElementById("spinner-inside-modal").style.display="block",e.newuser.password=p.password;var t=d.edit_user(e.newuser);null!=e.newuser.picture_url&&""!=e.newuser.picture_url&&A.isMobileDevice()?t.then(function(t){var n=JSON.parse(t.response);h.http_data_response_is_successful(n,"error_container")?(n=e.getObjectDataFromResponse(n),p.save_user_data(n.Name,e.newuser.password,n.Photo,n.ShowLocation,n.Uid,n.Estado,n.Gender,n.InterestedIn),m.saveUser(n.Name,e.newuser.password,n.Photo,n.ShowLocation,n.Uid,n.Estado,n.Gender,n.InterestedIn),D.makeAvailableAgain("submit-form"),document.getElementById("spinner-inside-modal").style.display="none",e.close_edit_profile_modal(),e.check_user_logged()):(D.makeAvailableAgain("submit-form"),document.getElementById("spinner-inside-modal").style.display="none")},function(e){var t="Código: "+e.code;t=t+" Origen: "+e.source,t=t+" Destino: "+e.target,t=t+" http_status: "+e.http_status,t=t+" Body: "+e.body,t=t+" Exception: "+e.exception,h.show_error_message("error_container","Hubo un error en el envío: "+t),D.makeAvailableAgain("submit-form"),document.getElementById("spinner-inside-modal").style.display="none"},function(t){_(function(){e.uploadProgress=t.loaded/t.total*100,document.getElementById("sent_label").innerHTML="Enviado: "+Math.round(e.uploadProgress)+"%"})}):t.success(function(t){document.getElementById("sent_label").innerHTML="Enviado: 100%",h.http_response_is_successful(t,"error_container")?(p.save_user_data(e.getObjectDataFromResponse(t).Name,e.newuser.password,e.getObjectDataFromResponse(t).Photo,e.getObjectDataFromResponse(t).ShowLocation,e.getObjectDataFromResponse(t).Uid,e.getObjectDataFromResponse(t).Estado,e.getObjectDataFromResponse(t).Gender,e.getObjectDataFromResponse(t).InterestedIn),m.saveUser(e.getObjectDataFromResponse(t).Name,e.newuser.password,e.getObjectDataFromResponse(t).Photo,e.getObjectDataFromResponse(t).ShowLocation,e.getObjectDataFromResponse(t).Uid,e.getObjectDataFromResponse(t).Estado,e.getObjectDataFromResponse(t).Gender,e.getObjectDataFromResponse(t).InterestedIn),document.getElementById("spinner-inside-modal").style.display="none",D.makeAvailableAgain("submit-form"),e.close_edit_profile_modal(),e.check_user_logged()):(D.makeAvailableAgain("submit-form"),document.getElementById("spinner-inside-modal").style.display="none")}).error(function(e,t,n,o){h.show_error_message("error_container",t),document.getElementById("spinner-inside-modal").style.display="none",D.makeAvailableAgain("submit-form")})}else D.makeAvailableAgain("submit-form"),b.show_alert("Sin conexión a internet","Para editar su perfil debe estar conectado a internet")},e.show_login_modal=function(){D.takeIfAvailable("open-modal")&&(e.nonauth=new Array,e.nonauth.user="",e.nonauth.password="",k.checkNoModalIsOpen(),r.fromTemplateUrl("templates/log_in.html",{scope:e,hardwareBackButtonClose:!1,animation:"slide-in-up"}).then(function(t){e.hide_special_divs(),k.activeModal=t,D.makeAvailableAgain("open-modal"),document.getElementById("foot_bar").style.display="none",k.activeModal.show()}))},e.login_ok=function(){e.log_in(e.nonauth.user,e.nonauth.password)},e.close_login_modal=function(){document.getElementById("foot_bar").style.display="block",k.checkNoModalIsOpen()},e.show_sign_up_modal=function(){D.takeIfAvailable("open-modal")&&(e.newuser=new Array,e.newuser.email="",e.newuser.password="",e.newuser.fullname="",e.newuser.id_doc="",e.newuser.telephone="",e.newuser.photo="",k.checkNoModalIsOpen(),A.isMobileDevice()?r.fromTemplateUrl("templates/sign_up.html",{scope:e,hardwareBackButtonClose:!1,animation:"slide-in-up"}).then(function(t){e.hide_special_divs(),k.activeModal=t,D.makeAvailableAgain("open-modal"),document.getElementById("foot_bar").style.display="none",k.activeModal.show()}):r.fromTemplateUrl("templates/sign_up_desktop.html",{scope:e,hardwareBackButtonClose:!1,animation:"slide-in-up"}).then(function(t){e.hide_special_divs(),k.activeModal=t,D.makeAvailableAgain("open-modal"),document.getElementById("foot_bar").style.display="none",k.activeModal.show()}))},e.close_sign_up_modal=function(){document.getElementById("foot_bar").style.display="block",k.checkNoModalIsOpen()},e.sign_up=function(){if(D.takeIfAvailable("submit-form"))if(w.isOnline()){document.getElementById("spinner-inside-modal").style.display="block";new Array;null!=e.newuser.picture_url&&""!=e.newuser.picture_url&&A.isMobileDevice()?d.create_user(e.newuser).then(function(t){document.getElementById("sent_label").innerHTML="Enviado: 100%",h.http_data_response_is_successful(t,"error_container")?(t=e.getObjectDataFromResponse(t),p.save_user_data(t.name,t.email,e.newuser.password,t.identity_document,t.phone,t.picture_url),p.save_user_data(t.Name,e.newuser.password,t.Photo,t.ShowLocation,t.Uid,t.Estado,t.Gender,t.InterestedIn),m.saveUser(t.Name,password,t.Photo,t.ShowLocation,t.Uid,t.Estado,t.Gender,t.InterestedIn),D.makeAvailableAgain("submit-form"),document.getElementById("spinner-inside-modal").style.display="none",e.close_edit_profile_modal(),e.check_user_logged()):(D.makeAvailableAgain("submit-form"),document.getElementById("spinner-inside-modal").style.display="none")},function(e){D.makeAvailableAgain("submit-form"),document.getElementById("spinner-inside-modal").style.display="none"}):d.create_user(e.newuser).then(function(t){if(h.http_response_is_successful(t,"error_container")){p.save_user_data(e.getObjectDataFromResponse(t).Name,e.newuser.password,e.getObjectDataFromResponse(t).Photo,e.getObjectDataFromResponse(t).ShowLocation,e.getObjectDataFromResponse(t).Uid,e.getObjectDataFromResponse(t).Estado,e.getObjectDataFromResponse(t).Gender,e.getObjectDataFromResponse(t).InterestedIn),m.saveUser(e.getObjectDataFromResponse(t).Name,e.newuser.password,e.getObjectDataFromResponse(t).Photo,e.getObjectDataFromResponse(t).ShowLocation,e.getObjectDataFromResponse(t).Uid,e.getObjectDataFromResponse(t).Estado,e.getObjectDataFromResponse(t).Gender,e.getObjectDataFromResponse(t).InterestedIn),D.makeAvailableAgain("submit-form"),document.getElementById("spinner-inside-modal").style.display="none",e.close_sign_up_modal();var n=i.alert({title:"Usuario creado con éxito",template:e.getObjectDataFromResponse(t).message});n.then(function(e){}),e.check_user_logged()}else D.makeAvailableAgain("submit-form"),document.getElementById("spinner-inside-modal").style.display="none"},function(e){D.makeAvailableAgain("submit-form"),document.getElementById("spinner-inside-modal").style.display="none",h.show_error_message("error_container",e.statusText)})}else D.makeAvailableAgain("submit-form"),b.show_alert("Sin conexión a internet","Para iniciar registrarse debe estar conectado a internet")},e.sign_up_ok=function(){e.sign_up()},e.check_user_logged=function(){var t=p.name;if(null==t){var n=m.getUser();n.then(function(t){null!=t.name&&""!=t.name&&"undefined"!=t.name?e.log_in_background(t.name,t.password):e.set_user_picture(0)})["catch"](function(t){e.set_user_picture(0)})}else null==p.picture_url||""==p.picture_url?e.set_user_picture(0):e.set_user_picture(1)},e.set_offline_user=function(){var t=p.name;if(null==t){var n=m.getUser();n.then(function(t){null!=t.name&&""!=t.name&&"undefined"!=t.name?p.save_user_data(t.name,t.password,t.picture_url,t.show_location):e.set_user_picture(0)})["catch"](function(t){e.set_user_picture(0)})}else null==p.picture_url||""==p.picture_url?e.set_user_picture(0):e.set_user_picture(1)},e.set_user_picture=function(t){document.getElementById("user_picture");0==t?e.user_cached_image="./img/icon-user-anonymous.png":null!=p.picture_url&&""!=p.picture_url?e.user_cached_image=p.picture_url:e.user_cached_image="./img/icon-user-anonymous.png"},e.find_me=function(){e.set_active_option("button-find-me"),e.hide_special_divs();var t={timeout:1e4,enableHighAccuracy:!0};o.getCurrentPosition(t).then(function(t){e.map.center.lat=t.coords.latitude,e.map.center.lng=t.coords.longitude,c.save_new_report_position(t.coords.latitude,t.coords.longitude),w.isOnline()?e.map.center.zoom=18:e.map.center.zoom=16,e.map.markers.now={lat:t.coords.latitude,lng:t.coords.longitude,message:"<p align='center'>Te encuentras aquí <br/> <a ng-click='new_report(1);'>Iniciar reporte en tu posición actual</a></p>",focus:!0,draggable:!1,getMessageScope:function(){return e}}},function(t){e.openCouncilSelector()})}}]),pmb_im.services.factory("AuthService",["$http","$cordovaFileTransfer","ConfigService","ValidationService",function(e,t,n,o){var a=n.baseURL+"/api/";return{log_in:function(t,n){var o="user="+t+"&password="+n;return e.post(a+"login",o,{withCredentials:!0,headers:{"Content-Type":"application/x-www-form-urlencoded"}})},sign_out:function(t,n){return e.get(a+"sign_out",{withCredentials:!0,params:{password_sign_in:t,email:n}})},create_user:function(n){if(n.picture_url&&o.isMobileDevice()){var r={fileKey:"photo",withCredentials:!0,params:{user:n.username,password:n.password,email:n.email,gender:n.gender,interested:n.interested,status:n.status,show_location:n.show_location}},i=!0;return t.upload(a+"create_user",n.picture_url,r,i)}if(n.picture_url){var s=new FormData;return s.append("photo",n.picture_url),s.append("user",n.username),s.append("password",n.password),s.append("email",n.email),s.append("gender",n.gender),s.append("interested",n.interested),s.append("status",n.status),s.append("show_location",n.show_location),e.post(a+"create_user",s,{headers:{"Content-Type":void 0},transformRequest:angular.identity})}var l="user="+n.username+"&password="+n.password+"&email="+n.email+"&gender="+n.gender;return l=l+"&interested="+n.interested+"&status="+n.status+"&show_location="+n.show_location,e.post(a+"create_user",l,{withCredentials:!0,headers:{"Content-Type":"application/x-www-form-urlencoded"}})},password_recovery:function(t){return e.get(a+"forgot_password",{params:{login_email:t}})},password_change:function(t,n,o,r){var i="email="+t+"&password_sign_in="+n+"&new_password="+o+"&confirm="+r;return e.post(a+"change_password",i,{headers:{"Content-Type":"application/x-www-form-urlencoded"}})},edit_user:function(n){if(n.picture_url&&o.isMobileDevice()){var r={fileKey:"photo",withCredentials:!0,params:{user:n.username,password:n.password,email:n.email,gender:n.gender,interested:n.interested,status:n.status,show_location:n.show_location}},i=!0;return t.upload(a+"edit_profile",n.picture_url,r,i)}var s="user="+n.username+"&password="+n.password+"&email="+n.email+"&gender="+n.gender;if(s=s+"&interested="+n.interested+"&status="+n.status+"&show_location="+n.show_location,n.picture_url){var l=new FormData;return l.append("photo",n.picture_url),l.append("user",n.username),l.append("password",n.password),l.append("email",n.email),l.append("gender",n.gender),l.append("interested",n.interested),l.append("status",n.status),l.append("show_location",n.show_location),e.post(a+"edit_profile",l,{headers:{"Content-Type":void 0},transformRequest:angular.identity})}return e.post(a+"edit_profile",s,{withCredentials:!0,headers:{"Content-Type":"application/x-www-form-urlencoded"}})}}}]),pmb_im.services.factory("ConfigService",["$http",function(e){var t={};return t.baseURL="http://backend.educacion.thor.datauy.org",ionic.Platform.isWebView()?t.baseURL="http://backend.educacion.thor.datauy.org":t.baseURL="/backend",t.AppName="Elijo Estudiar",t}]),pmb_im.services.factory("ConnectivityService",["$cordovaNetwork",function(e){return{isOnline:function(){return!0},isOffline:function(){return!1}}}]),pmb_im.services.factory("DBService",["$q",function(e){function t(e,t,o,a,r,i,s,l){var c={_id:"user-logged",name:e,password:t,picture_url:o,show_location:a,uid:r,status:i,gender:s,interested:l};n().then(function(e){return c._rev=e._rev,m.put(c)})["catch"](function(e){return m.put(c)})}function n(){return m.get("user-logged")}function o(){m.get("user-logged").then(function(e){return m.remove(e)})}function a(){return m=new PouchDB("tomamosuna_local_db")}function r(e){var t=new Date,n="report_"+t.getFullYear()+(t.getMonth()+1)+t.getDate()+t.getMilliseconds();return e._id=n,m.put(e)}function i(e){return m.put(e)}function s(){return m.get("categories-list")}function l(e){s().then(function(t){return e._rev=t._rev,m.put(e)})["catch"](function(t){return e._id="categories-list",m.put(e)})}function c(e){return m.get(e)}function u(){return m.allDocs({include_docs:!0,attachments:!1,startkey:"report_",endkey:"report_￿"})}function d(e){m.get(e).then(function(e){return m.remove(e)})}function p(e){return m.remove(e)}var m;return{initDB:a,saveUser:t,getUser:n,eraseUser:o,saveReport:r,getReport:c,getAllReports:u,updateReport:i,deleteReport:d,deleteGivenReport:p,getCategories:s,saveCategories:l}}]),pmb_im.services.factory("ErrorService",["$http","$ionicPopup","ValidationService",function(e,t,n){return{http_response_is_successful:function(e,t){var n=document.getElementById(t);return e.data&&"success"==e.data.Status||"success"==e.Status?(n.style.display="none",!0):(e.data?n.innerHTML="<h3>"+e.data.Message+"</h3>":n.innerHTML="<h3>"+e.Message+"</h3>",n.style.display="block",!1)},http_response_is_successful_ajax:function(e){return 0!=e.data.result},http_response_is_successful_popup:function(e){if(0==e.data.result){var n=t.alert({title:"Error",template:e.data.message});return n.then(function(e){return!1}),!1}return!0},http_data_response_is_successful:function(e,t){var n=document.getElementById(t);return"success"!=e.Status?(n.innerHTML="<h3>"+e.Message+"</h3>",n.style.display="block",!1):(n.style.display="none",!0)},http_data_response_is_successful_ajax:function(e){return 0!=e.result},show_error_message:function(e,t){var n=document.getElementById(e);return n.innerHTML="<h3>"+t+"</h3>",n.style.display="block",!1},show_error_message_popup:function(e){var n=t.alert({title:"Error",template:e});return n.then(function(e){return!1}),!1},check_fields:function(e,t){var o="";if(e.forEach(function(e){"notNull"==e.type&&(n.validate_not_empty(e.value)||(o=o+'<h3>- El campo "'+e.name+'" no puede estar vacío.</h3>')),"email"==e.type&&(n.validate_email(e.value)||(o=o+'<h3>- El campo "'+e.name+'" no es una dirección de correo válida.</h3>')),"iddoc_uy"==e.type&&(n.validate_iddoc_uy(e.value)||(o=o+'<h3>- El campo "'+e.name+'" no es una cédula uruguaya válida.</h3>')),"two_words"==e.type&&(n.validate_two_words(e.value)||(o=o+'<h3>- El campo "'+e.name+'" debe contener al menos dos palabras.</h3>')),"equalsTo"==e.type&&(n.validate_equalsTo(e.value,e.secondValue)||(o=o+'<h3>- Los campos "'+e.name+'" no coinciden.</h3>'))}),""==o)return!0;var a=document.getElementById(t);return a.innerHTML=o,a.style.display="block",!1}}}]),pmb_im.services.factory("Loader",["$ionicLoading","$timeout","$ionicPopup",function(e,t,n){var o={showLoading:function(t){t=t||"Loading...",e.show({template:t})},hideLoading:function(){e.hide()},toggleLoadingWithMessage:function(e,n){var o=this;o.showLoading(e),t(function(){o.hideLoading()},n||3e3)},confirmPopup:function(e,t){var o=n.confirm({title:e,template:t});return o},showAlert:function(e,t){var o=n.alert({title:e,template:t});return o}};return o}]),pmb_im.services.factory("LocationsService",[function(){var e={};return e.initial_lat="",e.initial_lng="",e.last_user_lat="",e.last_user_lng="",e.council_modal=null,e.selected_council=null,e.selectCouncil=function(t){e.selected_council=t},e.save_initial_position=function(t){e.initial_lat=t.coords.latitude,e.initial_lng=t.coords.longitude},e.save_last_user_position=function(t,n){e.last_user_lat=t,e.last_user_lng=n},e.savedLocations=[],e}]),pmb_im.services.factory("MapService",["leafletData","$compile",function(e,t){proj4.defs("EPSG:32721","+proj=utm +zone=21 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs");var n={};return n.goToPlace=function(n,o,a,r){var i={type:"FeatureCollection",crs:{type:"name",properties:{name:"urn:ogc:def:crs:EPSG::32721"}},features:[{type:"Feature",geometry:{type:"Point",coordinates:[o,a]},properties:{nombre:n}}]};e.getMap().then(function(e){var n,o=L.Proj.geoJson(i,{pointToLayer:function(e,o){n=o;var a="<p align='center'>"+e.properties.nombre+" <br/> <a ng-click='new_report_from_latlon("+n.lat+","+n.lng+");'>Iniciar reporte aquí</a></p>",i=t(a)(r);return L.marker(o).bindPopup(i[0])}});o.addTo(e),e.setView(n,18),o.openPopup()})},n.centerMapOnCoords=function(t,n,o){e.getMap().then(function(e){e.setView(new L.LatLng(t,n),o)})},n}]),pmb_im.services.factory("ModalService",[function(){var e={};return e.activeModal=null,e.checkNoModalIsOpen=function(){e.activeModal&&(e.activeModal.hide(),e.activeModal.remove())},e}]),pmb_im.services.factory("PinService",["$http","leafletData","ConfigService",function(e,t,n){function o(e){angular.extend(this,e)}var a=n.baseURL+"/oferta.geojson/-34.828518,-55.951376/MATUTINO",r=n.baseURL+"/api/";return o.getAll=function(){return e.get(a,{cache:!1,params:{hash_id:Math.random()}})},o.sendUserLocation=function(t,n,o,a,i){var s="user="+o+"&password="+a+"&lat="+t+"&lon="+n+"&uid="+i;return e.post(r+"send_user_position",s,{withCredentials:!0,headers:{"Content-Type":"application/x-www-form-urlencoded"}})},o._all=[],o.current={},o.lastPinsResponse=null,o.build=function(e){return new o(e)},o.prototype.setLatLng=function(e){this.lat=e.lat,this.lon=e.lng},o}]),pmb_im.services.factory("PopUpService",["$ionicPopup","ValidationService",function(e,t){return{show_alert:function(t,n){var o=e.alert({title:t,template:n});return o.then(function(e){return!0}),!0},confirmPopup:function(t,n){var o=e.confirm({title:t,template:n});return o},askForOneValuePopUp:function(n,o,a,r,i){$scope=n;var s=e.show({template:r+': <input type="text" id="one_value_popup"><div id="error_container_inside"></div>',title:o,subTitle:a,scope:$scope,buttons:[{text:"Cancelar"},{text:"<b>Enviar</b>",type:"button-positive",onTap:function(e){var n="",o=document.getElementById("one_value_popup").value;if("notNull"==i&&(t.validate_not_empty(o)||(n=n+'<h3>- El campo "'+r+'" no puede estar vacío.</h3>')),"email"==i&&(t.validate_email(o)||(n=n+'<h3>- El campo "'+r+'" no es una dirección de correo válida.</h3>')),"iddoc_uy"==i&&(t.validate_iddoc_uy(o)||(n=n+'<h3>- El campo "'+r+'" no es una cédula uruguaya válida.</h3>')),"two_words"==i&&(t.validate_two_words(o)||(n=n+'<h3>- El campo "'+r+'" debe contener al menos dos palabras.</h3>')),""==n)return o;var a=document.getElementById("error_container_inside");a.innerHTML=n,a.style.display="block",e.preventDefault()}}]});return s}}}]),pmb_im.services.factory("SemaphoreService",[function(){var e={};return e.semaphores=new Array,e.semaphores["open-modal"]="available",e.semaphores["submit-form"]="available",e.semaphores["submit-location"]="available",e.semaphores.can_talk="available",
e.takeIfAvailable=function(t){return"available"==e.semaphores[t]&&(e.semaphores[t]="occupied",!0)},e.makeAvailableAgain=function(t){return"occupied"==e.semaphores[t]&&(e.semaphores[t]="available",!0)},e}]),pmb_im.services.factory("locationAPI",["$http","$q","ApiImEndpoint","ApiDataEndpoint","ConfigService","LocationsService",function(e,t,n,o,a,r){var i="ubicacionesRestProd",s={};return s.searchLocationByStr=function(t){var n=a.baseURL+"/ajax/geocode?term="+r.selected_council+","+t;return e.get(n,{method:"GET",params:{}})},s.searchEsquinaByStr=function(t){var n=a.baseURL+"/ajax/geocode?term="+r.selected_council+","+t.calle+","+t.esquina;return e.get(n,{method:"GET",params:{}})},s.getLocationGeom=function(t){for(var o=n.url+"/"+i+s.getParamPathByTipo(t.tipo),a=0;a<t.pathParams.length;a++)o+="/"+t.pathParams[a];return e.get(baseURL).then(function(e){return e.data})},s.getLocationGeomPMB=function(t,n,o){var i=a.baseURL+"/ajax/geocode?term="+r.selected_council+","+t+","+n+","+o;return e.get(i)},s.getParamPathByTipo=function(e){var t={ESQUINA:"/esquina",DIRECCION:"/direccion"};return t[e]},s}]),pmb_im.services.factory("_",[function(){return window._}]),pmb_im.services.factory("UserService",["$http",function(e){var t={};return t.uid=null,t.name=null,t.email=null,t.password=null,t.picture_url="url(./img/icon-user-anonymous.png)",t.show_location=null,t.save_user_data=function(e,n,o,a,r,i,s,l){t.uid=r,t.name=e,t.password=n,t.picture_url=o,t.show_location=a,t.status=i,t.gender=s,t.interested=l},t.erase_user_data=function(){t.name=null,t.email=null,t.password=null,t.identity_document=null,t.phone=null,t.picture_url=null},t.get_user_data=function(){},t.add_photo=function(e){t.picture_url=e},t.isLogged=function(){return null!=t.name&&""!=t.name},t}]),pmb_im.services.factory("ValidationService",["$http","$ionicPopup",function(e,t){return{isMobileDevice:function(){return!!window.cordova},validate_not_empty:function(e){return null!=e&&"undefined"!=e&&""!=e},validate_two_words:function(e){if(null!=e&&"undefined"!=e&&""!=e){var t=e.split(" ").filter(function(e){return""!==e});return t.length>1}return!1},validate_equalsTo:function(e,t){return e==t},validate_email:function(e){if(null!=e&&"undefined"!=e&&""!=e){var t=/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;return t.test(e)}return!1},validate_iddoc_uy:function(e){if(null!=e&&"undefined"!=e&&""!=e){e=e.replace(/\D/g,"");var t=e[e.length-1],n=0,o=0;if(e.length<=6)for(o=e.length;o<7;o++)e="0"+e;for(o=0;o<7;o++)n+=parseInt("2987634"[o])*parseInt(e[o])%10;var a;return a=n%10===0?0:10-n%10,t==a}return!1}}}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyIsImNvbnRyb2xsZXJzL2Ficy5jdHJsLmpzIiwiY29udHJvbGxlcnMvZm9ybS5jcnRsLmpzIiwiY29udHJvbGxlcnMvaW50cm8uY3RybC5qcyIsImNvbnRyb2xsZXJzL21hcC5jdHJsLmpzIiwic2VydmljZXMvYXV0aC5zZXJ2aWNlcy5qcyIsInNlcnZpY2VzL2NvbmZpZy5zZXJ2aWNlcy5qcyIsInNlcnZpY2VzL2Nvbm5lY3Rpdml0eS5zZXJ2aWNlcy5qcyIsInNlcnZpY2VzL2RiLnNlcnZpY2VzLmpzIiwic2VydmljZXMvZXJyb3Iuc2VydmljZXMuanMiLCJzZXJ2aWNlcy9sb2FkZXIuc2VydmljZXMuanMiLCJzZXJ2aWNlcy9sb2NhdGlvbnNTZXJ2aWNlLmpzIiwic2VydmljZXMvbWFwLnNlcnZpY2VzLmpzIiwic2VydmljZXMvbW9kYWxTZXJ2aWNlLmpzIiwic2VydmljZXMvcGluLnNlcnZpY2UuanMiLCJzZXJ2aWNlcy9wb3B1cC5zZXJ2aWNlcy5qcyIsInNlcnZpY2VzL3NlbWFwaG9yZS5zZXJ2aWNlLmpzIiwic2VydmljZXMvdWJpY2FjaW9uZXMuc2VydmljZXMuanMiLCJzZXJ2aWNlcy91bmRlcnNjb3JlLnNlcnZpY2UuanMiLCJzZXJ2aWNlcy91c2VyLnNlcnZpY2VzLmpzIiwic2VydmljZXMvdmFsaWRhdGlvbi5zZXJ2aWNlcy5qcyJdLCJuYW1lcyI6WyJwbWJfaW0iLCJjb250cm9sbGVycyIsImFuZ3VsYXIiLCJtb2R1bGUiLCJzZXJ2aWNlcyIsImFwcCIsImNvbnN0YW50IiwidXJsIiwicnVuIiwiJGlvbmljUGxhdGZvcm0iLCIkcm9vdFNjb3BlIiwiJGNvcmRvdmFLZXlib2FyZCIsIlZFUlNJT04iLCJ3aW5kb3ciLCJyZWFkeSIsImNvcmRvdmEiLCJwbHVnaW5zIiwiS2V5Ym9hcmQiLCJoaWRlS2V5Ym9hcmRBY2Nlc3NvcnlCYXIiLCJkaXNhYmxlU2Nyb2xsIiwiaW9uaWMiLCJQbGF0Zm9ybSIsImlzRnVsbFNjcmVlbiIsIlN0YXR1c0JhciIsInN0eWxlRGVmYXVsdCIsImNvbmZpZyIsIiRzdGF0ZVByb3ZpZGVyIiwiJHVybFJvdXRlclByb3ZpZGVyIiwiJGNvbXBpbGVQcm92aWRlciIsIiRpb25pY0NvbmZpZ1Byb3ZpZGVyIiwiZGVidWdJbmZvRW5hYmxlZCIsInN0YXRlIiwiY2FjaGUiLCJhYnN0cmFjdCIsInRlbXBsYXRlVXJsIiwiY29udHJvbGxlciIsInZpZXdzIiwibWVudUNvbnRlbnQiLCJvdGhlcndpc2UiLCIkc2NvcGUiLCIkc3RhdGUiLCIkY29yZG92YUdlb2xvY2F0aW9uIiwiJHN0YXRlUGFyYW1zIiwiJGlvbmljUG9wdXAiLCJMb2NhdGlvbnNTZXJ2aWNlIiwiREJTZXJ2aWNlIiwiJGlvbmljU2xpZGVCb3hEZWxlZ2F0ZSIsIiRpb25pY1Njcm9sbERlbGVnYXRlIiwiZm9ybSIsImVkYWQiLCJ1bHRpbW9fbml2ZWxfYXByb2JhZG8iLCJ1bHRpbW9fYW5pb19hcHJvYmFkbyIsInBsYW4iLCJsdWdhciIsInR1cm5vIiwicmVzdGFyRWRhZCIsInN1bWFyRWRhZCIsInNlbGVjdFVsdGltb05pdmVsIiwiaWROaXZlbCIsImkiLCJ4IiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50c0J5Q2xhc3NOYW1lIiwibGVuZ3RoIiwiY2xhc3NOYW1lIiwiaWQiLCJzZWxlY3RlZCIsImdldEVsZW1lbnRCeUlkIiwibmV4dCIsInByZXZpb3VzIiwiZ29fdG9fbWFwIiwiZ28iLCJkYiIsImluaXREQiIsImluZm8iLCJ0aGVuIiwiY29uc29sZSIsImxvZyIsImJpbmQiLCJnZW9sb2NhdGUiLCJwb3NPcHRpb25zIiwidGltZW91dCIsImVuYWJsZUhpZ2hBY2N1cmFjeSIsImdldEN1cnJlbnRQb3NpdGlvbiIsInBvc2l0aW9uIiwic2F2ZV9pbml0aWFsX3Bvc2l0aW9uIiwiZXJyIiwiZ29fdG9fZm9ybSIsIl8iLCIkY29yZG92YUNhbWVyYSIsIiRjb21waWxlIiwiJGlvbmljTW9kYWwiLCJsZWFmbGV0RGF0YSIsIkNvbmZpZ1NlcnZpY2UiLCJQaW5TZXJ2aWNlIiwiQXV0aFNlcnZpY2UiLCJVc2VyU2VydmljZSIsIiR0aW1lb3V0IiwiJGludGVydmFsIiwiJGxvY2F0aW9uIiwiRXJyb3JTZXJ2aWNlIiwiUG9wVXBTZXJ2aWNlIiwiQ29ubmVjdGl2aXR5U2VydmljZSIsIiRjb3Jkb3ZhSW5BcHBCcm93c2VyIiwiTWFwU2VydmljZSIsIk1vZGFsU2VydmljZSIsIlNlbWFwaG9yZVNlcnZpY2UiLCJWYWxpZGF0aW9uU2VydmljZSIsIm9ubGluZV91c2VyX2dlbyIsIm9ubGluZV91c2VyX2dlb19hcnJheSIsIkFycmF5IiwiYmFzZVVSTCIsIkFwcE5hbWUiLCJ1c2VyX2NhY2hlZF9pbWFnZSIsIm9uZV92YWx1ZV9wb3B1cCIsIm15SW50ZXJ2YWxzIiwiJG9uIiwiY2hlY2tOb01vZGFsSXNPcGVuIiwiaXNPbmxpbmUiLCJjaGVja191c2VyX2xvZ2dlZCIsInNldF9vZmZsaW5lX3VzZXIiLCJzdHlsZSIsImRpc3BsYXkiLCJjcmVhdGVfb25saW5lX21hcCIsImdldE1hcCIsImluaXRpYWxfbGF0IiwiY2VudGVyTWFwT25Db29yZHMiLCJpbml0aWFsX2xuZyIsIm9wZW5XZWJzaXRlIiwib3B0aW9ucyIsImxvY2F0aW9uIiwiY2xlYXJjYWNoZSIsInRvb2xiYXIiLCJvcGVuIiwiZXZlbnQiLCJtYXAiLCJkZWZhdWx0cyIsInRpbGVMYXllciIsIm1pblpvb20iLCJtYXhab29tIiwiem9vbUNvbnRyb2xQb3NpdGlvbiIsIm1hcmtlcnMiLCJldmVudHMiLCJlbmFibGUiLCJsb2dpYyIsImNlbnRlciIsImxvYWRQaW5zTGF5ZXIiLCJsYXQiLCJsbmciLCJ6b29tIiwib24iLCJoaWRlT2ZmU2NyZWVuUGlucyIsImJhY2tfdG9fbWFwIiwiaW1hZ2UiLCJhZGRJbWFnZSIsImlzRnJvbUFsYnVtIiwiaXNVc2VyUGhvdG8iLCJpc0NvbW1lbnRQaG90byIsImlzTmV3VXNlclBob3RvIiwic291cmNlIiwiQ2FtZXJhIiwiUGljdHVyZVNvdXJjZVR5cGUiLCJDQU1FUkEiLCJmaXhfb3JpZW50YXRpb24iLCJzYXZlX3RvX2dhbGxlcnkiLCJQSE9UT0xJQlJBUlkiLCJxdWFsaXR5IiwiZGVzdGluYXRpb25UeXBlIiwiRGVzdGluYXRpb25UeXBlIiwiRklMRV9VUkkiLCJzb3VyY2VUeXBlIiwiYWxsb3dFZGl0IiwiY29ycmVjdE9yaWVudGF0aW9uIiwiZW5jb2RpbmdUeXBlIiwiRW5jb2RpbmdUeXBlIiwiSlBFRyIsInBvcG92ZXJPcHRpb25zIiwiQ2FtZXJhUG9wb3Zlck9wdGlvbnMiLCJzYXZlVG9QaG90b0FsYnVtIiwidGFyZ2V0V2lkdGgiLCJ0YXJnZXRIZWlnaHQiLCJnZXRQaWN0dXJlIiwiaW1hZ2VEYXRhIiwib25JbWFnZVN1Y2Nlc3MiLCJmaWxlVVJJIiwiRmlsZVBhdGgiLCJyZXNvbHZlTmF0aXZlUGF0aCIsInJlc3VsdCIsInN0YXJ0c1dpdGgiLCJwcm9maWxlIiwicGljdHVyZV91cmwiLCJjb21tZW50IiwiZmlsZSIsIm5ld3VzZXIiLCJpbWdVUkkiLCJlcnJvciIsImFsZXJ0IiwidXJsRm9ySW1hZ2UiLCJpbWFnZVVSTCIsIm5hbWUiLCJzdWJzdHIiLCJsYXN0SW5kZXhPZiIsImRhdGFEaXJlY3RvcnkiLCJzY3JvbGxNZSIsImFuY2hvcl9pZCIsImhhc2giLCJoYW5kbGUiLCIkZ2V0QnlIYW5kbGUiLCJhbmNob3JTY3JvbGwiLCJzZXRfYWN0aXZlX29wdGlvbiIsImJ1dHRvbmlkIiwiaGlkZV9zcGVjaWFsX2RpdnMiLCJjbG9zZV9yZXBvcnRfZGV0YWlsX21vZGFsIiwicmVwb3J0X2RldGFpbF9pZCIsImxvY2F0ZSIsImNvb3JkcyIsImxhdGl0dWRlIiwibG9uZ2l0dWRlIiwibm93IiwibWVzc2FnZSIsImZvY3VzIiwiZHJhZ2dhYmxlIiwiYWRkTWFwQ29udHJvbHMiLCJjaGFuZ2VVc2VyTG9jYXRpb25QaW4iLCJsb24iLCJ1aWQiLCJsYXllciIsIm5ld0xhdExuZyIsIkwiLCJMYXRMbmciLCJzZXRMYXRMbmciLCJtYXBCb3VuZHMiLCJnZXRCb3VuZHMiLCJ1c2Vyc1Zpc2libGUiLCJmb3JFYWNoIiwia2V5Iiwic2hvdWxkQmVWaXNpYmxlIiwiY29udGFpbnMiLCJnZXRMYXRMbmciLCJhZGRMYXllciIsInB1c2giLCJmZWF0dXJlIiwicmVtb3ZlTGF5ZXIiLCJ0aW1lQ29udmVydGVyIiwiVU5JWF90aW1lc3RhbXAiLCJhIiwiRGF0ZSIsInllYXIiLCJnZXRGdWxsWWVhciIsIm1vbnRoIiwiZ2V0TW9udGgiLCJkYXkiLCJnZXREYXRlIiwiaG91ciIsImdldEhvdXJzIiwibWluIiwiZ2V0TWludXRlcyIsInRpbWUiLCJnZXRTZWNvbmRzIiwibW9kZWwiLCJleHRlcm5hbE1vZGVsIiwic2VsZWN0ZWRJdGVtcyIsInByZXNlbGVjdGVkU2VhcmNoSXRlbXMiLCJjbGlja2VkVmFsdWVNb2RlbCIsInJlbW92ZWRWYWx1ZU1vZGVsIiwiaXRlbXNSZW1vdmVkIiwiY2FsbGJhY2siLCJ1c2VyX29wdGlvbnMiLCJtZW51Iiwic2hvd19hbm9ueW1vdXNfbWVudSIsInNob3dfdXNlcl9tZW51IiwiaHRtbCIsImlubmVySFRNTCIsImhlaWdodCIsIndpZHRoIiwiY3JlYXRlX2ZpZWxkX2FycmF5IiwidHlwZSIsInZhbHVlIiwiZmllbGQiLCJjcmVhdGVfZmllbGRfYXJyYXlfd2l0aF90d29GaWVsZHMiLCJzZWNvbmRWYWx1ZSIsImZpeF9mYl9pbWFnZV9saW5rIiwiaW5kZXhPZiIsInBhcnRzIiwic3BsaXQiLCJuZXdVcmwiLCJsb2dfaW4iLCJ1c2VyIiwicGFzc3dvcmQiLCJ0YWtlSWZBdmFpbGFibGUiLCJmaWVsZHMiLCJjaGVja19maWVsZHMiLCJyZXNwIiwiaHR0cF9yZXNwb25zZV9pc19zdWNjZXNzZnVsIiwicGhvdG8iLCJnZXRPYmplY3REYXRhRnJvbVJlc3BvbnNlIiwiUGhvdG8iLCJzYXZlX3VzZXJfZGF0YSIsIk5hbWUiLCJub25hdXRoIiwiU2hvd0xvY2F0aW9uIiwiVWlkIiwiRXN0YWRvIiwiR2VuZGVyIiwiSW50ZXJlc3RlZEluIiwic2F2ZVVzZXIiLCJzZXRfdXNlcl9waWN0dXJlIiwibWFrZUF2YWlsYWJsZUFnYWluIiwiY2xvc2VfbG9naW5fbW9kYWwiLCJzaG93X2Vycm9yX21lc3NhZ2UiLCJzdGF0dXNUZXh0Iiwic2hvd19hbGVydCIsImxvZ19pbl9iYWNrZ3JvdW5kIiwiaHR0cF9yZXNwb25zZV9pc19zdWNjZXNzZnVsX2FqYXgiLCJzaWduX291dCIsImVyYXNlX3VzZXJfZGF0YSIsImVyYXNlVXNlciIsInNob3dfZWRpdF9wcm9maWxlX21vZGFsIiwiZW1haWwiLCJnZW5kZXIiLCJ1c2VybmFtZSIsImludGVyZXN0ZWQiLCJzdGF0dXMiLCJzaG93X2xvY2F0aW9uIiwiYWN0dWFsX3Bob3RvIiwiaXNNb2JpbGVEZXZpY2UiLCJmcm9tVGVtcGxhdGVVcmwiLCJzY29wZSIsImhhcmR3YXJlQmFja0J1dHRvbkNsb3NlIiwiYW5pbWF0aW9uIiwibW9kYWwiLCJhY3RpdmVNb2RhbCIsInNob3ciLCJyZWFkVVJMIiwiaW5wdXQiLCJmaWxlcyIsInJlcG9ydCIsInJlYWRlciIsIkZpbGVSZWFkZXIiLCJvbmxvYWQiLCJlIiwic3JjIiwidGFyZ2V0IiwicmVhZEFzRGF0YVVSTCIsImNsb3NlX2VkaXRfcHJvZmlsZV9tb2RhbCIsImVkaXRfcHJvZmlsZV9vayIsImVkaXRfcHJvZmlsZSIsInJlc3BvbnNlIiwiZGF0YSIsImVkaXRfcmVxdWVzdCIsImVkaXRfdXNlciIsIkpTT04iLCJwYXJzZSIsImh0dHBfZGF0YV9yZXNwb25zZV9pc19zdWNjZXNzZnVsIiwiY29kZSIsImh0dHBfc3RhdHVzIiwiYm9keSIsImV4Y2VwdGlvbiIsInByb2dyZXNzIiwidXBsb2FkUHJvZ3Jlc3MiLCJsb2FkZWQiLCJ0b3RhbCIsIk1hdGgiLCJyb3VuZCIsInN1Y2Nlc3MiLCJoZWFkZXJzIiwic2hvd19sb2dpbl9tb2RhbCIsImxvZ2luX29rIiwic2hvd19zaWduX3VwX21vZGFsIiwiZnVsbG5hbWUiLCJpZF9kb2MiLCJ0ZWxlcGhvbmUiLCJjbG9zZV9zaWduX3VwX21vZGFsIiwic2lnbl91cCIsImNyZWF0ZV91c2VyIiwiaWRlbnRpdHlfZG9jdW1lbnQiLCJwaG9uZSIsImFsZXJ0UG9wdXAiLCJ0aXRsZSIsInRlbXBsYXRlIiwicmVzIiwic2lnbl91cF9vayIsImdldFVzZXIiLCJkb2MiLCJoYXNQaG90byIsImZpbmRfbWUiLCJzYXZlX25ld19yZXBvcnRfcG9zaXRpb24iLCJnZXRNZXNzYWdlU2NvcGUiLCJvcGVuQ291bmNpbFNlbGVjdG9yIiwiZmFjdG9yeSIsIiRodHRwIiwiJGNvcmRvdmFGaWxlVHJhbnNmZXIiLCJwb3N0Iiwid2l0aENyZWRlbnRpYWxzIiwiQ29udGVudC1UeXBlIiwiZ2V0IiwicGFyYW1zIiwicGFzc3dvcmRfc2lnbl9pbiIsInVzZXJPYmoiLCJmaWxlS2V5IiwidHJ1c3RBbGxIb3N0cyIsInVwbG9hZCIsImZvcm1EYXRhIiwiRm9ybURhdGEiLCJhcHBlbmQiLCJ1bmRlZmluZWQiLCJ0cmFuc2Zvcm1SZXF1ZXN0IiwiaWRlbnRpdHkiLCJwYXNzd29yZF9yZWNvdmVyeSIsImxvZ2luX2VtYWlsIiwicGFzc3dvcmRfY2hhbmdlIiwib2xkUGFzc3dvcmQiLCJuZXdQYXNzd29yZCIsImNvbmZpcm1QYXNzd29yZCIsIkNvbmZpZ09iaiIsImlzV2ViVmlldyIsIiRjb3Jkb3ZhTmV0d29yayIsImlzT2ZmbGluZSIsIiRxIiwidXNlcl9uYW1lIiwidXNlcl9wYXNzd29yZCIsInVzZXJfcGljdHVyZV91cmwiLCJfaWQiLCJfcmV2IiwiX2RiIiwicHV0IiwicmVtb3ZlIiwiUG91Y2hEQiIsInNhdmVSZXBvcnQiLCJkYXRlIiwibmV3X3JlcG9ydF9pZCIsImdldE1pbGxpc2Vjb25kcyIsInVwZGF0ZVJlcG9ydCIsImdldENhdGVnb3JpZXMiLCJzYXZlQ2F0ZWdvcmllcyIsImNhdGVnb3JpZXMiLCJnZXRSZXBvcnQiLCJyZXBvcnRJZCIsImdldEFsbFJlcG9ydHMiLCJhbGxEb2NzIiwiaW5jbHVkZV9kb2NzIiwiYXR0YWNobWVudHMiLCJzdGFydGtleSIsImVuZGtleSIsImRlbGV0ZVJlcG9ydCIsInJlcG9ydF9pZCIsImRlbGV0ZUdpdmVuUmVwb3J0IiwianNvblJlc3VsdCIsImVycm9yQ29udGFpbmVySWQiLCJlcnJvckRpdiIsIlN0YXR1cyIsIk1lc3NhZ2UiLCJodHRwX3Jlc3BvbnNlX2lzX3N1Y2Nlc3NmdWxfcG9wdXAiLCJodHRwX2RhdGFfcmVzcG9uc2VfaXNfc3VjY2Vzc2Z1bF9hamF4Iiwic2hvd19lcnJvcl9tZXNzYWdlX3BvcHVwIiwiZXJyb3JzIiwidmFsaWRhdGVfbm90X2VtcHR5IiwidmFsaWRhdGVfZW1haWwiLCJ2YWxpZGF0ZV9pZGRvY191eSIsInZhbGlkYXRlX3R3b193b3JkcyIsInZhbGlkYXRlX2VxdWFsc1RvIiwiJGlvbmljTG9hZGluZyIsIkxPQURFUkFQSSIsInNob3dMb2FkaW5nIiwidGV4dCIsImhpZGVMb2FkaW5nIiwiaGlkZSIsInRvZ2dsZUxvYWRpbmdXaXRoTWVzc2FnZSIsInNlbGYiLCJ0aGlzIiwiY29uZmlybVBvcHVwIiwiY29uZmlybSIsInNob3dBbGVydCIsIl90aXRsZSIsIl90ZW1wbGF0ZSIsImxvY2F0aW9uc09iaiIsImxhc3RfdXNlcl9sYXQiLCJsYXN0X3VzZXJfbG5nIiwiY291bmNpbF9tb2RhbCIsInNlbGVjdGVkX2NvdW5jaWwiLCJzZWxlY3RDb3VuY2lsIiwiY291bmNpbE5hbWUiLCJzYXZlX2xhc3RfdXNlcl9wb3NpdGlvbiIsInNhdmVkTG9jYXRpb25zIiwicHJvajQiLCJkZWZzIiwibWFwU2VydmljZSIsImdvVG9QbGFjZSIsIl9nZW9Kc29uIiwiY3JzIiwicHJvcGVydGllcyIsImZlYXR1cmVzIiwiZ2VvbWV0cnkiLCJjb29yZGluYXRlcyIsIm5vbWJyZSIsIl9sYXRsbmciLCJQcm9qIiwiZ2VvSnNvbiIsInBvaW50VG9MYXllciIsImxhdGxuZyIsImh0bWxQb3BVcCIsImNvbXBpbGVkIiwibWFya2VyIiwiYmluZFBvcHVwIiwiYWRkVG8iLCJzZXRWaWV3Iiwib3BlblBvcHVwIiwibW9kYWxPQkoiLCJQaW4iLCJfZGF0YSIsImV4dGVuZCIsInBpbnNVUkwiLCJhcGlVUkwiLCJnZXRBbGwiLCJoYXNoX2lkIiwicmFuZG9tIiwic2VuZFVzZXJMb2NhdGlvbiIsIl9hbGwiLCJjdXJyZW50IiwibGFzdFBpbnNSZXNwb25zZSIsImJ1aWxkIiwicHJvdG90eXBlIiwiYWxlcnRfdGl0bGUiLCJhbGVydF9tZXNzYWdlIiwiYXNrRm9yT25lVmFsdWVQb3BVcCIsImZpZWxkX25hbWUiLCJ2YWxpZGF0aW9uVHlwZSIsIm15UG9wdXAiLCJzdWJUaXRsZSIsImJ1dHRvbnMiLCJvblRhcCIsInByZXZlbnREZWZhdWx0Iiwic2VtYXBob3JlT2JqIiwic2VtYXBob3JlcyIsInNlbWFwaG9yZUlkIiwiQXBpSW1FbmRwb2ludCIsIkFwaURhdGFFbmRwb2ludCIsInJlc3RQcmVmZml4IiwibG9jYXRpb25BUEkiLCJzZWFyY2hMb2NhdGlvbkJ5U3RyIiwiX2xvY2F0aW9uIiwibWV0aG9kIiwic2VhcmNoRXNxdWluYUJ5U3RyIiwiY2FsbGUiLCJlc3F1aW5hIiwiZ2V0TG9jYXRpb25HZW9tIiwiZ2V0UGFyYW1QYXRoQnlUaXBvIiwidGlwbyIsInBhdGhQYXJhbXMiLCJnZXRMb2NhdGlvbkdlb21QTUIiLCJlc3F1aW5hX251bWVybyIsIl90aXBvIiwicmVzdEdlb0RhdGFTZXJ2aWNlUGF0aCIsIkVTUVVJTkEiLCJESVJFQ0NJT04iLCJVc2VyT2JqIiwiZ2V0X3VzZXJfZGF0YSIsImFkZF9waG90byIsImlzTG9nZ2VkIiwidmFsdWVzIiwiZmlsdGVyIiwidiIsInJlIiwidGVzdCIsInJlcGxhY2UiLCJkaWciLCJwYXJzZUludCJdLCJtYXBwaW5ncyI6IkFBT0EsR0FBSUEsU0FDRkMsWUFBYUMsUUFBUUMsT0FBTyx5QkFDNUJDLFNBQVVGLFFBQVFDLE9BQU8sc0JBRzNCSCxRQUFPSyxJQUFNSCxRQUFRQyxPQUFPLFVBQVcsUUFBUSxlQUFlLG1CQUFtQixvQkFBcUIscUJBQXNCLGtCQUFtQixjQUU5SUcsU0FBUyxpQkFDUkMsSUFBSyxpQ0FHTkQs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TUFBUEEsR0FBc0IsYUFBUEEsR0FBNkIsSUFBUEEsRUFBVSxDQUNoRCxHQUFJMFIsR0FBUzFSLEVBQU1PLE1BQU0sS0FBS29SLE9BQU8sU0FBU0MsR0FBRyxNQUFXLEtBQUpBLEdBQ3hELE9BQUlGLEdBQU9oZixPQUFTLEVBUXBCLE9BQU8sR0FJYjZZLGtCQUFtQixTQUFVdkwsRUFBTUcsR0FDakMsTUFBR0gsSUFBT0csR0FPWmlMLGVBQWdCLFNBQVVwTCxHQUN0QixHQUFVLE1BQVBBLEdBQXNCLGFBQVBBLEdBQTZCLElBQVBBLEVBQVUsQ0FDaEQsR0FBSTZSLEdBQUssd0pBQ1QsT0FBT0EsR0FBR0MsS0FBSzlSLEdBRWYsT0FBTyxHQUlicUwsa0JBQW1CLFNBQVVyTCxHQUMzQixHQUFVLE1BQVBBLEdBQXNCLGFBQVBBLEdBQTZCLElBQVBBLEVBQVUsQ0FDOUNBLEVBQVFBLEVBQU0rUixRQUFRLE1BQU8sR0FDN0IsSUFBSUMsR0FBTWhTLEVBQU1BLEVBQU10TixPQUFTLEdBQzNCc0wsRUFBSSxFQUFPMUwsRUFBSSxDQUNuQixJQUFHME4sRUFBTXROLFFBQVUsRUFDakIsSUFBSUosRUFBSTBOLEVBQU10TixPQUFRSixFQUFJLEVBQUdBLElBQzNCME4sRUFBUSxJQUFNQSxDQUdsQixLQUFJMU4sRUFBSSxFQUFHQSxFQUFJLEVBQUdBLElBQ2hCMEwsR0FBTWlVLFNBQVMsVUFBVTNmLElBQU0yZixTQUFTalMsRUFBTTFOLElBQU8sRUFFdkQsSUFBSWdJLEVBTUosT0FKRUEsR0FEQzBELEVBQUUsS0FBTyxFQUNELEVBRUEsR0FBS0EsRUFBSSxHQUVqQmdVLEdBQU8xWCxFQU1aLE9BQU8iLCJmaWxlIjoiYXBwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gSW9uaWMgU3RhcnRlciBBcHBcblxuLy8gYW5ndWxhci5tb2R1bGUgaXMgYSBnbG9iYWwgcGxhY2UgZm9yIGNyZWF0aW5nLCByZWdpc3RlcmluZyBhbmQgcmV0cmlldmluZyBBbmd1bGFyIG1vZHVsZXNcbi8vICdwbWJfaW0nIGlzIHRoZSBuYW1lIG9mIHRoaXMgYW5ndWxhciBtb2R1bGUgZXhhbXBsZSAoYWxzbyBzZXQgaW4gYSA8Ym9keT4gYXR0cmlidXRlIGluIGluZGV4Lmh0bWwpXG4vLyB0aGUgMm5kIHBhcmFtZXRlciBpcyBhbiBhcnJheSBvZiAncmVxdWlyZXMnXG4vLyAnc3RhcnRlci5zZXJ2aWNlcycgaXMgZm91bmQgaW4gc2VydmljZXMuanNcbi8vICdzdGFydGVyLmNvbnRyb2xsZXJzJyBpcyBmb3VuZCBpbiBjb250cm9sbGVycy5qc1xudmFyIHBtYl9pbSA9IHtcbiAgY29udHJvbGxlcnM6IGFuZ3VsYXIubW9kdWxlKCdwbWJfaW0uY29udHJvbGxlcnMnLCBbXSksXG4gIHNlcnZpY2VzOiBhbmd1bGFyLm1vZHVsZSgncG1iX2ltLnNlcnZpY2VzJywgW10pXG59O1xuXG5wbWJfaW0uYXBwID0gYW5ndWxhci5tb2R1bGUoJ3BtYl9pbScsIFsnaW9uaWMnLCdpb25pYy53aXphcmQnLCdpb24tYXV0b2NvbXBsZXRlJywnbGVhZmxldC1kaXJlY3RpdmUnLCAncG1iX2ltLmNvbnRyb2xsZXJzJywgJ3BtYl9pbS5zZXJ2aWNlcycsICduZ0NvcmRvdmEnXSlcblxuLmNvbnN0YW50KCdBcGlJbUVuZHBvaW50Jywge1xuICB1cmw6ICdodHRwOi8vd3d3Lm1vbnRldmlkZW8uZ3ViLnV5J1xufSlcblxuLmNvbnN0YW50KCdBcGlEYXRhRW5kcG9pbnQnLCB7XG4gIHVybDogJ2h0dHA6Ly9iYWNrZW5kLmVkdWNhY2lvbi50aG9yLmRhdGF1eS5vcmcnXG59KVxuXG5cbi5ydW4oZnVuY3Rpb24oJGlvbmljUGxhdGZvcm0sICRyb290U2NvcGUsICRjb3Jkb3ZhS2V5Ym9hcmQpIHtcbiAgJHJvb3RTY29wZS5WRVJTSU9OID0gd2luZG93LlZFUlNJT047XG4gICRpb25pY1BsYXRmb3JtLnJlYWR5KGZ1bmN0aW9uKCkge1xuICAgIC8vIEhpZGUgdGhlIGFjY2Vzc29yeSBiYXIgYnkgZGVmYXVsdCAocmVtb3ZlIHRoaXMgdG8gc2hvdyB0aGUgYWNjZXNzb3J5IGJhciBhYm92ZSB0aGUga2V5Ym9hcmRcbiAgICAvLyBmb3IgZm9ybSBpbnB1dHMpXG4gICAgaWYgKHdpbmRvdy5jb3Jkb3ZhICYmIHdpbmRvdy5jb3Jkb3ZhLnBsdWdpbnMuS2V5Ym9hcmQpIHtcbiAgICAgIGNvcmRvdmEucGx1Z2lucy5LZXlib2FyZC5oaWRlS2V5Ym9hcmRBY2Nlc3NvcnlCYXIoZmFsc2UpO1xuICAgICAgY29yZG92YS5wbHVnaW5zLktleWJvYXJkLmRpc2FibGVTY3JvbGwoZmFsc2UpO1xuICAgIH1cbiAgICAvLyRjb3Jkb3ZhS2V5Ym9hcmQuaGlkZUFjY2Vzc29yeUJhcihmYWxzZSlcbiAgICAvLyRjb3Jkb3ZhS2V5Ym9hcmQuZGlzYWJsZVNjcm9sbChmYWxzZSlcbiAgICBpb25pYy5QbGF0Zm9ybS5pc0Z1bGxTY3JlZW4gPSB0cnVlO1xuICAgIGlmICh3aW5kb3cuU3RhdHVzQmFyKSB7XG4gICAgICAvLyBvcmcuYXBhY2hlLmNvcmRvdmEuc3RhdHVzYmFyIHJlcXVpcmVkXG4gICAgICBTdGF0dXNCYXIuc3R5bGVEZWZhdWx0KCk7XG4gICAgfVxuICB9KTtcbn0pXG5cbi5jb25maWcoZnVuY3Rpb24oJHN0YXRlUHJvdmlkZXIsICR1cmxSb3V0ZXJQcm92aWRlciwgJGNvbXBpbGVQcm92aWRlciwgJGlvbmljQ29uZmlnUHJvdmlkZXIpIHtcbiAgJGNvbXBpbGVQcm92aWRlci5kZWJ1Z0luZm9FbmFibGVkKGZhbHNlKTtcbiAgLy8kaW9uaWNDb25maWdQcm92aWRlci5zY3JvbGxpbmcuanNTY3JvbGxpbmcodHJ1ZSk7XG5cbiAgLy8gSW9uaWMgdXNlcyBBbmd1bGFyVUkgUm91dGVyIHdoaWNoIHVzZXMgdGhlIGNvbmNlcHQgb2Ygc3RhdGVzXG4gIC8vIExlYXJuIG1vcmUgaGVyZTogaHR0cHM6Ly9naXRodWIuY29tL2FuZ3VsYXItdWkvdWktcm91dGVyXG4gIC8vIFNldCB1cCB0aGUgdmFyaW91cyBzdGF0ZXMgd2hpY2ggdGhlIGFwcCBjYW4gYmUgaW4uXG4gIC8vIEVhY2ggc3RhdGUncyBjb250cm9sbGVyIGNhbiBiZSBmb3VuZCBpbiBjb250cm9sbGVycy5qc1xuICAkc3RhdGVQcm92aWRlclxuXG4uc3RhdGUoJ2FwcCcsIHtcbiAgICBjYWNoZTogZmFsc2UsXG4gICAgdXJsOiBcIi9hcHBcIixcbiAgICBhYnN0cmFjdDogdHJ1ZSxcbiAgICB0ZW1wbGF0ZVVybDogXCJ0ZW1wbGF0ZXMvbWVudS5odG1sXCIsXG4gICAgY29udHJvbGxlcjogJ0Fic0NvbnRyb2xsZXInXG4gIH0pXG5cbi5zdGF0ZSgnYXBwLm1hcCcsIHtcbiAgICBjYWNoZTogZmFsc2UsXG4gICAgdXJsOiBcIi9tYXBcIixcbiAgICB2aWV3czoge1xuICAgICAgJ21lbnVDb250ZW50JyA6e1xuICAgICAgICB0ZW1wbGF0ZVVybDogXCJ0ZW1wbGF0ZXMvbWFwLmh0bWxcIixcbiAgICAgICAgY29udHJvbGxlciA6IFwiTWFwQ29udHJvbGxlclwiXG4gICAgICB9XG4gICAgfVxuICB9KVxuXG4uc3RhdGUoJ2FwcC5mb3JtJywge1xuICBjYWNoZTogZmFsc2UsXG4gIHVybDogXCIvZm9ybVwiLFxuICB2aWV3czoge1xuICAgICdtZW51Q29udGVudCcgOntcbiAgICAgIHRlbXBsYXRlVXJsOiBcInRlbXBsYXRlcy9mb3JtLmh0bWxcIixcbiAgICAgIGNvbnRyb2xsZXIgOiBcIkZvcm1DdHJsXCJcbiAgICB9XG4gIH1cbn0pXG5cbi5zdGF0ZSgnYXBwLmludHJvJywge1xuICBjYWNoZTogZmFsc2UsXG4gIHVybDogXCIvaW50cm9cIixcbiAgdmlld3M6IHtcbiAgICAnbWVudUNvbnRlbnQnIDp7XG4gICAgICB0ZW1wbGF0ZVVybDogXCJ0ZW1wbGF0ZXMvaW50cm8uaHRtbFwiLFxuICAgICAgY29udHJvbGxlciA6IFwiSW50cm9DdHJsXCJcbiAgICB9XG4gIH1cbn0pXG5cbi8vIGlmIG5vbmUgb2YgdGhlIGFib3ZlIHN0YXRlcyBhcmUgbWF0Y2hlZCwgdXNlIHRoaXMgYXMgdGhlIGZhbGxiYWNrXG4kdXJsUm91dGVyUHJvdmlkZXIub3RoZXJ3aXNlKCcvYXBwL2ludHJvJyk7XG5cbn0pO1xuIiwicG1iX2ltLmNvbnRyb2xsZXJzLmNvbnRyb2xsZXIoJ0Fic0NvbnRyb2xsZXInLFxuWyckc2NvcGUnLFxuZnVuY3Rpb24oJHNjb3BlKSB7XG5cbn1dKTtcbiIsInBtYl9pbS5jb250cm9sbGVycy5jb250cm9sbGVyKCdGb3JtQ3RybCcsIFsnJHNjb3BlJywgJyRzdGF0ZScsXG4gICckY29yZG92YUdlb2xvY2F0aW9uJyxcbiAgJyRzdGF0ZVBhcmFtcycsXG4gICckaW9uaWNQbGF0Zm9ybScsXG4gICckaW9uaWNQb3B1cCcsXG4gICdMb2NhdGlvbnNTZXJ2aWNlJyxcbiAgJ0RCU2VydmljZScsXG4gICckaW9uaWNTbGlkZUJveERlbGVnYXRlJyxcbiAgJyRpb25pY1Njcm9sbERlbGVnYXRlJyxcbiAgZnVuY3Rpb24oJHNjb3BlLCAkc3RhdGUsICRjb3Jkb3ZhR2VvbG9jYXRpb24sICRzdGF0ZVBhcmFtcywgJGlvbmljUGxhdGZvcm0sICRpb25pY1BvcHVwLCBMb2NhdGlvbnNTZXJ2aWNlLCBEQlNlcnZpY2UsICRpb25pY1NsaWRlQm94RGVsZWdhdGUsXG4gICRpb25pY1Njcm9sbERlbGVnYXRlKSB7XG5cbiAgICAkc2NvcGUuZm9ybSA9IHt9O1xuICAgICRzY29wZS5mb3JtLmVkYWQgPSAxNjtcbiAgICAkc2NvcGUuZm9ybS51bHRpbW9fbml2ZWxfYXByb2JhZG8gPSBcIlwiO1xuICAgICRzY29wZS5mb3JtLnVsdGltb19hbmlvX2Fwcm9iYWRvID0gXCJcIjtcbiAgICAkc2NvcGUuZm9ybS5wbGFuID0gXCJcIjtcbiAgICAkc2NvcGUuZm9ybS5sdWdhciA9IFwiXCI7XG4gICAgJHNjb3BlLmZvcm0udHVybm8gPSBcIlwiO1xuXG4gICAgJHNjb3BlLnJlc3RhckVkYWQgPSBmdW5jdGlvbigpe1xuICAgICAgaWYoJHNjb3BlLmZvcm0uZWRhZCA+IDQpe1xuICAgICAgICAkc2NvcGUuZm9ybS5lZGFkID0gJHNjb3BlLmZvcm0uZWRhZCAtIDE7XG4gICAgICB9XG4gICAgfTtcblxuICAgICRzY29wZS5zdW1hckVkYWQgPSBmdW5jdGlvbigpe1xuICAgICAgJHNjb3BlLmZvcm0uZWRhZCA9ICRzY29wZS5mb3JtLmVkYWQgKyAxO1xuICAgIH07XG5cbiAgICAkc2NvcGUuc2VsZWN0VWx0aW1vTml2ZWwgPSBmdW5jdGlvbihpZE5pdmVsKXtcbiAgICAgIHZhciB4ID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcIm5pdmVsXCIpO1xuICAgICAgdmFyIGk7XG4gICAgICBmb3IgKGkgPSAwOyBpIDwgeC5sZW5ndGg7IGkrKykge1xuICAgICAgICAgIHhbaV0uY2xhc3NOYW1lID0gXCJuaXZlbF9cIit4W2ldLmlkICtcIiBuaXZlbCBoaWRkZW5cIjtcbiAgICAgIH1cbiAgICAgIHZhciBzZWxlY3RlZCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlkTml2ZWwpO1xuICAgICAgc2VsZWN0ZWQuY2xhc3NOYW1lID0gXCJuaXZlbF9cIitzZWxlY3RlZC5pZCArXCIgbml2ZWxcIjtcbiAgICAgICRzY29wZS5mb3JtLnVsdGltb19uaXZlbF9hcHJvYmFkbyA9IGlkTml2ZWw7XG4gICAgfVxuXG5cdCAgJHNjb3BlLm5leHQgPSBmdW5jdGlvbigpIHtcblx0ICAgICRpb25pY1NsaWRlQm94RGVsZWdhdGUubmV4dCgpO1xuXHQgIH07XG5cblx0ICAkc2NvcGUucHJldmlvdXMgPSBmdW5jdGlvbigpIHtcblx0ICAgICRpb25pY1NsaWRlQm94RGVsZWdhdGUucHJldmlvdXMoKTtcblx0ICB9O1xuXG5cdCAgJHNjb3BlLmdvX3RvX21hcCA9IGZ1bmN0aW9uKCl7XG5cdCAgICAkc3RhdGUuZ28oXCJhcHAubWFwXCIpO1xuXHQgIH1cblxuICB9XG5dKTtcbiIsInBtYl9pbS5jb250cm9sbGVycy5jb250cm9sbGVyKCdJbnRyb0N0cmwnLCBbJyRzY29wZScsICckc3RhdGUnLFxuICAnJGNvcmRvdmFHZW9sb2NhdGlvbicsXG4gICckc3RhdGVQYXJhbXMnLFxuICAnJGlvbmljUGxhdGZvcm0nLFxuICAnJGlvbmljUG9wdXAnLFxuICAnTG9jYXRpb25zU2VydmljZScsXG4gICdEQlNlcnZpY2UnLFxuICBmdW5jdGlvbigkc2NvcGUsICRzdGF0ZSwgJGNvcmRvdmFHZW9sb2NhdGlvbiwgJHN0YXRlUGFyYW1zLCAkaW9uaWNQbGF0Zm9ybSwgJGlvbmljUG9wdXAsIExvY2F0aW9uc1NlcnZpY2UsIERCU2VydmljZSkge1xuXG4gIHZhciBkYiA9IERCU2VydmljZS5pbml0REIoKTtcbiAgZGIuaW5mbygpLnRoZW4oY29uc29sZS5sb2cuYmluZChjb25zb2xlKSk7XG5cbiAgJHNjb3BlLmdlb2xvY2F0ZSA9IGZ1bmN0aW9uKCkge1xuXG4gICAgICB2YXIgcG9zT3B0aW9ucyA9IHt0aW1lb3V0OiAzNTAwLCBlbmFibGVIaWdoQWNjdXJhY3k6IHRydWV9O1xuICAgICAgJGNvcmRvdmFHZW9sb2NhdGlvblxuICAgICAgICAuZ2V0Q3VycmVudFBvc2l0aW9uKHBvc09wdGlvbnMpXG4gICAgICAgIC50aGVuKGZ1bmN0aW9uKHBvc2l0aW9uKSB7XG4gICAgICAgICAgTG9jYXRpb25zU2VydmljZS5zYXZlX2luaXRpYWxfcG9zaXRpb24ocG9zaXRpb24pO1xuICAgICAgICAgICRzdGF0ZS5nbyhcImFwcC5mb3JtXCIpO1xuICAgICAgICB9LCBmdW5jdGlvbihlcnIpIHtcbiAgICAgICAgICAkc3RhdGUuZ28oXCJhcHAuZm9ybVwiKTtcbiAgICAgICAgfSk7XG4gICAgfTtcblxuICAkc2NvcGUuZ29fdG9fZm9ybSA9IGZ1bmN0aW9uKCl7XG4gICAgJHN0YXRlLmdvKFwiYXBwLmZvcm1cIik7XG4gIH1cblxuICAgLyokc2NvcGUuJG9uKCckaW9uaWNWaWV3LmVudGVyJywgZnVuY3Rpb24oKXtcbiAgIH0pOyovXG5cblxuXG4gIH1cbl0pO1xuIiwicG1iX2ltLmNvbnRyb2xsZXJzLmNvbnRyb2xsZXIoJ01hcENvbnRyb2xsZXInLCBbJyRzY29wZScsICdfJyxcbiAgJyRjb3Jkb3ZhQ2FtZXJhJyxcbiAgJyRjb3Jkb3ZhR2VvbG9jYXRpb24nLFxuICAnJGNvbXBpbGUnLFxuICAnJGlvbmljTW9kYWwnLFxuICAnJGlvbmljUG9wdXAnLFxuICAnbGVhZmxldERhdGEnLFxuICAnQ29uZmlnU2VydmljZScsXG4gICdMb2NhdGlvbnNTZXJ2aWNlJyxcbiAgJ1BpblNlcnZpY2UnLFxuICAnQXV0aFNlcnZpY2UnLFxuICAnVXNlclNlcnZpY2UnLFxuICAnREJTZXJ2aWNlJyxcbiAgJyR0aW1lb3V0JyxcbiAgJyRpbnRlcnZhbCcsXG4gICckbG9jYXRpb24nLFxuICAnRXJyb3JTZXJ2aWNlJyxcbiAgJyRpb25pY1NsaWRlQm94RGVsZWdhdGUnLFxuICAnJGlvbmljU2Nyb2xsRGVsZWdhdGUnLFxuICAnUG9wVXBTZXJ2aWNlJyxcbiAgJ0Nvbm5lY3Rpdml0eVNlcnZpY2UnLFxuICAnJGNvcmRvdmFJbkFwcEJyb3dzZXInLFxuICAnTWFwU2VydmljZScsXG4gICdNb2RhbFNlcnZpY2UnLFxuICAnU2VtYXBob3JlU2VydmljZScsXG4gICdWYWxpZGF0aW9uU2VydmljZScsXG4gIGZ1bmN0aW9uKFxuICAgICRzY29wZSxcbiAgICBfLFxuICAgICRjb3Jkb3ZhQ2FtZXJhLFxuICAgICRjb3Jkb3ZhR2VvbG9jYXRpb24sXG4gICAgJGNvbXBpbGUsXG4gICAgJGlvbmljTW9kYWwsXG4gICAgJGlvbmljUG9wdXAsXG4gICAgbGVhZmxldERhdGEsXG4gICAgQ29uZmlnU2VydmljZSxcbiAgICBMb2NhdGlvbnNTZXJ2aWNlLFxuICAgIFBpblNlcnZpY2UsXG4gICAgQXV0aFNlcnZpY2UsXG4gICAgVXNlclNlcnZpY2UsXG4gICAgREJTZXJ2aWNlLFxuICAgICR0aW1lb3V0LFxuICAgICRpbnRlcnZhbCxcbiAgICAkbG9jYXRpb24sXG4gICAgRXJyb3JTZXJ2aWNlLFxuICAgICRpb25pY1NsaWRlQm94RGVsZWdhdGUsXG4gICAgJGlvbmljU2Nyb2xsRGVsZWdhdGUsXG4gICAgUG9wVXBTZXJ2aWNlLFxuICAgIENvbm5lY3Rpdml0eVNlcnZpY2UsXG4gICAgJGNvcmRvdmFJbkFwcEJyb3dzZXIsXG4gICAgTWFwU2VydmljZSxcbiAgICBNb2RhbFNlcnZpY2UsXG4gICAgU2VtYXBob3JlU2VydmljZSxcbiAgICBWYWxpZGF0aW9uU2VydmljZVxuICApIHtcblxuICAgIC8qKlxuICAgICAqIE9uY2Ugc3RhdGUgbG9hZGVkLCBnZXQgcHV0IG1hcCBvbiBzY29wZS5cbiAgICAgKi9cbiAgICAkc2NvcGUub25saW5lX3VzZXJfZ2VvID0ge307XG4gICAgJHNjb3BlLm9ubGluZV91c2VyX2dlb19hcnJheSA9IG5ldyBBcnJheSgpO1xuICAgICRzY29wZS5iYXNlVVJMID0gQ29uZmlnU2VydmljZS5iYXNlVVJMO1xuICAgICRzY29wZS5BcHBOYW1lID0gQ29uZmlnU2VydmljZS5BcHBOYW1lO1xuICAgICRzY29wZS51c2VyX2NhY2hlZF9pbWFnZSA9IFwiLi9pbWcvaWNvbi11c2VyLWFub255bW91cy5wbmdcIjtcbiAgICAkc2NvcGUub25lX3ZhbHVlX3BvcHVwID0gbnVsbDtcbiAgICAkc2NvcGUubXlJbnRlcnZhbHMgPSBuZXcgQXJyYXkoKTtcblxuICAgICRzY29wZS4kb24oXCIkaW9uaWNWaWV3LmJlZm9yZUVudGVyXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgTW9kYWxTZXJ2aWNlLmNoZWNrTm9Nb2RhbElzT3BlbigpO1xuICAgICAgREJTZXJ2aWNlLmluaXREQigpO1xuICAgICAgaWYoQ29ubmVjdGl2aXR5U2VydmljZS5pc09ubGluZSgpKXtcbiAgICAgICAgJHNjb3BlLmNoZWNrX3VzZXJfbG9nZ2VkKCk7XG4gICAgICB9ZWxzZXtcbiAgICAgICAgJHNjb3BlLnNldF9vZmZsaW5lX3VzZXIoKTtcbiAgICAgIH1cbiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZm9vdF9iYXJcIikuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcbiAgICAgIGlmKENvbm5lY3Rpdml0eVNlcnZpY2UuaXNPbmxpbmUoKSl7XG4gICAgICAgICRzY29wZS5jcmVhdGVfb25saW5lX21hcCgpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgJHNjb3BlLiRvbihcIiRpb25pY1ZpZXcuYWZ0ZXJFbnRlclwiLCBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBtYXAgPSBsZWFmbGV0RGF0YS5nZXRNYXAoKTtcbiAgICAgIGlmKExvY2F0aW9uc1NlcnZpY2UuaW5pdGlhbF9sYXQhPVwiXCIpe1xuICAgICAgICBNYXBTZXJ2aWNlLmNlbnRlck1hcE9uQ29vcmRzKExvY2F0aW9uc1NlcnZpY2UuaW5pdGlhbF9sYXQsIExvY2F0aW9uc1NlcnZpY2UuaW5pdGlhbF9sbmcsIDE2KTtcbiAgICAgIH1lbHNle1xuICAgICAgICBNYXBTZXJ2aWNlLmNlbnRlck1hcE9uQ29vcmRzKC0zNC45MDExMTMsIC01Ni4xNjQ1MzEsIDE0KTtcbiAgICAgIH1cblx0ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzcGlubmVyXCIpLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICB9KTtcblxuXG4gICAgJHNjb3BlLm9wZW5XZWJzaXRlID0gZnVuY3Rpb24odXJsKSB7XG4gICAgICB2YXIgb3B0aW9ucyA9IHtcbiAgICAgICAgICAgICAgICBsb2NhdGlvbjogJ25vJyxcbiAgICAgICAgICAgICAgICBjbGVhcmNhY2hlOiAneWVzJyxcbiAgICAgICAgICAgICAgICB0b29sYmFyOiAnbm8nXG4gICAgICAgICAgICB9O1xuXG4gICAgICRjb3Jkb3ZhSW5BcHBCcm93c2VyLm9wZW4odXJsLCAnX2JsYW5rJywgb3B0aW9ucylcbiAgICAgICAgICAudGhlbihmdW5jdGlvbihldmVudCkge1xuICAgICAgICAgICAgLy8gc3VjY2Vzc1xuICAgICAgICAgIH0pXG4gICAgICAgICAgLmNhdGNoKGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgICAgICAgICAvLyBlcnJvclxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICAkc2NvcGUuY3JlYXRlX29ubGluZV9tYXAgPSBmdW5jdGlvbigpe1xuICAgICAgJHNjb3BlLm1hcCA9IHtcbiAgICAgICAgZGVmYXVsdHM6IHtcbiAgICAgICAgICB0aWxlTGF5ZXI6ICdodHRwczovL3tzfS50aWxlLm9wZW5zdHJlZXRtYXAub3JnL3t6fS97eH0ve3l9LnBuZycsXG4gICAgICAgICAgbWluWm9vbTogMSxcbiAgICAgICAgICBtYXhab29tOiAxOCxcbiAgICAgICAgICB6b29tQ29udHJvbFBvc2l0aW9uOiAndG9wbGVmdCcsXG4gICAgICAgIH0sXG4gICAgICAgIG1hcmtlcnM6IHt9LFxuICAgICAgICBldmVudHM6IHtcbiAgICAgICAgICBtYXA6IHtcbiAgICAgICAgICAgIGVuYWJsZTogWydjb250ZXh0J10sXG4gICAgICAgICAgICBsb2dpYzogJ2VtaXQnXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBjZW50ZXI6IHtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgICRzY29wZS5sb2FkUGluc0xheWVyKCk7XG4gICAgICAkc2NvcGUubWFwLmNlbnRlciA9IHtcbiAgICAgICAgICBsYXQ6IC0zNC45MDExMTMsXG4gICAgICAgICAgbG5nOiAtNTYuMTY0NTMxLFxuICAgICAgICAgIHpvb206IDE2XG4gICAgICAgIH07XG4gICAgICBsZWFmbGV0RGF0YS5nZXRNYXAoKS50aGVuKGZ1bmN0aW9uKG1hcCkge1xuICAgICAgICBtYXAub24oJ21vdmVlbmQnLCAkc2NvcGUuaGlkZU9mZlNjcmVlblBpbnMpO1xuICAgICAgfSk7XG4gICAgfTtcblxuXG5cbiAgJHNjb3BlLm5leHQgPSBmdW5jdGlvbigpIHtcbiAgICAkaW9uaWNTbGlkZUJveERlbGVnYXRlLm5leHQoKTtcbiAgfTtcblxuICAkc2NvcGUucHJldmlvdXMgPSBmdW5jdGlvbigpIHtcbiAgICAkaW9uaWNTbGlkZUJveERlbGVnYXRlLnByZXZpb3VzKCk7XG4gIH07XG5cbiAgJHNjb3BlLmJhY2tfdG9fbWFwID0gZnVuY3Rpb24oYmFja190b19tYXApe1xuICAgIGlmKGJhY2tfdG9fbWFwKXtcbiAgICAgIC8vTG9jYXRpb25zU2VydmljZS5pbml0aWFsX2xhdCA9ICRzY29wZS5yZXBvcnQubGF0O1xuICAgICAgLy9Mb2NhdGlvbnNTZXJ2aWNlLmluaXRpYWxfbG5nID0gJHNjb3BlLnJlcG9ydC5sb247XG4gICAgICBNb2RhbFNlcnZpY2UuY2hlY2tOb01vZGFsSXNPcGVuKCk7XG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImZvb3RfYmFyXCIpLnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNwaW5uZXItaW5zaWRlLW1vZGFsXCIpLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICAgIC8vJHNjb3BlLmFkZFJlcG9ydHNMYXllcigpO1xuICAgIH1lbHNle1xuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzcGlubmVyLWluc2lkZS1tb2RhbFwiKS5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgfVxuICB9XG5cblxuICAkc2NvcGUuaW1hZ2UgPSBudWxsO1xuXG4gICRzY29wZS5hZGRJbWFnZSA9IGZ1bmN0aW9uKGlzRnJvbUFsYnVtLCBpc1VzZXJQaG90bywgaXNDb21tZW50UGhvdG8sIGlzTmV3VXNlclBob3RvKSB7XG4gICAgLy9hbGVydChcImFkZEltYWdlXCIpO1xuICAgICRzY29wZS5pc1VzZXJQaG90byA9IGlzVXNlclBob3RvO1xuICAgICRzY29wZS5pc0NvbW1lbnRQaG90byA9IGlzQ29tbWVudFBob3RvO1xuICAgICRzY29wZS5pc05ld1VzZXJQaG90byA9IGlzTmV3VXNlclBob3RvO1xuXG4gICAgdmFyIHNvdXJjZSA9IENhbWVyYS5QaWN0dXJlU291cmNlVHlwZS5DQU1FUkE7XG4gICAgdmFyIGZpeF9vcmllbnRhdGlvbiA9IHRydWU7XG4gICAgdmFyIHNhdmVfdG9fZ2FsbGVyeSA9IHRydWU7XG4gICAgaWYoaXNGcm9tQWxidW09PTEpe1xuICAgICAgc291cmNlID0gQ2FtZXJhLlBpY3R1cmVTb3VyY2VUeXBlLlBIT1RPTElCUkFSWTtcbiAgICAgIGZpeF9vcmllbnRhdGlvbiA9IGZhbHNlO1xuICAgICAgc2F2ZV90b19nYWxsZXJ5ID0gZmFsc2U7XG4gICAgfVxuXG4gICAgdmFyIG9wdGlvbnMgPSB7XG4gICAgICBxdWFsaXR5OiA5MCxcbiAgICAgIGRlc3RpbmF0aW9uVHlwZTogQ2FtZXJhLkRlc3RpbmF0aW9uVHlwZS5GSUxFX1VSSSxcbiAgICAgIHNvdXJjZVR5cGU6IHNvdXJjZSxcbiAgICAgIGFsbG93RWRpdDogZmFsc2UsXG4gICAgICBjb3JyZWN0T3JpZW50YXRpb24gOiBmaXhfb3JpZW50YXRpb24sXG4gICAgICBlbmNvZGluZ1R5cGU6IENhbWVyYS5FbmNvZGluZ1R5cGUuSlBFRyxcbiAgICAgIHBvcG92ZXJPcHRpb25zOiBDYW1lcmFQb3BvdmVyT3B0aW9ucyxcbiAgICAgIHNhdmVUb1Bob3RvQWxidW06IHNhdmVfdG9fZ2FsbGVyeSxcbiAgICAgIHRhcmdldFdpZHRoOiA1MDAsXG4gICAgICB0YXJnZXRIZWlnaHQ6IDUwMFxuICAgIH07XG5cblxuICAgICRjb3Jkb3ZhQ2FtZXJhLmdldFBpY3R1cmUob3B0aW9ucykudGhlbihmdW5jdGlvbihpbWFnZURhdGEpIHtcbiAgICAgIG9uSW1hZ2VTdWNjZXNzKGltYWdlRGF0YSk7XG5cbiAgICAgIGZ1bmN0aW9uIG9uSW1hZ2VTdWNjZXNzKGZpbGVVUkkpIHtcbiAgICAgICAgd2luZG93LkZpbGVQYXRoLnJlc29sdmVOYXRpdmVQYXRoKGZpbGVVUkksIGZ1bmN0aW9uKHJlc3VsdCkge1xuICAgICAgICAgIC8vIG9uU3VjY2VzcyBjb2RlXG4gICAgICAgICAgLy9hbGVydChyZXN1bHQpO1xuICAgICAgICAgIGZpbGVVUkkgPSAnZmlsZTovLycgKyByZXN1bHQ7XG4gICAgICAgICAgaWYocmVzdWx0LnN0YXJ0c1dpdGgoXCJmaWxlOi8vXCIpKXtcbiAgICAgICAgICAgIGZpbGVVUkkgPSByZXN1bHQ7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmKCRzY29wZS5pc1VzZXJQaG90bz09MSl7XG4gICAgICAgICAgICAvL1VzZXJTZXJ2aWNlLmFkZF9waG90byhmaWxlVVJJKTtcbiAgICAgICAgICAgICRzY29wZS5wcm9maWxlLnBpY3R1cmVfdXJsID0gZmlsZVVSSTtcbiAgICAgICAgICB9ZWxzZXtcbiAgICAgICAgICAgIGlmKCRzY29wZS5pc0NvbW1lbnRQaG90bz09MSl7XG4gICAgICAgICAgICAgICRzY29wZS5jb21tZW50LmZpbGUgPSBmaWxlVVJJO1xuICAgICAgICAgICAgfWVsc2UgaWYoJHNjb3BlLmlzTmV3VXNlclBob3RvPT0xKXtcbiAgICAgICAgICAgICAgJHNjb3BlLm5ld3VzZXIucGljdHVyZV91cmwgPSBmaWxlVVJJO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICAkc2NvcGUuaW1nVVJJID0gZmlsZVVSSTtcbiAgICAgICAgICAvL2NyZWF0ZUZpbGVFbnRyeShmaWxlVVJJKTtcbiAgICAgICAgfSwgZnVuY3Rpb24oZXJyb3IpIHtcbiAgICAgICAgICBhbGVydChcIkVycm9yIHJlc29sdmVOYXRpdmVQYXRoXCIgKyBlcnJvcik7XG4gICAgICAgIH0pO1xuXG4gICAgICB9XG5cbiAgICAgIGZ1bmN0aW9uIGNyZWF0ZUZpbGVFbnRyeShmaWxlVVJJKSB7XG4gICAgICAgIHdpbmRvdy5yZXNvbHZlTG9jYWxGaWxlU3lzdGVtVVJMKGZpbGVVUkksIGNvcHlGaWxlLCBmYWlsKTtcbiAgICAgIH1cblxuICAgICAgLy8gNVxuICAgICAgZnVuY3Rpb24gY29weUZpbGUoZmlsZUVudHJ5KSB7XG4gICAgICAgIHZhciBuYW1lID0gZmlsZUVudHJ5LmZ1bGxQYXRoLnN1YnN0cihmaWxlRW50cnkuZnVsbFBhdGgubGFzdEluZGV4T2YoJy8nKSArIDEpO1xuICAgICAgICB2YXIgbmV3TmFtZSA9IG1ha2VpZCgpICsgbmFtZTtcblxuICAgICAgICB3aW5kb3cucmVzb2x2ZUxvY2FsRmlsZVN5c3RlbVVSTChjb3Jkb3ZhLmZpbGUuZGF0YURpcmVjdG9yeSwgZnVuY3Rpb24oZmlsZVN5c3RlbTIpIHtcbiAgICAgICAgICAgIGZpbGVFbnRyeS5jb3B5VG8oXG4gICAgICAgICAgICAgIGZpbGVTeXN0ZW0yLFxuICAgICAgICAgICAgICBuZXdOYW1lLFxuICAgICAgICAgICAgICBvbkNvcHlTdWNjZXNzLFxuICAgICAgICAgICAgICBmYWlsXG4gICAgICAgICAgICApO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgZmFpbCk7XG4gICAgICB9XG5cbiAgICAgIC8vIDZcbiAgICAgIGZ1bmN0aW9uIG9uQ29weVN1Y2Nlc3MoZW50cnkpIHtcbiAgICAgICAgJHNjb3BlLiRhcHBseShmdW5jdGlvbigpIHtcbiAgICAgICAgICAkc2NvcGUuaW1hZ2UgPSBlbnRyeS5uYXRpdmVVUkw7XG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICBmdW5jdGlvbiBmYWlsKGVycm9yKSB7XG5cbiAgICAgIH1cblxuICAgICAgZnVuY3Rpb24gbWFrZWlkKCkge1xuICAgICAgICB2YXIgdGV4dCA9IFwiXCI7XG4gICAgICAgIHZhciBwb3NzaWJsZSA9IFwiQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODlcIjtcblxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IDU7IGkrKykge1xuICAgICAgICAgIHRleHQgKz0gcG9zc2libGUuY2hhckF0KE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIHBvc3NpYmxlLmxlbmd0aCkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0ZXh0O1xuICAgICAgfVxuXG4gICAgfSwgZnVuY3Rpb24oZXJyKSB7XG4gICAgICAvL2NvbnNvbGUubG9nKGVycik7XG4gICAgfSk7XG4gIH07XG5cbiAgJHNjb3BlLnVybEZvckltYWdlID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIGltYWdlVVJMID0gXCJodHRwOi8vcGxhY2Vob2xkLml0LzIwMHgyMDBcIjtcbiAgICBpZiAoJHNjb3BlLmltYWdlKSB7XG4gICAgICB2YXIgbmFtZSA9ICRzY29wZS5pbWFnZS5zdWJzdHIoJHNjb3BlLmltYWdlLmxhc3RJbmRleE9mKCcvJykgKyAxKTtcbiAgICAgIGltYWdlVVJMID0gY29yZG92YS5maWxlLmRhdGFEaXJlY3RvcnkgKyBuYW1lO1xuICAgIH1cbiAgICAvL2NvbnNvbGUubG9nKFwiSW1hZ2VVUkwgPSBcIiArIGltYWdlVVJMKTtcbiAgICByZXR1cm4gaW1hZ2VVUkw7XG4gIH07XG5cblxuICAgICRzY29wZS5zY3JvbGxNZSA9IGZ1bmN0aW9uKGFuY2hvcl9pZCl7XG4gICAgICAkbG9jYXRpb24uaGFzaChhbmNob3JfaWQpO1xuICAgICAgdmFyIGhhbmRsZSAgPSAkaW9uaWNTY3JvbGxEZWxlZ2F0ZS4kZ2V0QnlIYW5kbGUoJ2NvbnRlbnQnKTtcbiAgICAgIGhhbmRsZS5hbmNob3JTY3JvbGwoKTtcbiAgICB9XG5cbiAgICAkc2NvcGUuc2V0X2FjdGl2ZV9vcHRpb24gPSBmdW5jdGlvbihidXR0b25pZCkge1xuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoYnV0dG9uaWQpLmNsYXNzTmFtZSA9IFwib3B0aW9uLWFjdGl2ZVwiO1xuICAgIH1cblxuICAgICRzY29wZS5oaWRlX3NwZWNpYWxfZGl2cyA9IGZ1bmN0aW9uKCl7XG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInVzZXItb3B0aW9ucy1tZW51XCIpLnN0eWxlLmRpc3BsYXk9XCJub25lXCI7XG4gICAgfVxuXG4gICAgJHNjb3BlLmNsb3NlX3JlcG9ydF9kZXRhaWxfbW9kYWwgPSBmdW5jdGlvbigpe1xuICAgICAgTW9kYWxTZXJ2aWNlLmNoZWNrTm9Nb2RhbElzT3BlbigpO1xuICAgICAgJHNjb3BlLnJlcG9ydF9kZXRhaWxfaWQgPSBudWxsO1xuICAgIH1cblxuXG4gICAgLyoqXG4gICAgICogQ2VudGVyIG1hcCBvbiB1c2VyJ3MgY3VycmVudCBwb3NpdGlvblxuICAgICAqL1xuICAgICRzY29wZS5sb2NhdGUgPSBmdW5jdGlvbigpIHtcblxuICAgICAgJGNvcmRvdmFHZW9sb2NhdGlvblxuICAgICAgICAuZ2V0Q3VycmVudFBvc2l0aW9uKClcbiAgICAgICAgLnRoZW4oZnVuY3Rpb24ocG9zaXRpb24pIHtcbiAgICAgICAgICAkc2NvcGUubWFwLmNlbnRlci5sYXQgPSBwb3NpdGlvbi5jb29yZHMubGF0aXR1ZGU7XG4gICAgICAgICAgJHNjb3BlLm1hcC5jZW50ZXIubG5nID0gcG9zaXRpb24uY29vcmRzLmxvbmdpdHVkZTtcbiAgICAgICAgICAkc2NvcGUubWFwLmNlbnRlci56b29tID0gMTU7XG5cbiAgICAgICAgICAkc2NvcGUubWFwLm1hcmtlcnMubm93ID0ge1xuICAgICAgICAgICAgbGF0OiBwb3NpdGlvbi5jb29yZHMubGF0aXR1ZGUsXG4gICAgICAgICAgICBsbmc6IHBvc2l0aW9uLmNvb3Jkcy5sb25naXR1ZGUsXG4gICAgICAgICAgICBtZXNzYWdlOiBcIllvdSBBcmUgSGVyZVwiLFxuICAgICAgICAgICAgZm9jdXM6IHRydWUsXG4gICAgICAgICAgICBkcmFnZ2FibGU6IGZhbHNlXG4gICAgICAgICAgfTtcblxuICAgICAgICB9LCBmdW5jdGlvbihlcnIpIHtcbiAgICAgICAgICAvLyBlcnJvclxuICAgICAgICAgIC8vY29uc29sZS5sb2coXCJMb2NhdGlvbiBlcnJvciFcIik7XG4gICAgICAgICAgLy9jb25zb2xlLmxvZyhlcnIpO1xuICAgICAgICB9KTtcblxuICAgIH07XG5cblxuXG4gICAgJHNjb3BlLmFkZE1hcENvbnRyb2xzID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtYXBfY3Jvc3NoYWlyJykuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcbiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtYXBfY3Jvc3NoYWlyX2J1dHRvbicpLnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XG5cbiAgICB9O1xuXG5cbiAgICAkc2NvcGUuY2hhbmdlVXNlckxvY2F0aW9uUGluID0gZnVuY3Rpb24obGF0LGxvbix1aWQpe1xuICAgICAgaWYoJHNjb3BlLm9ubGluZV91c2VyX2dlb19hcnJheVt1aWRdKXtcbiAgICAgICAgbGF5ZXIgPSAkc2NvcGUub25saW5lX3VzZXJfZ2VvX2FycmF5W3VpZF07XG4gICAgICAgIHZhciBuZXdMYXRMbmcgPSBuZXcgTC5MYXRMbmcobGF0LCBsb24pO1xuICAgICAgICBsYXllci5zZXRMYXRMbmcobmV3TGF0TG5nKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAkc2NvcGUuaGlkZU9mZlNjcmVlblBpbnMgPSBmdW5jdGlvbigpIHtcbiAgICAgIGxlYWZsZXREYXRhLmdldE1hcCgpLnRoZW4oZnVuY3Rpb24obWFwKSB7XG4gICAgICAgIHZhciBtYXBCb3VuZHMgPSBtYXAuZ2V0Qm91bmRzKCk7XG4gICAgICAgICRzY29wZS51c2Vyc1Zpc2libGUgPSBbXTtcbiAgICAgICAgICAkc2NvcGUub25saW5lX3VzZXJfZ2VvX2FycmF5LmZvckVhY2goZnVuY3Rpb24obGF5ZXIsa2V5KXtcbiAgICAgICAgICAgIHZhciBzaG91bGRCZVZpc2libGUgPSBtYXBCb3VuZHMuY29udGFpbnMobGF5ZXIuZ2V0TGF0TG5nKCkpO1xuICAgICAgICAgICAgaWYgKCFzaG91bGRCZVZpc2libGUpIHtcbiAgICAgICAgICAgICAgICBtYXAucmVtb3ZlTGF5ZXIobGF5ZXIpO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChzaG91bGRCZVZpc2libGUpIHtcbiAgICAgICAgICAgICAgICBtYXAuYWRkTGF5ZXIobGF5ZXIpO1xuICAgICAgICAgICAgICAgICRzY29wZS51c2Vyc1Zpc2libGUucHVzaChsYXllci5mZWF0dXJlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgJHNjb3BlLmxvYWRQaW5zTGF5ZXIgPSBmdW5jdGlvbigpe1xuICAgICAgICAvKmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic3Bpbm5lclwiKS5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiO1xuICAgICAgICBsZWFmbGV0RGF0YS5nZXRNYXAoKS50aGVuKGZ1bmN0aW9uKG1hcCkge1xuICAgICAgICAgIFBpblNlcnZpY2UuZ2V0QWxsKCkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHtcbiAgICAgICAgICAgIGlmKFBpblNlcnZpY2UubGFzdFBpbnNSZXNwb25zZT09bnVsbCB8fCAoUGluU2VydmljZS5sYXN0UGluc1Jlc3BvbnNlICYmIFBpblNlcnZpY2UubGFzdFBpbnNSZXNwb25zZSE9cmVzcG9uc2UpKXtcbiAgICAgICAgICAgICAgaWYoJHNjb3BlLm9ubGluZV91c2VyX2dlb19hcnJheSl7XG4gICAgICAgICAgICAgICAgJHNjb3BlLnVzZXJzVmlzaWJsZSA9IFtdO1xuICAgICAgICAgICAgICAgICRzY29wZS5vbmxpbmVfdXNlcl9nZW9fYXJyYXkuZm9yRWFjaChmdW5jdGlvbihsYXllcixrZXkpe1xuICAgICAgICAgICAgICAgICAgbWFwLnJlbW92ZUxheWVyKGxheWVyKTtcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIFBpblNlcnZpY2UubGFzdFBpbnNSZXNwb25zZSA9IHJlc3BvbnNlO1xuICAgICAgICAgICAgICAkc2NvcGUucmVwb3J0c0J5U3RhdGUgPSB7fTtcbiAgICAgICAgICAgICAgdmFyIHBpbnNBcnJheSA9IHJlc3BvbnNlLmRhdGEuZmVhdHVyZXM7XG4gICAgICAgICAgICAgICRzY29wZS5vbmxpbmVfdXNlcnNfZ2VvID0gcmVzcG9uc2UuZGF0YS5mZWF0dXJlcztcbiAgICAgICAgICAgICAgcGluc0FycmF5LmZvckVhY2goZnVuY3Rpb24oZmVhdHVyZSl7XG4gICAgICAgICAgICAgICAgaWYgKGZlYXR1cmUucHJvcGVydGllcykge1xuICAgICAgICAgICAgICAgICAgICB2YXIgbG9uID0gZmVhdHVyZS5nZW9tZXRyeS5jb29yZGluYXRlc1swXTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGxhdCA9IGZlYXR1cmUuZ2VvbWV0cnkuY29vcmRpbmF0ZXNbMV07XG4gICAgICAgICAgICAgICAgICAgIGlmKGxvbiYmbGF0KXtcbiAgICAgICAgICAgICAgICAgICAgICB2YXIgb25saW5lU3RhdHVzID0gZmVhdHVyZS5wcm9wZXJ0aWVzLk9ubGluZV9zdGF0dXM7XG4gICAgICAgICAgICAgICAgICAgICAgdmFyIGljb24gPSBmZWF0dXJlLnByb3BlcnRpZXMuSWNvbjtcbiAgICAgICAgICAgICAgICAgICAgICBpZihpY29uPT1cImFub25cIil7XG4gICAgICAgICAgICAgICAgICAgICAgICBpY29uID0gXCIuL2ltZy9pY29uLXVzZXItYW5vbnltb3VzLnBuZ1wiO1xuICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICB2YXIgaWNvbl9zaGFkb3cgPSAnLi9pbWcvZ2VuZXJpY19waW5fcmVkLnBuZyc7XG4gICAgICAgICAgICAgICAgICAgICAgaWYob25saW5lU3RhdHVzPT1cIk9ubGluZVwiKXtcbiAgICAgICAgICAgICAgICAgICAgICAgIGljb25fc2hhZG93ID0gJy4vaW1nL2dlbmVyaWNfcGluX2dyZWVuLnBuZyc7XG4gICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgIHZhciBtYXJrZXJJY29uID0gTC5pY29uKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNoYWRvd1VybDogaWNvbl9zaGFkb3csXG4gICAgICAgICAgICAgICAgICAgICAgICBzaGFkb3dTaXplOiAgIFsxMDAsIDEzOF0sXG4gICAgICAgICAgICAgICAgICAgICAgICBzaGFkb3dBbmNob3I6IFs0NCwgMTM4XSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGljb25Vcmw6IGljb24sXG4gICAgICAgICAgICAgICAgICAgICAgICBpY29uU2l6ZTogWzQ2LCA0Nl0sXG4gICAgICAgICAgICAgICAgICAgICAgICBpY29uQW5jaG9yOiBbMjQsIDEyMF0sXG4gICAgICAgICAgICAgICAgICAgICAgICBwb3B1cEFuY2hvcjogWzAsIC0xMzhdXG4gICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgdmFyIGxheWVyID0gTC5tYXJrZXIoW2xhdCwgbG9uXSwge2ljb246IG1hcmtlckljb259KTtcbiAgICAgICAgICAgICAgICAgICAgICBsYXllci5mZWF0dXJlID0gZmVhdHVyZTtcbiAgICAgICAgICAgICAgICAgICAgICAkc2NvcGUub25saW5lX3VzZXJfZ2VvX2FycmF5W2xheWVyLmZlYXR1cmUucHJvcGVydGllcy5VaWRdID0gbGF5ZXI7XG4gICAgICAgICAgICAgICAgICAgICAgaWYgKGZlYXR1cmUucHJvcGVydGllcykge1xuXHRcdFx0Ly9BQ0EgU0VURUFSIEVMIE9OQ0xJQ0sgUEFSQSBMT1MgUElORVMgKHNlIHB1ZWRlIGFicmlyIHBvcHVwIGVuIGVsIG1hcGEgbyBsZXZhbnRhciB1biBtb2RhbCBvIGxvIHF1ZSBxdWllcmFuKVxuICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzcGlubmVyXCIpLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICAgICAgICAgICAgJHNjb3BlLmhpZGVPZmZTY3JlZW5QaW5zKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG5cbiAgICAgICAgfSk7Ki9cbiAgICB9XG5cbiAgICAvL1BBUkEgQ09OVFJPTEFSIEVMIEVOVEVSIEVOIEFMR1VOT1MgRk9STVNcbiAgICAvKiRzY29wZS5rZXlfcHJlc3MgPSBmdW5jdGlvbihldmVudCxzdGFnZSl7XG4gICAgICB2YXIga2V5Q29kZSA9IGV2ZW50LmtleUNvZGU7XG4gICAgICBpZihzdGFnZT09J3ByaXZhdGVfY2hhdCcpe1xuICAgICAgICBpZihrZXlDb2RlPT0xMyl7XG4gICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGlmKGNvcmRvdmE9PT1udWxsKXtcblxuICAgICAgICAgICAgfWVsc2UgaWYoY29yZG92YSYmY29yZG92YS5wbHVnaW5zLktleWJvYXJkKXtcbiAgICAgICAgICAgICAgY29yZG92YS5wbHVnaW5zLktleWJvYXJkLmNsb3NlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIGNhdGNoKGVycikge1xuICAgICAgICAgIH1cblxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSovXG5cblxuICAgICRzY29wZS50aW1lQ29udmVydGVyID0gZnVuY3Rpb24oVU5JWF90aW1lc3RhbXApe1xuICAgICAgdmFyIGEgPSBuZXcgRGF0ZShVTklYX3RpbWVzdGFtcCAqIDEwMDApO1xuICAgICAgdmFyIG1vbnRocyA9IFsnRW5lcm8nLCdGZWJyZXJvJywnTWFyem8nLCdBYnJpbCcsJ01heW8nLCdKdW5pbycsJ0p1bGlvJywnQWdvc3RvJywnU2V0aWVtYnJlJywnT2N0dWJyZScsJ05vdmllbWJyZScsJ0RpY2llbWJyZSddO1xuICAgICAgdmFyIHllYXIgPSBhLmdldEZ1bGxZZWFyKCk7XG4gICAgICAvL3ZhciBtb250aCA9IG1vbnRoc1thLmdldE1vbnRoKCldO1xuICAgICAgdmFyIG1vbnRoID0gYS5nZXRNb250aCgpO1xuICAgICAgaWYobW9udGg8MTApe1xuICAgICAgICBtb250aCA9IFwiMFwiK21vbnRoO1xuICAgICAgfVxuICAgICAgdmFyIGRheSA9IGEuZ2V0RGF0ZSgpO1xuICAgICAgaWYoZGF5PDEwKXtcbiAgICAgICAgZGF5ID0gXCIwXCIrZGF5O1xuICAgICAgfVxuICAgICAgdmFyIGhvdXIgPSBhLmdldEhvdXJzKCk7XG4gICAgICBpZihob3VyPDEwKXtcbiAgICAgICAgaG91ciA9IFwiMFwiK2hvdXI7XG4gICAgICB9XG4gICAgICB2YXIgbWluID0gYS5nZXRNaW51dGVzKCk7XG4gICAgICBpZihtaW48MTApe1xuICAgICAgICBtaW4gPSBcIjBcIittaW47XG4gICAgICB9XG4gICAgICB2YXIgc2VjID0gYS5nZXRTZWNvbmRzKCk7XG4gICAgICB2YXIgdGltZSA9IGRheSArICcvJyArIG1vbnRoICsgJy8nICsgeWVhciArICcgJyArIGhvdXIgKyAnOicgKyBtaW47XG4gICAgICByZXR1cm4gdGltZTtcbiAgICB9XG5cblxuXG4gICAgLy8gU3VnZ2VzdGlvblxuICAgICRzY29wZS5tb2RlbCA9IFtdO1xuICAgICRzY29wZS5leHRlcm5hbE1vZGVsID0gW107XG4gICAgJHNjb3BlLnNlbGVjdGVkSXRlbXMgPSBbXTtcbiAgICAkc2NvcGUucHJlc2VsZWN0ZWRTZWFyY2hJdGVtcyA9IFtdO1xuICAgICRzY29wZS5jbGlja2VkVmFsdWVNb2RlbCA9IFwiXCI7XG4gICAgJHNjb3BlLnJlbW92ZWRWYWx1ZU1vZGVsID0gXCJcIjtcblxuXG4gICAgJHNjb3BlLml0ZW1zUmVtb3ZlZCA9IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gICAgICAkc2NvcGUucmVtb3ZlZFZhbHVlTW9kZWwgPSBjYWxsYmFjaztcbiAgICB9O1xuXG4gICAgJHNjb3BlLnVzZXJfb3B0aW9ucyA9IGZ1bmN0aW9uKCl7XG4gICAgICB2YXIgbWVudSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidXNlci1vcHRpb25zLW1lbnVcIik7XG4gICAgICBpZihtZW51LnN0eWxlLmRpc3BsYXk9PVwiYmxvY2tcIil7XG4gICAgICAgIG1lbnUuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgICAgfWVsc2V7XG4gICAgICAgIC8vY29uc29sZS5sb2coVXNlclNlcnZpY2UubmFtZSk7XG4gICAgICAgIHZhciBuYW1lID0gVXNlclNlcnZpY2UubmFtZTtcbiAgICAgICAgaWYobmFtZT09bnVsbCl7XG4gICAgICAgICAgLy9ObyBlc3RhIGxvZ3VlYWRvXG4gICAgICAgICAgJHNjb3BlLnNob3dfYW5vbnltb3VzX21lbnUoKTtcbiAgICAgICAgfWVsc2V7XG4gICAgICAgICAgLy9Fc3TDoSBsb2d1ZWFkb1xuICAgICAgICAgICRzY29wZS5zaG93X3VzZXJfbWVudSgpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgJHNjb3BlLnNob3dfYW5vbnltb3VzX21lbnUgPSBmdW5jdGlvbigpe1xuICAgICAgdmFyIG1lbnUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInVzZXItb3B0aW9ucy1tZW51XCIpO1xuICAgICAgdmFyIGh0bWwgPSBcIjxkaXYgaWQ9J2F1dGhfb3B0aW9ucyc+PGRpdiBjbGFzcz0nbm9uYXV0aC1saW5rJyBuZy1jbGljaz0nc2hvd19sb2dpbl9tb2RhbCgpJz5JbmljaWFyIHNlc2nDs248L2Rpdj5cIjtcbiAgICAgIGh0bWwgPSBodG1sICsgXCI8ZGl2IGNsYXNzPSdub25hdXRoLWxpbmsnIG5nLWNsaWNrPSdzaG93X3NpZ25fdXBfbW9kYWwoKSc+UmVnaXN0cmFyc2U8L2Rpdj48L2Rpdj5cIjtcbiAgICAgIG1lbnUuaW5uZXJIVE1MID0gaHRtbDtcbiAgICAgICRjb21waWxlKG1lbnUpKCRzY29wZSk7IC8vPC0tLS0gcmVjb21waWxhdGlvblxuICAgICAgbWVudS5zdHlsZS5oZWlnaHQgPSAnMTIwcHgnO1xuICAgICAgbWVudS5zdHlsZS53aWR0aCA9ICcxNTBweCc7XG4gICAgICBtZW51LnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XG4gICAgfVxuXG4gICAgJHNjb3BlLnNob3dfdXNlcl9tZW51ID0gZnVuY3Rpb24oKXtcbiAgICAgIHZhciBtZW51ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ1c2VyLW9wdGlvbnMtbWVudVwiKTtcbiAgICAgIHZhciBodG1sID0gVXNlclNlcnZpY2UubmFtZSArIFwiPGRpdiBpZD0nYXV0aF9vcHRpb25zJz48ZGl2IGNsYXNzPSd1c2VyLWxvZ2dlZC1saW5rJyBuZy1jbGljaz0nc2hvd19lZGl0X3Byb2ZpbGVfbW9kYWwoKSc+TWkgcGVyZmlsPC9kaXY+XCI7XG4gICAgICAvL2h0bWwgPSBodG1sICsgXCI8ZGl2IGNsYXNzPSd1c2VyLWxvZ2dlZC1saW5rJyBuZy1jbGljaz0nY2hhbmdlX3Bhc3N3b3JkKCknPkNhbWJpYXIgY29udHJhc2XDsWE8L2Rpdj5cIjtcbiAgICAgIGh0bWwgPSBodG1sICsgXCI8ZGl2IGNsYXNzPSd1c2VyLWxvZ2dlZC1saW5rJyBuZy1jbGljaz0nc2lnbl9vdXQoKSc+Q2VycmFyIHNlc2nDs248L2Rpdj48L2Rpdj5cIjtcbiAgICAgIG1lbnUuaW5uZXJIVE1MID0gaHRtbDtcbiAgICAgICRjb21waWxlKG1lbnUpKCRzY29wZSk7IC8vPC0tLS0gcmVjb21waWxhdGlvblxuICAgICAgbWVudS5zdHlsZS5oZWlnaHQgPSAnMjIwcHgnO1xuICAgICAgbWVudS5zdHlsZS53aWR0aCA9ICcyMDBweCc7XG4gICAgICBtZW51LnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XG4gICAgfTtcblxuICAgICRzY29wZS5jcmVhdGVfZmllbGRfYXJyYXkgPSBmdW5jdGlvbihuYW1lLHR5cGUsdmFsdWUpe1xuICAgICAgdmFyIGZpZWxkID0gbmV3IEFycmF5KCk7XG4gICAgICBmaWVsZC5uYW1lID0gbmFtZTtcbiAgICAgIGZpZWxkLnR5cGUgPSB0eXBlO1xuICAgICAgZmllbGQudmFsdWUgPSB2YWx1ZTtcbiAgICAgIHJldHVybiBmaWVsZDtcbiAgICB9O1xuXG4gICAgJHNjb3BlLmNyZWF0ZV9maWVsZF9hcnJheV93aXRoX3R3b0ZpZWxkcyA9IGZ1bmN0aW9uKG5hbWUsdHlwZSx2YWx1ZSxzZWNvbmRWYWx1ZSl7XG4gICAgICB2YXIgZmllbGQgPSBuZXcgQXJyYXkoKTtcbiAgICAgIGZpZWxkLm5hbWUgPSBuYW1lO1xuICAgICAgZmllbGQudHlwZSA9IHR5cGU7XG4gICAgICBmaWVsZC52YWx1ZSA9IHZhbHVlO1xuICAgICAgZmllbGQuc2Vjb25kVmFsdWUgPSBzZWNvbmRWYWx1ZTtcbiAgICAgIHJldHVybiBmaWVsZDtcbiAgICB9O1xuXG4gICAgJHNjb3BlLmZpeF9mYl9pbWFnZV9saW5rID0gZnVuY3Rpb24odXJsKXtcbiAgICAgIGlmKHVybC5pbmRleE9mKFwiaHR0cDovL2dyYXBoLmZhY2Vib29rLmNvbVwiKSA+PSAwKXtcbiAgICAgICAgdmFyIHBhcnRzID0gdXJsLnNwbGl0KFwiaHR0cDovL2dyYXBoLmZhY2Vib29rLmNvbVwiKTtcbiAgICAgICAgdmFyIG5ld1VybCA9IFwiaHR0cDovL2dyYXBoLmZhY2Vib29rLmNvbVwiK3BhcnRzWzFdO1xuICAgICAgICByZXR1cm4gbmV3VXJsO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHVybDtcbiAgICB9O1xuXG4gICAgJHNjb3BlLmxvZ19pbiA9IGZ1bmN0aW9uKHVzZXIsIHBhc3N3b3JkKXtcbiAgICAgIGlmKFNlbWFwaG9yZVNlcnZpY2UudGFrZUlmQXZhaWxhYmxlKFwic3VibWl0LWZvcm1cIikpe1xuICAgICAgICBpZihDb25uZWN0aXZpdHlTZXJ2aWNlLmlzT25saW5lKCkpe1xuICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic3Bpbm5lci1pbnNpZGUtbW9kYWxcIikuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcbiAgICAgICAgICB2YXIgZmllbGRzID0gbmV3IEFycmF5KCk7XG4gICAgICAgICAgZmllbGRzLnB1c2goJHNjb3BlLmNyZWF0ZV9maWVsZF9hcnJheShcIlVzdWFyaW9cIixcIm5vdE51bGxcIix1c2VyKSk7XG4gICAgICAgICAgZmllbGRzLnB1c2goJHNjb3BlLmNyZWF0ZV9maWVsZF9hcnJheShcIkNvbnRyYXNlw7FhXCIsXCJub3ROdWxsXCIscGFzc3dvcmQpKTtcbiAgICAgICAgICBpZihFcnJvclNlcnZpY2UuY2hlY2tfZmllbGRzKGZpZWxkcyxcImVycm9yX2NvbnRhaW5lclwiKSl7XG4gICAgICAgICAgICBBdXRoU2VydmljZS5sb2dfaW4odXNlcixwYXNzd29yZCkudGhlbihmdW5jdGlvbihyZXNwKSB7XG4gICAgICAgICAgICAgIGlmKEVycm9yU2VydmljZS5odHRwX3Jlc3BvbnNlX2lzX3N1Y2Nlc3NmdWwocmVzcCxcImVycm9yX2NvbnRhaW5lclwiKSl7XG4gICAgICAgICAgICAgICAgcGhvdG8gPSAkc2NvcGUuZml4X2ZiX2ltYWdlX2xpbmsoJHNjb3BlLmdldE9iamVjdERhdGFGcm9tUmVzcG9uc2UocmVzcCkuUGhvdG8pO1xuICAgICAgICAgICAgICAgIGlmKHBob3RvPT1cImFub25cIil7XG4gICAgICAgICAgICAgICAgICBwaG90bz1cInVybCguL2ltZy9pY29uLXVzZXItYW5vbnltb3VzLnBuZylcIjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgVXNlclNlcnZpY2Uuc2F2ZV91c2VyX2RhdGEoJHNjb3BlLmdldE9iamVjdERhdGFGcm9tUmVzcG9uc2UocmVzcCkuTmFtZSwgJHNjb3BlLm5vbmF1dGgucGFzc3dvcmQsIHBob3RvLCAkc2NvcGUuZ2V0T2JqZWN0RGF0YUZyb21SZXNwb25zZShyZXNwKS5TaG93TG9jYXRpb24sICRzY29wZS5nZXRPYmplY3REYXRhRnJvbVJlc3BvbnNlKHJlc3ApLlVpZCwgJHNjb3BlLmdldE9iamVjdERhdGFGcm9tUmVzcG9uc2UocmVzcCkuRXN0YWRvLCAkc2NvcGUuZ2V0T2JqZWN0RGF0YUZyb21SZXNwb25zZShyZXNwKS5HZW5kZXIsICRzY29wZS5nZXRPYmplY3REYXRhRnJvbVJlc3BvbnNlKHJlc3ApLkludGVyZXN0ZWRJbik7XG4gICAgICAgICAgICAgICAgREJTZXJ2aWNlLnNhdmVVc2VyKCRzY29wZS5nZXRPYmplY3REYXRhRnJvbVJlc3BvbnNlKHJlc3ApLk5hbWUsJHNjb3BlLm5vbmF1dGgucGFzc3dvcmQscGhvdG8sJHNjb3BlLmdldE9iamVjdERhdGFGcm9tUmVzcG9uc2UocmVzcCkuU2hvd0xvY2F0aW9uLCRzY29wZS5nZXRPYmplY3REYXRhRnJvbVJlc3BvbnNlKHJlc3ApLlVpZCwkc2NvcGUuZ2V0T2JqZWN0RGF0YUZyb21SZXNwb25zZShyZXNwKS5Fc3RhZG8sICRzY29wZS5nZXRPYmplY3REYXRhRnJvbVJlc3BvbnNlKHJlc3ApLkdlbmRlciwgJHNjb3BlLmdldE9iamVjdERhdGFGcm9tUmVzcG9uc2UocmVzcCkuSW50ZXJlc3RlZEluKTtcbiAgICAgICAgICAgICAgICAkc2NvcGUuc2V0X3VzZXJfcGljdHVyZSgxKTtcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNwaW5uZXItaW5zaWRlLW1vZGFsXCIpLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICAgICAgICAgICAgICBTZW1hcGhvcmVTZXJ2aWNlLm1ha2VBdmFpbGFibGVBZ2FpbihcInN1Ym1pdC1mb3JtXCIpO1xuICAgICAgICAgICAgICAgICRzY29wZS5jbG9zZV9sb2dpbl9tb2RhbCgpO1xuICAgICAgICAgICAgICB9ZWxzZXtcbiAgICAgICAgICAgICAgICBTZW1hcGhvcmVTZXJ2aWNlLm1ha2VBdmFpbGFibGVBZ2FpbihcInN1Ym1pdC1mb3JtXCIpO1xuICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic3Bpbm5lci1pbnNpZGUtbW9kYWxcIikuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LCBmdW5jdGlvbihyZXNwKSB7XG4gICAgICAgICAgICAgIC8vY29uc29sZS5sb2coZXJyKTtcbiAgICAgICAgICAgICAgLy9hbGVydChcIkVycm9yIGVuIHNpZ25faW5cIik7XG4gICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic3Bpbm5lci1pbnNpZGUtbW9kYWxcIikuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgICAgICAgICAgICBTZW1hcGhvcmVTZXJ2aWNlLm1ha2VBdmFpbGFibGVBZ2FpbihcInN1Ym1pdC1mb3JtXCIpO1xuICAgICAgICAgICAgICBFcnJvclNlcnZpY2Uuc2hvd19lcnJvcl9tZXNzYWdlKFwiZXJyb3JfY29udGFpbmVyXCIscmVzcC5zdGF0dXNUZXh0KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH1lbHNle1xuICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzcGlubmVyLWluc2lkZS1tb2RhbFwiKS5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgICAgICAgICBTZW1hcGhvcmVTZXJ2aWNlLm1ha2VBdmFpbGFibGVBZ2FpbihcInN1Ym1pdC1mb3JtXCIpO1xuICAgICAgICAgIH1cblxuICAgICAgICB9ZWxzZXtcbiAgICAgICAgICBTZW1hcGhvcmVTZXJ2aWNlLm1ha2VBdmFpbGFibGVBZ2FpbihcInN1Ym1pdC1mb3JtXCIpO1xuICAgICAgICAgIFBvcFVwU2VydmljZS5zaG93X2FsZXJ0KFwiU2luIGNvbmV4acOzbiBhIGludGVybmV0XCIsXCJQYXJhIGluaWNpYXIgc2VzacOzbiBkZWJlIGVzdGFyIGNvbmVjdGFkbyBhIGludGVybmV0XCIpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgJHNjb3BlLmxvZ19pbl9iYWNrZ3JvdW5kID0gZnVuY3Rpb24odXNlciwgcGFzc3dvcmQpe1xuICAgICAgQXV0aFNlcnZpY2UubG9nX2luKHVzZXIscGFzc3dvcmQpLnRoZW4oZnVuY3Rpb24ocmVzcCkge1xuICAgICAgICBpZihFcnJvclNlcnZpY2UuaHR0cF9yZXNwb25zZV9pc19zdWNjZXNzZnVsX2FqYXgocmVzcCkpe1xuICAgICAgICAgIHBob3RvID0gJHNjb3BlLmZpeF9mYl9pbWFnZV9saW5rKCRzY29wZS5nZXRPYmplY3REYXRhRnJvbVJlc3BvbnNlKHJlc3ApLlBob3RvKTtcbiAgICAgICAgICBpZihwaG90bz09XCJhbm9uXCIpe1xuICAgICAgICAgICAgcGhvdG89XCJ1cmwoLi9pbWcvaWNvbi11c2VyLWFub255bW91cy5wbmcpXCI7XG4gICAgICAgICAgfVxuICAgICAgICAgIFVzZXJTZXJ2aWNlLnNhdmVfdXNlcl9kYXRhKCRzY29wZS5nZXRPYmplY3REYXRhRnJvbVJlc3BvbnNlKHJlc3ApLk5hbWUsIHBhc3N3b3JkLCBwaG90bywgJHNjb3BlLmdldE9iamVjdERhdGFGcm9tUmVzcG9uc2UocmVzcCkuU2hvd0xvY2F0aW9uLCAkc2NvcGUuZ2V0T2JqZWN0RGF0YUZyb21SZXNwb25zZShyZXNwKS5VaWQsICRzY29wZS5nZXRPYmplY3REYXRhRnJvbVJlc3BvbnNlKHJlc3ApLkVzdGFkbywgJHNjb3BlLmdldE9iamVjdERhdGFGcm9tUmVzcG9uc2UocmVzcCkuR2VuZGVyLCAkc2NvcGUuZ2V0T2JqZWN0RGF0YUZyb21SZXNwb25zZShyZXNwKS5JbnRlcmVzdGVkSW4pO1xuICAgICAgICAgIERCU2VydmljZS5zYXZlVXNlcigkc2NvcGUuZ2V0T2JqZWN0RGF0YUZyb21SZXNwb25zZShyZXNwKS5OYW1lLHBhc3N3b3JkLHBob3RvLCRzY29wZS5nZXRPYmplY3REYXRhRnJvbVJlc3BvbnNlKHJlc3ApLlNob3dMb2NhdGlvbiwkc2NvcGUuZ2V0T2JqZWN0RGF0YUZyb21SZXNwb25zZShyZXNwKS5VaWQsJHNjb3BlLmdldE9iamVjdERhdGFGcm9tUmVzcG9uc2UocmVzcCkuRXN0YWRvLCAkc2NvcGUuZ2V0T2JqZWN0RGF0YUZyb21SZXNwb25zZShyZXNwKS5HZW5kZXIsICRzY29wZS5nZXRPYmplY3REYXRhRnJvbVJlc3BvbnNlKHJlc3ApLkludGVyZXN0ZWRJbik7XG5cbiAgICAgICAgICAkc2NvcGUuc2V0X3VzZXJfcGljdHVyZSgxKTtcbiAgICAgICAgICByZXR1cm4gMTtcbiAgICAgICAgfWVsc2V7XG4gICAgICAgICAgcmV0dXJuIDA7XG4gICAgICAgIH1cblxuICAgICAgfSwgZnVuY3Rpb24ocmVzcCkge1xuICAgICAgICAvL2NvbnNvbGUubG9nKGVycik7XG4gICAgICAgIC8vRXJyb3JTZXJ2aWNlLnNob3dfZXJyb3JfbWVzc2FnZV9wb3B1cChyZXNwLnN0YXR1c1RleHQpO1xuICAgICAgICByZXR1cm4gMDtcbiAgICAgIH0pO1xuICAgIH1cblxuXG5cbiAgICAkc2NvcGUuc2lnbl9vdXQgPSBmdW5jdGlvbigpe1xuICAgICAgVXNlclNlcnZpY2UuZXJhc2VfdXNlcl9kYXRhKCk7XG4gICAgICBEQlNlcnZpY2UuZXJhc2VVc2VyKCk7XG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNwaW5uZXJcIikuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgICAgJHNjb3BlLnNldF91c2VyX3BpY3R1cmUoMCk7XG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInVzZXItb3B0aW9ucy1tZW51XCIpLnN0eWxlLmRpc3BsYXk9XCJub25lXCI7XG4gICAgfVxuXG4gICAgJHNjb3BlLnNob3dfZWRpdF9wcm9maWxlX21vZGFsID0gZnVuY3Rpb24oKXtcbiAgICAgIC8vQ2FyZ2FyIGVsIG1vZGFsIGNvbiBsYSBpbmZvIGRlbCB1c3VhcmlvIGxvZ3VlYWRvIHkgY29uIGVsIHN1Ym1pdCBhIGVkaXRfcHJvZmlsZV9va1xuICAgICAgaWYoU2VtYXBob3JlU2VydmljZS50YWtlSWZBdmFpbGFibGUoXCJvcGVuLW1vZGFsXCIpKXtcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzcGlubmVyXCIpLnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XG4gICAgICAgICRzY29wZS5uZXd1c2VyID0gbmV3IEFycmF5KCk7XG4gICAgICAgICRzY29wZS5uZXd1c2VyLmVtYWlsID0gVXNlclNlcnZpY2UuZW1haWw7XG4gICAgICAgICRzY29wZS5uZXd1c2VyLmdlbmRlciA9IFVzZXJTZXJ2aWNlLmdlbmRlcjtcbiAgICAgICAgJHNjb3BlLm5ld3VzZXIudXNlcm5hbWUgPSBVc2VyU2VydmljZS5uYW1lO1xuICAgICAgICAkc2NvcGUubmV3dXNlci5pbnRlcmVzdGVkID0gVXNlclNlcnZpY2UuaW50ZXJlc3RlZDtcbiAgICAgICAgJHNjb3BlLm5ld3VzZXIuc3RhdHVzID0gVXNlclNlcnZpY2Uuc3RhdHVzO1xuICAgICAgICAkc2NvcGUubmV3dXNlci5zaG93X2xvY2F0aW9uID0gVXNlclNlcnZpY2Uuc2hvd19sb2NhdGlvbjtcbiAgICAgICAgJHNjb3BlLmFjdHVhbF9waG90byA9IFVzZXJTZXJ2aWNlLnBpY3R1cmVfdXJsO1xuICAgICAgICBpZigkc2NvcGUuYWN0dWFsX3Bob3RvIT1udWxsKXtcbiAgICAgICAgfWVsc2V7XG4gICAgICAgICAgJHNjb3BlLmFjdHVhbF9waG90byA9IFwiLi9pbWcvaWNvbi11c2VyLWFub255bW91cy5wbmdcIjtcbiAgICAgICAgfVxuICAgICAgICBpZigkc2NvcGUuYWN0dWFsX3Bob3RvPT1cInVybCguL2ltZy9pY29uLXVzZXItYW5vbnltb3VzLnBuZylcIil7XG4gICAgICAgICAgJHNjb3BlLmFjdHVhbF9waG90byA9IFwiLi9pbWcvaWNvbi11c2VyLWFub255bW91cy5wbmdcIjtcbiAgICAgICAgfVxuICAgICAgICBNb2RhbFNlcnZpY2UuY2hlY2tOb01vZGFsSXNPcGVuKCk7XG4gICAgICAgICAgaWYoVmFsaWRhdGlvblNlcnZpY2UuaXNNb2JpbGVEZXZpY2UoKSl7XG4gICAgICAgICAgICAkaW9uaWNNb2RhbC5mcm9tVGVtcGxhdGVVcmwoJ3RlbXBsYXRlcy9lZGl0X3Byb2ZpbGVfd2l0aF9waG90by5odG1sJywge1xuICAgICAgICAgICAgICAgIHNjb3BlOiAkc2NvcGUsXG4gICAgICAgICAgICAgICAgaGFyZHdhcmVCYWNrQnV0dG9uQ2xvc2U6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGFuaW1hdGlvbjogJ3NsaWRlLWluLXVwJyxcbiAgICAgICAgICAgICAgICAvL2ZvY3VzRmlyc3RJbnB1dDogdHJ1ZVxuICAgICAgICAgICAgICB9KS50aGVuKGZ1bmN0aW9uKG1vZGFsKSB7XG4gICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNwaW5uZXJcIikuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ1c2VyLW9wdGlvbnMtbWVudVwiKS5zdHlsZS5kaXNwbGF5PVwibm9uZVwiO1xuICAgICAgICAgICAgICAgICAgTW9kYWxTZXJ2aWNlLmFjdGl2ZU1vZGFsID0gbW9kYWw7XG4gICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImZvb3RfYmFyXCIpLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICAgICAgICAgICAgICAgIE1vZGFsU2VydmljZS5hY3RpdmVNb2RhbC5zaG93KCk7XG4gICAgICAgICAgICAgICAgICBTZW1hcGhvcmVTZXJ2aWNlLm1ha2VBdmFpbGFibGVBZ2FpbihcIm9wZW4tbW9kYWxcIik7XG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH1lbHNle1xuICAgICAgICAgICAgJGlvbmljTW9kYWwuZnJvbVRlbXBsYXRlVXJsKCd0ZW1wbGF0ZXMvZWRpdF9wcm9maWxlX3dpdGhfcGhvdG9fZGVza3RvcC5odG1sJywge1xuICAgICAgICAgICAgICBzY29wZTogJHNjb3BlLFxuICAgICAgICAgICAgICBoYXJkd2FyZUJhY2tCdXR0b25DbG9zZTogZmFsc2UsXG4gICAgICAgICAgICAgIGFuaW1hdGlvbjogJ3NsaWRlLWluLXVwJyxcbiAgICAgICAgICAgICAgLy9mb2N1c0ZpcnN0SW5wdXQ6IHRydWVcbiAgICAgICAgICAgIH0pLnRoZW4oZnVuY3Rpb24obW9kYWwpIHtcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNwaW5uZXJcIikuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidXNlci1vcHRpb25zLW1lbnVcIikuc3R5bGUuZGlzcGxheT1cIm5vbmVcIjtcbiAgICAgICAgICAgICAgICBNb2RhbFNlcnZpY2UuYWN0aXZlTW9kYWwgPSBtb2RhbDtcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImZvb3RfYmFyXCIpLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICAgICAgICAgICAgICBNb2RhbFNlcnZpY2UuYWN0aXZlTW9kYWwuc2hvdygpO1xuICAgICAgICAgICAgICAgIFNlbWFwaG9yZVNlcnZpY2UubWFrZUF2YWlsYWJsZUFnYWluKFwib3Blbi1tb2RhbFwiKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgfVxuXG4gICAgJHNjb3BlLnJlYWRVUkwgPSBmdW5jdGlvbiAoaW5wdXQsdHlwZSkge1xuICAgICAgaWYgKGlucHV0LmZpbGVzICYmIGlucHV0LmZpbGVzWzBdKSB7XG4gICAgICAgIGlmKHR5cGU9PTEpe1xuICAgICAgICAgICRzY29wZS5uZXd1c2VyLnBpY3R1cmVfdXJsID0gaW5wdXQuZmlsZXNbMF07XG4gICAgICAgICAgICB9ZWxzZSBpZiAodHlwZT09Mil7XG4gICAgICAgICAgJHNjb3BlLmNvbW1lbnQucGhvdG8gPSBpbnB1dC5maWxlc1swXTtcbiAgICAgICAgfWVsc2V7XG4gICAgICAgICAgJHNjb3BlLnJlcG9ydC5maWxlID0gaW5wdXQuZmlsZXNbMF07XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7XG4gICAgICAgIHJlYWRlci5vbmxvYWQgPSBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJteUltYWdlXCIpLnNyYyA9IGUudGFyZ2V0LnJlc3VsdDtcbiAgICAgICAgfVxuICAgICAgICByZWFkZXIucmVhZEFzRGF0YVVSTChpbnB1dC5maWxlc1swXSk7XG4gICAgfVxuXG4gICAgfVxuXG4gICAgJHNjb3BlLmNsb3NlX2VkaXRfcHJvZmlsZV9tb2RhbCA9IGZ1bmN0aW9uKCl7XG4gICAgICAvL0NhcmdhciBlbCBtb2RhbCBjb24gbGEgaW5mbyBkZWwgdXN1YXJpbyBsb2d1ZWFkbyB5IGNvbiBlbCBzdWJtaXQgYSB1cGRhdGVfdXNlclxuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJmb290X2JhclwiKS5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiO1xuICAgICAgTW9kYWxTZXJ2aWNlLmNoZWNrTm9Nb2RhbElzT3BlbigpO1xuICAgIH1cblxuICAgICRzY29wZS5lZGl0X3Byb2ZpbGVfb2sgPSBmdW5jdGlvbigpe1xuICAgICAgJHNjb3BlLmVkaXRfcHJvZmlsZSgpO1xuICAgIH1cblxuICAgICRzY29wZS5nZXRPYmplY3REYXRhRnJvbVJlc3BvbnNlID0gZnVuY3Rpb24ocmVzcG9uc2Upe1xuICAgICAgaWYocmVzcG9uc2UuZGF0YSl7XG4gICAgICAgIHJldHVybiByZXNwb25zZS5kYXRhO1xuICAgICAgfWVsc2V7XG4gICAgICAgIHJldHVybiByZXNwb25zZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAkc2NvcGUuZWRpdF9wcm9maWxlID0gZnVuY3Rpb24oKXtcbiAgICAgIGlmKFNlbWFwaG9yZVNlcnZpY2UudGFrZUlmQXZhaWxhYmxlKFwic3VibWl0LWZvcm1cIikpe1xuICAgICAgICBpZihDb25uZWN0aXZpdHlTZXJ2aWNlLmlzT25saW5lKCkpe1xuICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic3Bpbm5lci1pbnNpZGUtbW9kYWxcIikuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcbiAgICAgICAgICAvKnZhciBmaWVsZHMgPSBuZXcgQXJyYXkoKTtcbiAgICAgICAgICBmaWVsZHMucHVzaCgkc2NvcGUuY3JlYXRlX2ZpZWxkX2FycmF5KFwiQ29ycmVvIGVsZWN0csOzbmljb1wiLFwiZW1haWxcIixuZXdfZW1haWwpKTtcbiAgICAgICAgICAvL2ZpZWxkcy5wdXNoKCRzY29wZS5jcmVhdGVfZmllbGRfYXJyYXkoXCJDb250cmFzZcOxYVwiLFwibm90TnVsbFwiLHBhc3N3b3JkKSk7XG4gICAgICAgICAgZmllbGRzLnB1c2goJHNjb3BlLmNyZWF0ZV9maWVsZF9hcnJheShcIkPDqWR1bGEgZGUgSWRlbnRpZGFkXCIsXCJpZGRvY191eVwiLGlkX2RvYykpO1xuICAgICAgICAgIGZpZWxkcy5wdXNoKCRzY29wZS5jcmVhdGVfZmllbGRfYXJyYXkoXCJOb21icmUgeSBhcGVsbGlkb1wiLFwidHdvX3dvcmRzXCIsZnVsbG5hbWUpKTsqL1xuICAgICAgICAgIC8qaWYoRXJyb3JTZXJ2aWNlLmNoZWNrX2ZpZWxkcyhmaWVsZHMsXCJlcnJvcl9jb250YWluZXJcIikpeyovXG4gICAgICAgICAgJHNjb3BlLm5ld3VzZXIucGFzc3dvcmQgPSBVc2VyU2VydmljZS5wYXNzd29yZDtcbiAgICAgICAgICAgIHZhciBlZGl0X3JlcXVlc3QgPSBBdXRoU2VydmljZS5lZGl0X3VzZXIoJHNjb3BlLm5ld3VzZXIpO1xuICAgICAgICAgICAgaWYoJHNjb3BlLm5ld3VzZXIucGljdHVyZV91cmw9PW51bGwgfHwgJHNjb3BlLm5ld3VzZXIucGljdHVyZV91cmw9PVwiXCIgfHwgIVZhbGlkYXRpb25TZXJ2aWNlLmlzTW9iaWxlRGV2aWNlKCkpe1xuICAgICAgICAgICAgICBlZGl0X3JlcXVlc3Quc3VjY2VzcyhmdW5jdGlvbihyZXNwKXtcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNlbnRfbGFiZWxcIikuaW5uZXJIVE1MID0gXCJFbnZpYWRvOiAxMDAlXCI7XG4gICAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhyZXNwKTtcbiAgICAgICAgICAgICAgICBpZihFcnJvclNlcnZpY2UuaHR0cF9yZXNwb25zZV9pc19zdWNjZXNzZnVsKHJlc3AsXCJlcnJvcl9jb250YWluZXJcIikpe1xuICAgICAgICAgICAgICAgICAgVXNlclNlcnZpY2Uuc2F2ZV91c2VyX2RhdGEoJHNjb3BlLmdldE9iamVjdERhdGFGcm9tUmVzcG9uc2UocmVzcCkuTmFtZSwgJHNjb3BlLm5ld3VzZXIucGFzc3dvcmQsICRzY29wZS5nZXRPYmplY3REYXRhRnJvbVJlc3BvbnNlKHJlc3ApLlBob3RvLCAkc2NvcGUuZ2V0T2JqZWN0RGF0YUZyb21SZXNwb25zZShyZXNwKS5TaG93TG9jYXRpb24sICRzY29wZS5nZXRPYmplY3REYXRhRnJvbVJlc3BvbnNlKHJlc3ApLlVpZCwgJHNjb3BlLmdldE9iamVjdERhdGFGcm9tUmVzcG9uc2UocmVzcCkuRXN0YWRvLCAkc2NvcGUuZ2V0T2JqZWN0RGF0YUZyb21SZXNwb25zZShyZXNwKS5HZW5kZXIsICRzY29wZS5nZXRPYmplY3REYXRhRnJvbVJlc3BvbnNlKHJlc3ApLkludGVyZXN0ZWRJbik7XG4gICAgICAgICAgICAgICAgICBEQlNlcnZpY2Uuc2F2ZVVzZXIoJHNjb3BlLmdldE9iamVjdERhdGFGcm9tUmVzcG9uc2UocmVzcCkuTmFtZSwkc2NvcGUubmV3dXNlci5wYXNzd29yZCwkc2NvcGUuZ2V0T2JqZWN0RGF0YUZyb21SZXNwb25zZShyZXNwKS5QaG90bywkc2NvcGUuZ2V0T2JqZWN0RGF0YUZyb21SZXNwb25zZShyZXNwKS5TaG93TG9jYXRpb24sJHNjb3BlLmdldE9iamVjdERhdGFGcm9tUmVzcG9uc2UocmVzcCkuVWlkLCRzY29wZS5nZXRPYmplY3REYXRhRnJvbVJlc3BvbnNlKHJlc3ApLkVzdGFkbywgJHNjb3BlLmdldE9iamVjdERhdGFGcm9tUmVzcG9uc2UocmVzcCkuR2VuZGVyLCAkc2NvcGUuZ2V0T2JqZWN0RGF0YUZyb21SZXNwb25zZShyZXNwKS5JbnRlcmVzdGVkSW4pO1xuICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzcGlubmVyLWluc2lkZS1tb2RhbFwiKS5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgICAgICAgICAgICAgICBTZW1hcGhvcmVTZXJ2aWNlLm1ha2VBdmFpbGFibGVBZ2FpbihcInN1Ym1pdC1mb3JtXCIpO1xuICAgICAgICAgICAgICAgICAgJHNjb3BlLmNsb3NlX2VkaXRfcHJvZmlsZV9tb2RhbCgpO1xuICAgICAgICAgICAgICAgICAgJHNjb3BlLmNoZWNrX3VzZXJfbG9nZ2VkKCk7XG4gICAgICAgICAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICAgICAgICBTZW1hcGhvcmVTZXJ2aWNlLm1ha2VBdmFpbGFibGVBZ2FpbihcInN1Ym1pdC1mb3JtXCIpO1xuICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzcGlubmVyLWluc2lkZS1tb2RhbFwiKS5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAuZXJyb3IoZnVuY3Rpb24oZGF0YSwgc3RhdHVzLCBoZWFkZXJzLGNvbmZpZyl7XG4gICAgICAgICAgICAgICAgRXJyb3JTZXJ2aWNlLnNob3dfZXJyb3JfbWVzc2FnZShcImVycm9yX2NvbnRhaW5lclwiLHN0YXR1cyk7XG4gICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzcGlubmVyLWluc2lkZS1tb2RhbFwiKS5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgICAgICAgICAgICAgU2VtYXBob3JlU2VydmljZS5tYWtlQXZhaWxhYmxlQWdhaW4oXCJzdWJtaXQtZm9ybVwiKTtcbiAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH1lbHNle1xuICAgICAgICAgICAgICBlZGl0X3JlcXVlc3QudGhlbihmdW5jdGlvbihyZXN1bHQpIHtcbiAgICAgICAgICAgICAgICB2YXIgZGF0YSA9IEpTT04ucGFyc2UocmVzdWx0LnJlc3BvbnNlKTtcbiAgICAgICAgICAgICAgICBpZihFcnJvclNlcnZpY2UuaHR0cF9kYXRhX3Jlc3BvbnNlX2lzX3N1Y2Nlc3NmdWwoZGF0YSxcImVycm9yX2NvbnRhaW5lclwiKSl7XG4gICAgICAgICAgICAgICAgICBkYXRhID0gJHNjb3BlLmdldE9iamVjdERhdGFGcm9tUmVzcG9uc2UoZGF0YSk7XG4gICAgICAgICAgICAgICAgICBVc2VyU2VydmljZS5zYXZlX3VzZXJfZGF0YShkYXRhLk5hbWUsICRzY29wZS5uZXd1c2VyLnBhc3N3b3JkLCBkYXRhLlBob3RvLCBkYXRhLlNob3dMb2NhdGlvbiwgZGF0YS5VaWQsIGRhdGEuRXN0YWRvLCBkYXRhLkdlbmRlciwgZGF0YS5JbnRlcmVzdGVkSW4pO1xuICAgICAgICAgICAgICAgICAgREJTZXJ2aWNlLnNhdmVVc2VyKGRhdGEuTmFtZSwkc2NvcGUubmV3dXNlci5wYXNzd29yZCxkYXRhLlBob3RvLGRhdGEuU2hvd0xvY2F0aW9uLGRhdGEuVWlkLGRhdGEuRXN0YWRvLCBkYXRhLkdlbmRlciwgZGF0YS5JbnRlcmVzdGVkSW4pO1xuICAgICAgICAgICAgICAgICAgU2VtYXBob3JlU2VydmljZS5tYWtlQXZhaWxhYmxlQWdhaW4oXCJzdWJtaXQtZm9ybVwiKTtcbiAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic3Bpbm5lci1pbnNpZGUtbW9kYWxcIikuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgICAgICAgICAgICAgICAgJHNjb3BlLmNsb3NlX2VkaXRfcHJvZmlsZV9tb2RhbCgpO1xuICAgICAgICAgICAgICAgICAgJHNjb3BlLmNoZWNrX3VzZXJfbG9nZ2VkKCk7XG4gICAgICAgICAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICAgICAgICBTZW1hcGhvcmVTZXJ2aWNlLm1ha2VBdmFpbGFibGVBZ2FpbihcInN1Ym1pdC1mb3JtXCIpO1xuICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzcGlubmVyLWluc2lkZS1tb2RhbFwiKS5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9LCBmdW5jdGlvbihlcnJvcikge1xuICAgICAgICAgICAgICAgIHZhciBhbGVydCA9IFwiQ8OzZGlnbzogXCIgKyBlcnJvci5jb2RlO1xuICAgICAgICAgICAgICAgIGFsZXJ0ID0gYWxlcnQgKyBcIiBPcmlnZW46IFwiICsgZXJyb3Iuc291cmNlO1xuICAgICAgICAgICAgICAgIGFsZXJ0ID0gYWxlcnQgKyBcIiBEZXN0aW5vOiBcIiArIGVycm9yLnRhcmdldDtcbiAgICAgICAgICAgICAgICBhbGVydCA9IGFsZXJ0ICsgXCIgaHR0cF9zdGF0dXM6IFwiICsgZXJyb3IuaHR0cF9zdGF0dXM7XG4gICAgICAgICAgICAgICAgYWxlcnQgPSBhbGVydCArIFwiIEJvZHk6IFwiICsgZXJyb3IuYm9keTtcbiAgICAgICAgICAgICAgICBhbGVydCA9IGFsZXJ0ICsgXCIgRXhjZXB0aW9uOiBcIiArIGVycm9yLmV4Y2VwdGlvbjtcbiAgICAgICAgICAgICAgICBFcnJvclNlcnZpY2Uuc2hvd19lcnJvcl9tZXNzYWdlKFwiZXJyb3JfY29udGFpbmVyXCIsXCJIdWJvIHVuIGVycm9yIGVuIGVsIGVudsOtbzogXCIgKyBhbGVydCk7XG4gICAgICAgICAgICAgICAgU2VtYXBob3JlU2VydmljZS5tYWtlQXZhaWxhYmxlQWdhaW4oXCJzdWJtaXQtZm9ybVwiKTtcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNwaW5uZXItaW5zaWRlLW1vZGFsXCIpLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICAgICAgICAgICAgfSwgZnVuY3Rpb24ocHJvZ3Jlc3MpIHtcbiAgICAgICAgICAgICAgICAgICR0aW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICAkc2NvcGUudXBsb2FkUHJvZ3Jlc3MgPSAocHJvZ3Jlc3MubG9hZGVkIC8gcHJvZ3Jlc3MudG90YWwpICogMTAwO1xuICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNlbnRfbGFiZWxcIikuaW5uZXJIVE1MID0gXCJFbnZpYWRvOiBcIiArIE1hdGgucm91bmQoJHNjb3BlLnVwbG9hZFByb2dyZXNzKSArIFwiJVwiO1xuICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIC8qfWVsc2V7XG4gICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNwaW5uZXItaW5zaWRlLW1vZGFsXCIpLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICAgICAgICB9Ki9cbiAgICAgICAgfWVsc2V7XG4gICAgICAgICAgU2VtYXBob3JlU2VydmljZS5tYWtlQXZhaWxhYmxlQWdhaW4oXCJzdWJtaXQtZm9ybVwiKTtcbiAgICAgICAgICBQb3BVcFNlcnZpY2Uuc2hvd19hbGVydChcIlNpbiBjb25leGnDs24gYSBpbnRlcm5ldFwiLFwiUGFyYSBlZGl0YXIgc3UgcGVyZmlsIGRlYmUgZXN0YXIgY29uZWN0YWRvIGEgaW50ZXJuZXRcIik7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cblxuICAgICRzY29wZS5zaG93X2xvZ2luX21vZGFsID0gZnVuY3Rpb24oKXtcbiAgICAgIC8vQ2FyZ2FyIGVsIG1vZGFsIGNvbiBlbCBmb3JtIGRlIGxvZ2luIHkgYWhpIGxsYW1hIGFsIHNpZ25faW5cbiAgICAgIGlmKFNlbWFwaG9yZVNlcnZpY2UudGFrZUlmQXZhaWxhYmxlKFwib3Blbi1tb2RhbFwiKSl7XG4gICAgICAgICRzY29wZS5ub25hdXRoID0gbmV3IEFycmF5KCk7XG4gICAgICAgICRzY29wZS5ub25hdXRoLnVzZXIgPSBcIlwiO1xuICAgICAgICAkc2NvcGUubm9uYXV0aC5wYXNzd29yZCA9IFwiXCI7XG4gICAgICAgIE1vZGFsU2VydmljZS5jaGVja05vTW9kYWxJc09wZW4oKTtcbiAgICAgICAgJGlvbmljTW9kYWwuZnJvbVRlbXBsYXRlVXJsKCd0ZW1wbGF0ZXMvbG9nX2luLmh0bWwnLCB7XG4gICAgICAgICAgICBzY29wZTogJHNjb3BlLFxuICAgICAgICAgICAgaGFyZHdhcmVCYWNrQnV0dG9uQ2xvc2U6IGZhbHNlLFxuICAgICAgICAgICAgYW5pbWF0aW9uOiAnc2xpZGUtaW4tdXAnLFxuICAgICAgICAgICAgLy9mb2N1c0ZpcnN0SW5wdXQ6IHRydWVcbiAgICAgICAgICB9KS50aGVuKGZ1bmN0aW9uKG1vZGFsKSB7XG4gICAgICAgICAgICAgICRzY29wZS5oaWRlX3NwZWNpYWxfZGl2cygpO1xuICAgICAgICAgICAgICBNb2RhbFNlcnZpY2UuYWN0aXZlTW9kYWwgPSBtb2RhbDtcbiAgICAgICAgICAgICAgU2VtYXBob3JlU2VydmljZS5tYWtlQXZhaWxhYmxlQWdhaW4oXCJvcGVuLW1vZGFsXCIpO1xuICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImZvb3RfYmFyXCIpLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICAgICAgICAgICAgTW9kYWxTZXJ2aWNlLmFjdGl2ZU1vZGFsLnNob3coKTtcbiAgICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAkc2NvcGUubG9naW5fb2sgPSBmdW5jdGlvbigpe1xuICAgICAgJHNjb3BlLmxvZ19pbigkc2NvcGUubm9uYXV0aC51c2VyLCRzY29wZS5ub25hdXRoLnBhc3N3b3JkKTtcbiAgICB9XG5cbiAgICAkc2NvcGUuY2xvc2VfbG9naW5fbW9kYWwgPSBmdW5jdGlvbigpe1xuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJmb290X2JhclwiKS5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiO1xuICAgICAgTW9kYWxTZXJ2aWNlLmNoZWNrTm9Nb2RhbElzT3BlbigpO1xuICAgIH1cblxuXG5cbiAgICAkc2NvcGUuc2hvd19zaWduX3VwX21vZGFsID0gZnVuY3Rpb24oKXtcbiAgICAgIC8vY2FyZ2FyIGVsIG1vZGFsIGNvbiBlbCBmb3JtIGRlIHNpZ25fdXAgeSBkZSBhaGkgbGxhbWFyIGFsIHNpZ25fdXBcbiAgICAgIGlmKFNlbWFwaG9yZVNlcnZpY2UudGFrZUlmQXZhaWxhYmxlKFwib3Blbi1tb2RhbFwiKSl7XG4gICAgICAgICRzY29wZS5uZXd1c2VyID0gbmV3IEFycmF5KCk7XG4gICAgICAgICRzY29wZS5uZXd1c2VyLmVtYWlsID0gXCJcIjtcbiAgICAgICAgJHNjb3BlLm5ld3VzZXIucGFzc3dvcmQgPSBcIlwiO1xuICAgICAgICAkc2NvcGUubmV3dXNlci5mdWxsbmFtZSA9IFwiXCI7XG4gICAgICAgICRzY29wZS5uZXd1c2VyLmlkX2RvYyA9IFwiXCI7XG4gICAgICAgICRzY29wZS5uZXd1c2VyLnRlbGVwaG9uZSA9IFwiXCI7XG4gICAgICAgICRzY29wZS5uZXd1c2VyLnBob3RvID0gXCJcIjtcbiAgICAgICAgTW9kYWxTZXJ2aWNlLmNoZWNrTm9Nb2RhbElzT3BlbigpO1xuICAgICAgICBpZihWYWxpZGF0aW9uU2VydmljZS5pc01vYmlsZURldmljZSgpKXtcbiAgICAgICAgICAkaW9uaWNNb2RhbC5mcm9tVGVtcGxhdGVVcmwoJ3RlbXBsYXRlcy9zaWduX3VwLmh0bWwnLCB7XG4gICAgICAgICAgICAgIHNjb3BlOiAkc2NvcGUsXG4gICAgICAgICAgICAgIGhhcmR3YXJlQmFja0J1dHRvbkNsb3NlOiBmYWxzZSxcbiAgICAgICAgICAgICAgYW5pbWF0aW9uOiAnc2xpZGUtaW4tdXAnLFxuICAgICAgICAgICAgICAvL2ZvY3VzRmlyc3RJbnB1dDogdHJ1ZVxuICAgICAgICAgICAgfSkudGhlbihmdW5jdGlvbihtb2RhbCkge1xuICAgICAgICAgICAgICAgICRzY29wZS5oaWRlX3NwZWNpYWxfZGl2cygpO1xuICAgICAgICAgICAgICAgIE1vZGFsU2VydmljZS5hY3RpdmVNb2RhbCA9IG1vZGFsO1xuICAgICAgICAgICAgICAgIFNlbWFwaG9yZVNlcnZpY2UubWFrZUF2YWlsYWJsZUFnYWluKFwib3Blbi1tb2RhbFwiKTtcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImZvb3RfYmFyXCIpLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICAgICAgICAgICAgICBNb2RhbFNlcnZpY2UuYWN0aXZlTW9kYWwuc2hvdygpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1lbHNle1xuICAgICAgICAgICRpb25pY01vZGFsLmZyb21UZW1wbGF0ZVVybCgndGVtcGxhdGVzL3NpZ25fdXBfZGVza3RvcC5odG1sJywge1xuICAgICAgICAgICAgICBzY29wZTogJHNjb3BlLFxuICAgICAgICAgICAgICBoYXJkd2FyZUJhY2tCdXR0b25DbG9zZTogZmFsc2UsXG4gICAgICAgICAgICAgIGFuaW1hdGlvbjogJ3NsaWRlLWluLXVwJyxcbiAgICAgICAgICAgICAgLy9mb2N1c0ZpcnN0SW5wdXQ6IHRydWVcbiAgICAgICAgICAgIH0pLnRoZW4oZnVuY3Rpb24obW9kYWwpIHtcbiAgICAgICAgICAgICAgICAkc2NvcGUuaGlkZV9zcGVjaWFsX2RpdnMoKTtcbiAgICAgICAgICAgICAgICBNb2RhbFNlcnZpY2UuYWN0aXZlTW9kYWwgPSBtb2RhbDtcbiAgICAgICAgICAgICAgICBTZW1hcGhvcmVTZXJ2aWNlLm1ha2VBdmFpbGFibGVBZ2FpbihcIm9wZW4tbW9kYWxcIik7XG4gICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJmb290X2JhclwiKS5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgICAgICAgICAgICAgTW9kYWxTZXJ2aWNlLmFjdGl2ZU1vZGFsLnNob3coKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgIH1cbiAgICB9XG5cbiAgICAkc2NvcGUuY2xvc2Vfc2lnbl91cF9tb2RhbCA9IGZ1bmN0aW9uKCl7XG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImZvb3RfYmFyXCIpLnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XG4gICAgICBNb2RhbFNlcnZpY2UuY2hlY2tOb01vZGFsSXNPcGVuKCk7XG4gICAgfVxuXG4gICAgJHNjb3BlLnNpZ25fdXAgPSBmdW5jdGlvbigpe1xuICAgICAgaWYoU2VtYXBob3JlU2VydmljZS50YWtlSWZBdmFpbGFibGUoXCJzdWJtaXQtZm9ybVwiKSl7XG4gICAgICAgIGlmKENvbm5lY3Rpdml0eVNlcnZpY2UuaXNPbmxpbmUoKSl7XG4gICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzcGlubmVyLWluc2lkZS1tb2RhbFwiKS5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiO1xuICAgICAgICAgIHZhciBmaWVsZHMgPSBuZXcgQXJyYXkoKTtcbiAgICAgICAgICAvKmZpZWxkcy5wdXNoKCRzY29wZS5jcmVhdGVfZmllbGRfYXJyYXkoXCJDb3JyZW8gZWxlY3Ryw7NuaWNvXCIsXCJlbWFpbFwiLCRzY29wZS5uZXd1c2VyLmVtYWlsKSk7XG4gICAgICAgICAgZmllbGRzLnB1c2goJHNjb3BlLmNyZWF0ZV9maWVsZF9hcnJheShcIkNvbnRyYXNlw7FhXCIsXCJub3ROdWxsXCIsJHNjb3BlLm5ld3VzZXIucGFzc3dvcmQpKTtcbiAgICAgICAgICBmaWVsZHMucHVzaCgkc2NvcGUuY3JlYXRlX2ZpZWxkX2FycmF5KFwiVXN1YXJpb1wiLFwibm90TnVsbFwiLCRzY29wZS5uZXd1c2VyLnVzZXJuYW1lKSk7XG4gICAgICAgICAgZmllbGRzLnB1c2goJHNjb3BlLmNyZWF0ZV9maWVsZF9hcnJheShcIkfDqW5lcm9cIixcIm5vdE51bGxcIiwkc2NvcGUubmV3dXNlci5nZW5kZXIpKTtcbiAgICAgICAgICBmaWVsZHMucHVzaCgkc2NvcGUuY3JlYXRlX2ZpZWxkX2FycmF5KFwiSW50ZXJlc2FkbyBlblwiLFwibm90TnVsbFwiLCRzY29wZS5uZXd1c2VyLmludGVyZXN0ZWQpKTtcbiAgICAgICAgICBmaWVsZHMucHVzaCgkc2NvcGUuY3JlYXRlX2ZpZWxkX2FycmF5KFwiRXN0YWRvXCIsXCJub3ROdWxsXCIsJHNjb3BlLm5ld3VzZXIuc3RhdHVzKSk7XG4gICAgICAgICAgZmllbGRzLnB1c2goJHNjb3BlLmNyZWF0ZV9maWVsZF9hcnJheShcIk1vc3RyYXIgdWJpY2FjacOzblwiLFwibm90TnVsbFwiLCRzY29wZS5uZXd1c2VyLnNob3dfbG9jYXRpb24pKTtcbiAgICAgICAgICBmaWVsZHMucHVzaCgkc2NvcGUuY3JlYXRlX2ZpZWxkX2FycmF5X3dpdGhfdHdvRmllbGRzKFwiJ0NvbnRyYXNlw7FhJyB5ICdDb25maXJtYXIgY29udHJhc2XDsWEnXCIsXCJlcXVhbHNUb1wiLCRzY29wZS5uZXd1c2VyLnBhc3N3b3JkLCAkc2NvcGUubmV3dXNlci5yZXBhc3N3b3JkKSk7Ki9cbiAgICAgICAgICAvL2lmKEVycm9yU2VydmljZS5jaGVja19maWVsZHMoZmllbGRzLFwiZXJyb3JfY29udGFpbmVyXCIpKXtcbiAgICAgICAgICAgIGlmKCRzY29wZS5uZXd1c2VyLnBpY3R1cmVfdXJsIT1udWxsICYmICRzY29wZS5uZXd1c2VyLnBpY3R1cmVfdXJsIT1cIlwiICYmIFZhbGlkYXRpb25TZXJ2aWNlLmlzTW9iaWxlRGV2aWNlKCkpe1xuICAgICAgICAgICAgICBBdXRoU2VydmljZS5jcmVhdGVfdXNlcigkc2NvcGUubmV3dXNlcikudGhlbihmdW5jdGlvbihkYXRhKXtcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNlbnRfbGFiZWxcIikuaW5uZXJIVE1MID0gXCJFbnZpYWRvOiAxMDAlXCI7XG4gICAgICAgICAgICAgICAgaWYoRXJyb3JTZXJ2aWNlLmh0dHBfZGF0YV9yZXNwb25zZV9pc19zdWNjZXNzZnVsKGRhdGEsXCJlcnJvcl9jb250YWluZXJcIikpe1xuICAgICAgICAgICAgICAgICAgZGF0YSA9ICRzY29wZS5nZXRPYmplY3REYXRhRnJvbVJlc3BvbnNlKGRhdGEpO1xuICAgICAgICAgICAgICAgICAgVXNlclNlcnZpY2Uuc2F2ZV91c2VyX2RhdGEoZGF0YS5uYW1lLCBkYXRhLmVtYWlsLCAkc2NvcGUubmV3dXNlci5wYXNzd29yZCwgZGF0YS5pZGVudGl0eV9kb2N1bWVudCwgZGF0YS5waG9uZSwgZGF0YS5waWN0dXJlX3VybCk7XG4gICAgICAgICAgICAgICAgICBVc2VyU2VydmljZS5zYXZlX3VzZXJfZGF0YShkYXRhLk5hbWUsICRzY29wZS5uZXd1c2VyLnBhc3N3b3JkLCBkYXRhLlBob3RvLCBkYXRhLlNob3dMb2NhdGlvbiwgZGF0YS5VaWQsIGRhdGEuRXN0YWRvLCBkYXRhLkdlbmRlciwgZGF0YS5JbnRlcmVzdGVkSW4pO1xuICAgICAgICAgICAgICAgICAgREJTZXJ2aWNlLnNhdmVVc2VyKGRhdGEuTmFtZSxwYXNzd29yZCxkYXRhLlBob3RvLGRhdGEuU2hvd0xvY2F0aW9uLGRhdGEuVWlkLGRhdGEuRXN0YWRvLCBkYXRhLkdlbmRlciwgZGF0YS5JbnRlcmVzdGVkSW4pO1xuICAgICAgICAgICAgICAgICAgU2VtYXBob3JlU2VydmljZS5tYWtlQXZhaWxhYmxlQWdhaW4oXCJzdWJtaXQtZm9ybVwiKTtcbiAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic3Bpbm5lci1pbnNpZGUtbW9kYWxcIikuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgICAgICAgICAgICAgICAgJHNjb3BlLmNsb3NlX2VkaXRfcHJvZmlsZV9tb2RhbCgpO1xuICAgICAgICAgICAgICAgICAgJHNjb3BlLmNoZWNrX3VzZXJfbG9nZ2VkKCk7XG4gICAgICAgICAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICAgICAgICBTZW1hcGhvcmVTZXJ2aWNlLm1ha2VBdmFpbGFibGVBZ2FpbihcInN1Ym1pdC1mb3JtXCIpO1xuICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzcGlubmVyLWluc2lkZS1tb2RhbFwiKS5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9LGZ1bmN0aW9uKGVycil7XG4gICAgICAgICAgICAgICAgU2VtYXBob3JlU2VydmljZS5tYWtlQXZhaWxhYmxlQWdhaW4oXCJzdWJtaXQtZm9ybVwiKTtcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNwaW5uZXItaW5zaWRlLW1vZGFsXCIpLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9ZWxzZXtcbiAgICAgICAgICAgICAgICBBdXRoU2VydmljZS5jcmVhdGVfdXNlcigkc2NvcGUubmV3dXNlcikudGhlbihmdW5jdGlvbihyZXNwKSB7XG4gICAgICAgICAgICAgICAgaWYoRXJyb3JTZXJ2aWNlLmh0dHBfcmVzcG9uc2VfaXNfc3VjY2Vzc2Z1bChyZXNwLFwiZXJyb3JfY29udGFpbmVyXCIpKXtcbiAgICAgICAgICAgICAgICAgIFVzZXJTZXJ2aWNlLnNhdmVfdXNlcl9kYXRhKCRzY29wZS5nZXRPYmplY3REYXRhRnJvbVJlc3BvbnNlKHJlc3ApLk5hbWUsICRzY29wZS5uZXd1c2VyLnBhc3N3b3JkLCAkc2NvcGUuZ2V0T2JqZWN0RGF0YUZyb21SZXNwb25zZShyZXNwKS5QaG90bywgJHNjb3BlLmdldE9iamVjdERhdGFGcm9tUmVzcG9uc2UocmVzcCkuU2hvd0xvY2F0aW9uLCAkc2NvcGUuZ2V0T2JqZWN0RGF0YUZyb21SZXNwb25zZShyZXNwKS5VaWQsICRzY29wZS5nZXRPYmplY3REYXRhRnJvbVJlc3BvbnNlKHJlc3ApLkVzdGFkbywgJHNjb3BlLmdldE9iamVjdERhdGFGcm9tUmVzcG9uc2UocmVzcCkuR2VuZGVyLCAkc2NvcGUuZ2V0T2JqZWN0RGF0YUZyb21SZXNwb25zZShyZXNwKS5JbnRlcmVzdGVkSW4pO1xuICAgICAgICAgICAgICAgICAgREJTZXJ2aWNlLnNhdmVVc2VyKCRzY29wZS5nZXRPYmplY3REYXRhRnJvbVJlc3BvbnNlKHJlc3ApLk5hbWUsJHNjb3BlLm5ld3VzZXIucGFzc3dvcmQsJHNjb3BlLmdldE9iamVjdERhdGFGcm9tUmVzcG9uc2UocmVzcCkuUGhvdG8sJHNjb3BlLmdldE9iamVjdERhdGFGcm9tUmVzcG9uc2UocmVzcCkuU2hvd0xvY2F0aW9uLCRzY29wZS5nZXRPYmplY3REYXRhRnJvbVJlc3BvbnNlKHJlc3ApLlVpZCwkc2NvcGUuZ2V0T2JqZWN0RGF0YUZyb21SZXNwb25zZShyZXNwKS5Fc3RhZG8sICRzY29wZS5nZXRPYmplY3REYXRhRnJvbVJlc3BvbnNlKHJlc3ApLkdlbmRlciwgJHNjb3BlLmdldE9iamVjdERhdGFGcm9tUmVzcG9uc2UocmVzcCkuSW50ZXJlc3RlZEluKTtcbiAgICAgICAgICAgICAgICAgIC8vJHNjb3BlLnNldF91c2VyX3BpY3R1cmUoMSk7XG4gICAgICAgICAgICAgICAgICBTZW1hcGhvcmVTZXJ2aWNlLm1ha2VBdmFpbGFibGVBZ2FpbihcInN1Ym1pdC1mb3JtXCIpO1xuICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzcGlubmVyLWluc2lkZS1tb2RhbFwiKS5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgICAgICAgICAgICAgICAkc2NvcGUuY2xvc2Vfc2lnbl91cF9tb2RhbCgpO1xuICAgICAgICAgICAgICAgICAgdmFyIGFsZXJ0UG9wdXAgPSAkaW9uaWNQb3B1cC5hbGVydCh7XG4gICAgICAgICAgICAgICAgICAgdGl0bGU6IFwiVXN1YXJpbyBjcmVhZG8gY29uIMOpeGl0b1wiLFxuICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlOiAkc2NvcGUuZ2V0T2JqZWN0RGF0YUZyb21SZXNwb25zZShyZXNwKS5tZXNzYWdlXG4gICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgIGFsZXJ0UG9wdXAudGhlbihmdW5jdGlvbihyZXMpIHtcbiAgICAgICAgICAgICAgICAgICAgLy9yZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICRzY29wZS5jaGVja191c2VyX2xvZ2dlZCgpO1xuICAgICAgICAgICAgICAgIH1lbHNle1xuICAgICAgICAgICAgICAgICAgU2VtYXBob3JlU2VydmljZS5tYWtlQXZhaWxhYmxlQWdhaW4oXCJzdWJtaXQtZm9ybVwiKTtcbiAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic3Bpbm5lci1pbnNpZGUtbW9kYWxcIikuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSwgZnVuY3Rpb24ocmVzcCkge1xuICAgICAgICAgICAgICAgIFNlbWFwaG9yZVNlcnZpY2UubWFrZUF2YWlsYWJsZUFnYWluKFwic3VibWl0LWZvcm1cIik7XG4gICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzcGlubmVyLWluc2lkZS1tb2RhbFwiKS5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgICAgICAgICAgICAgRXJyb3JTZXJ2aWNlLnNob3dfZXJyb3JfbWVzc2FnZShcImVycm9yX2NvbnRhaW5lclwiLHJlc3Auc3RhdHVzVGV4dCk7XG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIC8qfWVsc2V7XG4gICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNwaW5uZXItaW5zaWRlLW1vZGFsXCIpLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICAgICAgICB9Ki9cbiAgICAgICAgfWVsc2V7XG4gICAgICAgICAgU2VtYXBob3JlU2VydmljZS5tYWtlQXZhaWxhYmxlQWdhaW4oXCJzdWJtaXQtZm9ybVwiKTtcbiAgICAgICAgICBQb3BVcFNlcnZpY2Uuc2hvd19hbGVydChcIlNpbiBjb25leGnDs24gYSBpbnRlcm5ldFwiLFwiUGFyYSBpbmljaWFyIHJlZ2lzdHJhcnNlIGRlYmUgZXN0YXIgY29uZWN0YWRvIGEgaW50ZXJuZXRcIik7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAkc2NvcGUuc2lnbl91cF9vayA9IGZ1bmN0aW9uKCl7XG4gICAgICAvL2NvbnNvbGUubG9nKCRzY29wZS5uZXd1c2VyKTtcbiAgICAgICRzY29wZS5zaWduX3VwKCk7XG4gICAgfVxuXG4gICAgJHNjb3BlLmNoZWNrX3VzZXJfbG9nZ2VkID0gZnVuY3Rpb24oKXtcbiAgICAgIHZhciBuYW1lID0gVXNlclNlcnZpY2UubmFtZTtcbiAgICAgIGlmKG5hbWU9PW51bGwpe1xuICAgICAgICAgIC8vU2kgSGF5IHVuIHVzdWFyaW8gZ3VhcmRhZG9cbiAgICAgICAgICB2YXIgdXNlciA9IERCU2VydmljZS5nZXRVc2VyKCk7XG4gICAgICAgICAgdXNlci50aGVuKGZ1bmN0aW9uIChkb2MpIHtcbiAgICAgICAgICAgIGlmKGRvYy5uYW1lIT1udWxsICYmIGRvYy5uYW1lIT1cIlwiICYmIGRvYy5uYW1lIT1cInVuZGVmaW5lZFwiKXtcbiAgICAgICAgICAgICAgJHNjb3BlLmxvZ19pbl9iYWNrZ3JvdW5kKGRvYy5uYW1lLCBkb2MucGFzc3dvcmQpO1xuICAgICAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICAgICRzY29wZS5zZXRfdXNlcl9waWN0dXJlKDApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgICAgICAgICRzY29wZS5zZXRfdXNlcl9waWN0dXJlKDApO1xuICAgICAgICAgIH0pO1xuICAgICAgfWVsc2V7XG4gICAgICAgIC8vRXN0w6EgbG9ndWVhZG9cbiAgICAgICAgaWYoVXNlclNlcnZpY2UucGljdHVyZV91cmw9PW51bGwgfHwgVXNlclNlcnZpY2UucGljdHVyZV91cmw9PVwiXCIpe1xuICAgICAgICAgIC8vRWwgdXN1YXJpbyBubyB0aWVuZSBmb3RvIGRlZmluaWRhXG4gICAgICAgICAgJHNjb3BlLnNldF91c2VyX3BpY3R1cmUoMCk7XG4gICAgICAgIH1lbHNle1xuICAgICAgICAgIC8vRWwgdXN1YXJpbyB0aWVuZSBmb3RvXG4gICAgICAgICAgJHNjb3BlLnNldF91c2VyX3BpY3R1cmUoMSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAkc2NvcGUuc2V0X29mZmxpbmVfdXNlciA9IGZ1bmN0aW9uKCl7XG4gICAgICB2YXIgbmFtZSA9IFVzZXJTZXJ2aWNlLm5hbWU7XG4gICAgICBpZihuYW1lPT1udWxsKXtcbiAgICAgICAgICAvL1NpIEhheSB1biB1c3VhcmlvIGd1YXJkYWRvXG4gICAgICAgICAgdmFyIHVzZXIgPSBEQlNlcnZpY2UuZ2V0VXNlcigpO1xuICAgICAgICAgIHVzZXIudGhlbihmdW5jdGlvbiAoZG9jKSB7XG4gICAgICAgICAgICBpZihkb2MubmFtZSE9bnVsbCAmJiBkb2MubmFtZSE9XCJcIiAmJiBkb2MubmFtZSE9XCJ1bmRlZmluZWRcIil7XG4gICAgICAgICAgICAgIFVzZXJTZXJ2aWNlLnNhdmVfdXNlcl9kYXRhKGRvYy5uYW1lLCBkb2MucGFzc3dvcmQsIGRvYy5waWN0dXJlX3VybCwgZG9jLnNob3dfbG9jYXRpb24pO1xuICAgICAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICAgICRzY29wZS5zZXRfdXNlcl9waWN0dXJlKDApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgICAgICAgICRzY29wZS5zZXRfdXNlcl9waWN0dXJlKDApO1xuICAgICAgICAgIH0pO1xuICAgICAgfWVsc2V7XG4gICAgICAgIC8vRXN0w6EgbG9ndWVhZG9cbiAgICAgICAgaWYoVXNlclNlcnZpY2UucGljdHVyZV91cmw9PW51bGwgfHwgVXNlclNlcnZpY2UucGljdHVyZV91cmw9PVwiXCIpe1xuICAgICAgICAgIC8vRWwgdXN1YXJpbyBubyB0aWVuZSBmb3RvIGRlZmluaWRhXG4gICAgICAgICAgJHNjb3BlLnNldF91c2VyX3BpY3R1cmUoMCk7XG4gICAgICAgIH1lbHNle1xuICAgICAgICAgIC8vRWwgdXN1YXJpbyB0aWVuZSBmb3RvXG4gICAgICAgICAgJHNjb3BlLnNldF91c2VyX3BpY3R1cmUoMSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cblxuXG4gICAgJHNjb3BlLnNldF91c2VyX3BpY3R1cmUgPSBmdW5jdGlvbihoYXNQaG90byl7XG4gICAgICB2YXIgcGljdHVyZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidXNlcl9waWN0dXJlXCIpO1xuICAgICAgaWYoaGFzUGhvdG89PTApe1xuICAgICAgICAvL3BpY3R1cmUuc3R5bGUuYmFja2dyb3VuZEltYWdlID0gXCJ1cmwoLi9pbWcvaWNvbi11c2VyLWFub255bW91cy5wbmcpXCI7XG4gICAgICAgICRzY29wZS51c2VyX2NhY2hlZF9pbWFnZT1cIi4vaW1nL2ljb24tdXNlci1hbm9ueW1vdXMucG5nXCI7XG4gICAgICB9ZWxzZXtcbiAgICAgICAgaWYoVXNlclNlcnZpY2UucGljdHVyZV91cmwhPW51bGwgJiYgVXNlclNlcnZpY2UucGljdHVyZV91cmwhPVwiXCIpe1xuICAgICAgICAgIC8vYWxlcnQoVXNlclNlcnZpY2UucGljdHVyZV91cmwpO1xuICAgICAgICAgICRzY29wZS51c2VyX2NhY2hlZF9pbWFnZT1Vc2VyU2VydmljZS5waWN0dXJlX3VybDtcbiAgICAgICAgICAvL3BpY3R1cmUuc3R5bGUuYmFja2dyb3VuZEltYWdlID0gXCJ1cmwoXCIgKyBVc2VyU2VydmljZS5waWN0dXJlX3VybCArIFwiKVwiO1xuICAgICAgICB9ZWxzZXtcbiAgICAgICAgICAvL3BpY3R1cmUuc3R5bGUuYmFja2dyb3VuZEltYWdlID0gXCJ1cmwoLi9pbWcvaWNvbi11c2VyLWFub255bW91cy5wbmcpXCI7XG4gICAgICAgICAgJHNjb3BlLnVzZXJfY2FjaGVkX2ltYWdlPVwiLi9pbWcvaWNvbi11c2VyLWFub255bW91cy5wbmdcIjtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgfVxuXG4gICAgJHNjb3BlLmZpbmRfbWUgPSBmdW5jdGlvbigpe1xuICAgICAgICAkc2NvcGUuc2V0X2FjdGl2ZV9vcHRpb24oXCJidXR0b24tZmluZC1tZVwiKTtcbiAgICAgICAgJHNjb3BlLmhpZGVfc3BlY2lhbF9kaXZzKCk7XG4gICAgICAgIHZhciBwb3NPcHRpb25zID0ge3RpbWVvdXQ6IDEwMDAwLCBlbmFibGVIaWdoQWNjdXJhY3k6IHRydWV9O1xuICAgICAgICAkY29yZG92YUdlb2xvY2F0aW9uXG4gICAgICAgICAgLmdldEN1cnJlbnRQb3NpdGlvbihwb3NPcHRpb25zKVxuICAgICAgICAgIC50aGVuKGZ1bmN0aW9uIChwb3NpdGlvbikge1xuICAgICAgICAgICAgICAgICRzY29wZS5tYXAuY2VudGVyLmxhdCAgPSBwb3NpdGlvbi5jb29yZHMubGF0aXR1ZGU7XG4gICAgICAgICAgICAgICAgJHNjb3BlLm1hcC5jZW50ZXIubG5nID0gcG9zaXRpb24uY29vcmRzLmxvbmdpdHVkZTtcbiAgICAgICAgICAgICAgICBMb2NhdGlvbnNTZXJ2aWNlLnNhdmVfbmV3X3JlcG9ydF9wb3NpdGlvbihwb3NpdGlvbi5jb29yZHMubGF0aXR1ZGUscG9zaXRpb24uY29vcmRzLmxvbmdpdHVkZSk7XG4gICAgICAgICAgICAgICAgaWYoQ29ubmVjdGl2aXR5U2VydmljZS5pc09ubGluZSgpKXtcbiAgICAgICAgICAgICAgICAgICRzY29wZS5tYXAuY2VudGVyLnpvb20gPSAxODtcbiAgICAgICAgICAgICAgICB9ZWxzZXtcbiAgICAgICAgICAgICAgICAgICRzY29wZS5tYXAuY2VudGVyLnpvb20gPSAxNjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgJHNjb3BlLm1hcC5tYXJrZXJzLm5vdyA9IHtcbiAgICAgICAgICAgICAgICAgIGxhdDpwb3NpdGlvbi5jb29yZHMubGF0aXR1ZGUsXG4gICAgICAgICAgICAgICAgICBsbmc6cG9zaXRpb24uY29vcmRzLmxvbmdpdHVkZSxcbiAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6IFwiPHAgYWxpZ249J2NlbnRlcic+VGUgZW5jdWVudHJhcyBhcXXDrSA8YnIvPiA8YSBuZy1jbGljaz0nbmV3X3JlcG9ydCgxKTsnPkluaWNpYXIgcmVwb3J0ZSBlbiB0dSBwb3NpY2nDs24gYWN0dWFsPC9hPjwvcD5cIixcbiAgICAgICAgICAgICAgICAgIGZvY3VzOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgZHJhZ2dhYmxlOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgIGdldE1lc3NhZ2VTY29wZTogZnVuY3Rpb24oKSB7IHJldHVybiAkc2NvcGU7IH1cbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIC8vJHNjb3BlLm1hcC5tYXJrZXJzLm5vdy5vcGVuUG9wdXAoKTtcbiAgICAgICAgICAgICAgfSwgZnVuY3Rpb24oZXJyKSB7XG4gICAgICAgICAgICAgICAgLy8gZXJyb3JcbiAgICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKFwiTG9jYXRpb24gZXJyb3IhXCIpO1xuICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2coZXJyKTtcbiAgICAgICAgICAgICAgICAvL0Vycm9yU2VydmljZS5zaG93X2Vycm9yX21lc3NhZ2VfcG9wdXAoXCJObyBoZW1vcyBwb2RpZG8gZ2VvbG9jYWxpemFybG8uIMK/VGFsIHZleiBvbHZpZMOzIGhhYmlsaXRhciBsb3Mgc2VydmljaW9zIGRlIGxvY2FsaXphY2nDs24gZW4gc3UgZGlzcG9zaXRpdm8/XCIpXG4gICAgICAgICAgICAgICAgJHNjb3BlLm9wZW5Db3VuY2lsU2VsZWN0b3IoKTtcbiAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICB9O1xuXG4gIH1cblxuXSk7XG4iLCJwbWJfaW0uc2VydmljZXMuZmFjdG9yeSgnQXV0aFNlcnZpY2UnLCBbJyRodHRwJywgJyRjb3Jkb3ZhRmlsZVRyYW5zZmVyJywgJ0NvbmZpZ1NlcnZpY2UnLCdWYWxpZGF0aW9uU2VydmljZScsIGZ1bmN0aW9uKCRodHRwLCAkY29yZG92YUZpbGVUcmFuc2ZlciwgQ29uZmlnU2VydmljZSwgVmFsaWRhdGlvblNlcnZpY2UpIHtcblxuICB2YXIgYmFzZVVSTCA9IENvbmZpZ1NlcnZpY2UuYmFzZVVSTCArIFwiL2FwaS9cIjtcblxuICByZXR1cm4ge1xuICAgIGxvZ19pbjogZnVuY3Rpb24gKHVzZXIscGFzc3dvcmQpIHtcbiAgICAgICAgdmFyIGJvZHkgPSAndXNlcj0nK3VzZXIrJyZwYXNzd29yZD0nK3Bhc3N3b3JkO1xuICAgICAgICByZXR1cm4gJGh0dHAucG9zdChiYXNlVVJMICsgJ2xvZ2luJywgYm9keSx7d2l0aENyZWRlbnRpYWxzOiB0cnVlLCBoZWFkZXJzOiB7J0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnfX0pO1xuICAgIH0sXG5cbiAgICBzaWduX291dDogZnVuY3Rpb24gKHBhc3N3b3JkLCBlbWFpbCkge1xuICAgICAgcmV0dXJuICRodHRwLmdldChiYXNlVVJMICsgXCJzaWduX291dFwiLCB7IHdpdGhDcmVkZW50aWFsczogdHJ1ZSwgcGFyYW1zOiB7IHBhc3N3b3JkX3NpZ25faW46IHBhc3N3b3JkLCBlbWFpbDogZW1haWwgfSB9KTtcbiAgICB9LFxuXG4gICAgY3JlYXRlX3VzZXI6IGZ1bmN0aW9uICh1c2VyT2JqKSB7XG4gICAgICBpZih1c2VyT2JqLnBpY3R1cmVfdXJsICYmIFZhbGlkYXRpb25TZXJ2aWNlLmlzTW9iaWxlRGV2aWNlKCkpe1xuICAgICAgICB2YXIgb3B0aW9ucyA9IHtcbiAgICAgICAgIGZpbGVLZXk6IFwicGhvdG9cIixcbiAgICAgICAgIC8vZmlsZU5hbWU6IGZpbGVuYW1lLFxuICAgICAgICAgLy9jaHVua2VkTW9kZTogZmFsc2UsXG4gICAgICAgICAvL21pbWVUeXBlOiBcImltYWdlL2pwZ1wiLFxuICAgICAgICAgd2l0aENyZWRlbnRpYWxzOiB0cnVlLFxuICAgICAgICAgcGFyYW1zIDogeyAgdXNlcjogdXNlck9iai51c2VybmFtZSxcbiAgICAgICAgICAgICAgICAgICAgIHBhc3N3b3JkOiB1c2VyT2JqLnBhc3N3b3JkLFxuICAgICAgICAgICAgICAgICAgICAgZW1haWw6IHVzZXJPYmouZW1haWwsXG4gICAgICAgICAgICAgICAgICAgICBnZW5kZXI6IHVzZXJPYmouZ2VuZGVyLFxuICAgICAgICAgICAgICAgICAgICAgaW50ZXJlc3RlZDogdXNlck9iai5pbnRlcmVzdGVkLFxuICAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiB1c2VyT2JqLnN0YXR1cyxcbiAgICAgICAgICAgICAgICAgICAgIHNob3dfbG9jYXRpb246IHVzZXJPYmouc2hvd19sb2NhdGlvbixcbiAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIHZhciB0cnVzdEFsbEhvc3RzID0gdHJ1ZTtcbiAgICAgICAgcmV0dXJuICRjb3Jkb3ZhRmlsZVRyYW5zZmVyLnVwbG9hZChiYXNlVVJMICsgXCJjcmVhdGVfdXNlclwiLCB1c2VyT2JqLnBpY3R1cmVfdXJsLCBvcHRpb25zLCB0cnVzdEFsbEhvc3RzKTtcbiAgICAgIH1lbHNle1xuICAgICAgICBpZih1c2VyT2JqLnBpY3R1cmVfdXJsKXtcbiAgICAgICAgICB2YXIgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKTtcbiAgICAgICAgXHRmb3JtRGF0YS5hcHBlbmQoXCJwaG90b1wiLCB1c2VyT2JqLnBpY3R1cmVfdXJsKTtcbiAgICAgICAgXHRmb3JtRGF0YS5hcHBlbmQoXCJ1c2VyXCIsIHVzZXJPYmoudXNlcm5hbWUpO1xuICAgICAgICBcdGZvcm1EYXRhLmFwcGVuZChcInBhc3N3b3JkXCIsIHVzZXJPYmoucGFzc3dvcmQpO1xuICAgICAgICBcdGZvcm1EYXRhLmFwcGVuZChcImVtYWlsXCIsIHVzZXJPYmouZW1haWwpO1xuICAgICAgICBcdGZvcm1EYXRhLmFwcGVuZChcImdlbmRlclwiLCB1c2VyT2JqLmdlbmRlcik7XG4gICAgICAgIFx0Zm9ybURhdGEuYXBwZW5kKFwiaW50ZXJlc3RlZFwiLCB1c2VyT2JqLmludGVyZXN0ZWQpO1xuICAgICAgICBcdGZvcm1EYXRhLmFwcGVuZChcInN0YXR1c1wiLCB1c2VyT2JqLnN0YXR1cyk7XG4gICAgICAgIFx0Zm9ybURhdGEuYXBwZW5kKFwic2hvd19sb2NhdGlvblwiLCB1c2VyT2JqLnNob3dfbG9jYXRpb24pO1xuICAgICAgICAgIHJldHVybiAkaHR0cC5wb3N0KGJhc2VVUkwgKyAnY3JlYXRlX3VzZXInLCBmb3JtRGF0YSwge1xuICAgICAgICAgICAgICBoZWFkZXJzOiB7ICdDb250ZW50LVR5cGUnOiB1bmRlZmluZWQgfSxcbiAgICAgICAgICAgICAgdHJhbnNmb3JtUmVxdWVzdDogYW5ndWxhci5pZGVudGl0eVxuICAgICAgICAgIH0pO1xuICAgICAgICB9ZWxzZXtcbiAgICAgICAgICB2YXIgYm9keSA9ICd1c2VyPScrdXNlck9iai51c2VybmFtZSsnJnBhc3N3b3JkPScrdXNlck9iai5wYXNzd29yZCsnJmVtYWlsPScrdXNlck9iai5lbWFpbCsnJmdlbmRlcj0nK3VzZXJPYmouZ2VuZGVyO1xuICAgICAgICAgIGJvZHkgPSBib2R5ICsnJmludGVyZXN0ZWQ9Jyt1c2VyT2JqLmludGVyZXN0ZWQrJyZzdGF0dXM9Jyt1c2VyT2JqLnN0YXR1cysnJnNob3dfbG9jYXRpb249Jyt1c2VyT2JqLnNob3dfbG9jYXRpb247XG4gICAgICAgICAgcmV0dXJuICRodHRwLnBvc3QoYmFzZVVSTCArICdjcmVhdGVfdXNlcicsIGJvZHkse3dpdGhDcmVkZW50aWFsczogdHJ1ZSwgaGVhZGVyczogeydDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJ319KTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgfSxcblxuICAgIHBhc3N3b3JkX3JlY292ZXJ5OiBmdW5jdGlvbiAoZW1haWwpIHtcbiAgICAgIHJldHVybiAkaHR0cC5nZXQoYmFzZVVSTCArIFwiZm9yZ290X3Bhc3N3b3JkXCIsIHsgcGFyYW1zOiB7IGxvZ2luX2VtYWlsOiBlbWFpbH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICB9LFxuXG4gICAgcGFzc3dvcmRfY2hhbmdlOiBmdW5jdGlvbiAoZW1haWwsb2xkUGFzc3dvcmQsbmV3UGFzc3dvcmQsY29uZmlybVBhc3N3b3JkKSB7XG5cbiAgICAgIHZhciBib2R5ID0gJ2VtYWlsPScrZW1haWwrJyZwYXNzd29yZF9zaWduX2luPScrb2xkUGFzc3dvcmQrJyZuZXdfcGFzc3dvcmQ9JytuZXdQYXNzd29yZCsnJmNvbmZpcm09Jytjb25maXJtUGFzc3dvcmQ7XG4gICAgICByZXR1cm4gJGh0dHAucG9zdChiYXNlVVJMICsgJ2NoYW5nZV9wYXNzd29yZCcsIGJvZHkse2hlYWRlcnM6IHsnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCd9fSk7XG5cbiAgICB9LFxuXG5cbiAgICBlZGl0X3VzZXI6IGZ1bmN0aW9uICh1c2VyT2JqKSB7XG4gICAgICBpZih1c2VyT2JqLnBpY3R1cmVfdXJsICYmIFZhbGlkYXRpb25TZXJ2aWNlLmlzTW9iaWxlRGV2aWNlKCkpe1xuICAgICAgICB2YXIgb3B0aW9ucyA9IHtcbiAgICAgICAgIGZpbGVLZXk6IFwicGhvdG9cIixcbiAgICAgICAgIC8vZmlsZU5hbWU6IGZpbGVuYW1lLFxuICAgICAgICAgLy9jaHVua2VkTW9kZTogZmFsc2UsXG4gICAgICAgICAvL21pbWVUeXBlOiBcImltYWdlL2pwZ1wiLFxuICAgICAgICAgd2l0aENyZWRlbnRpYWxzOiB0cnVlLFxuICAgICAgICAgcGFyYW1zIDogeyAgdXNlcjogdXNlck9iai51c2VybmFtZSxcbiAgICAgICAgICAgICAgICAgICAgIHBhc3N3b3JkOiB1c2VyT2JqLnBhc3N3b3JkLFxuICAgICAgICAgICAgICAgICAgICAgZW1haWw6IHVzZXJPYmouZW1haWwsXG4gICAgICAgICAgICAgICAgICAgICBnZW5kZXI6IHVzZXJPYmouZ2VuZGVyLFxuICAgICAgICAgICAgICAgICAgICAgaW50ZXJlc3RlZDogdXNlck9iai5pbnRlcmVzdGVkLFxuICAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiB1c2VyT2JqLnN0YXR1cyxcbiAgICAgICAgICAgICAgICAgICAgIHNob3dfbG9jYXRpb246IHVzZXJPYmouc2hvd19sb2NhdGlvbixcbiAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIHZhciB0cnVzdEFsbEhvc3RzID0gdHJ1ZTtcbiAgICAgICAgcmV0dXJuICRjb3Jkb3ZhRmlsZVRyYW5zZmVyLnVwbG9hZChiYXNlVVJMICsgXCJlZGl0X3Byb2ZpbGVcIiwgdXNlck9iai5waWN0dXJlX3VybCwgb3B0aW9ucywgdHJ1c3RBbGxIb3N0cyk7XG4gICAgICB9ZWxzZXtcbiAgICAgICAgdmFyIGJvZHkgPSAndXNlcj0nK3VzZXJPYmoudXNlcm5hbWUrJyZwYXNzd29yZD0nK3VzZXJPYmoucGFzc3dvcmQrJyZlbWFpbD0nK3VzZXJPYmouZW1haWwrJyZnZW5kZXI9Jyt1c2VyT2JqLmdlbmRlcjtcbiAgICAgICAgYm9keSA9IGJvZHkgKycmaW50ZXJlc3RlZD0nK3VzZXJPYmouaW50ZXJlc3RlZCsnJnN0YXR1cz0nK3VzZXJPYmouc3RhdHVzKycmc2hvd19sb2NhdGlvbj0nK3VzZXJPYmouc2hvd19sb2NhdGlvbjtcbiAgICAgICAgaWYodXNlck9iai5waWN0dXJlX3VybCl7XG4gICAgICAgICAgdmFyIGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKCk7XG4gICAgICAgIFx0Zm9ybURhdGEuYXBwZW5kKFwicGhvdG9cIiwgdXNlck9iai5waWN0dXJlX3VybCk7XG4gICAgICAgIFx0Zm9ybURhdGEuYXBwZW5kKFwidXNlclwiLCB1c2VyT2JqLnVzZXJuYW1lKTtcbiAgICAgICAgXHRmb3JtRGF0YS5hcHBlbmQoXCJwYXNzd29yZFwiLCB1c2VyT2JqLnBhc3N3b3JkKTtcbiAgICAgICAgXHRmb3JtRGF0YS5hcHBlbmQoXCJlbWFpbFwiLCB1c2VyT2JqLmVtYWlsKTtcbiAgICAgICAgXHRmb3JtRGF0YS5hcHBlbmQoXCJnZW5kZXJcIiwgdXNlck9iai5nZW5kZXIpO1xuICAgICAgICBcdGZvcm1EYXRhLmFwcGVuZChcImludGVyZXN0ZWRcIiwgdXNlck9iai5pbnRlcmVzdGVkKTtcbiAgICAgICAgXHRmb3JtRGF0YS5hcHBlbmQoXCJzdGF0dXNcIiwgdXNlck9iai5zdGF0dXMpO1xuICAgICAgICBcdGZvcm1EYXRhLmFwcGVuZChcInNob3dfbG9jYXRpb25cIiwgdXNlck9iai5zaG93X2xvY2F0aW9uKTtcbiAgICAgICAgICByZXR1cm4gJGh0dHAucG9zdChiYXNlVVJMICsgJ2VkaXRfcHJvZmlsZScsIGZvcm1EYXRhLCB7XG4gICAgICAgICAgICAgIGhlYWRlcnM6IHsgJ0NvbnRlbnQtVHlwZSc6IHVuZGVmaW5lZCB9LFxuICAgICAgICAgICAgICB0cmFuc2Zvcm1SZXF1ZXN0OiBhbmd1bGFyLmlkZW50aXR5XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1lbHNle1xuICAgICAgICAgIHJldHVybiAkaHR0cC5wb3N0KGJhc2VVUkwgKyAnZWRpdF9wcm9maWxlJywgYm9keSx7d2l0aENyZWRlbnRpYWxzOiB0cnVlLCBoZWFkZXJzOiB7J0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnfX0pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gIH07XG59XSk7XG4iLCJwbWJfaW0uc2VydmljZXMuZmFjdG9yeSgnQ29uZmlnU2VydmljZScsIFsnJGh0dHAnLCBmdW5jdGlvbigkaHR0cCkge1xuXG4gIHZhciBDb25maWdPYmogPSB7fTtcbiAgQ29uZmlnT2JqLmJhc2VVUkwgPSBcImh0dHA6Ly9iYWNrZW5kLmVkdWNhY2lvbi50aG9yLmRhdGF1eS5vcmdcIjtcbiAgaWYoaW9uaWMuUGxhdGZvcm0uaXNXZWJWaWV3KCkpe1xuICAgIENvbmZpZ09iai5iYXNlVVJMID0gXCJodHRwOi8vYmFja2VuZC5lZHVjYWNpb24udGhvci5kYXRhdXkub3JnXCI7XG4gIH0gZWxzZSB7XG4gICAgQ29uZmlnT2JqLmJhc2VVUkwgPSBcIi9iYWNrZW5kXCI7XG4gIH1cbiAgQ29uZmlnT2JqLkFwcE5hbWUgPSBcIkVsaWpvIEVzdHVkaWFyXCI7XG5cblxuICByZXR1cm4gQ29uZmlnT2JqO1xuXG59XSk7XG4iLCJwbWJfaW0uc2VydmljZXMuZmFjdG9yeSgnQ29ubmVjdGl2aXR5U2VydmljZScsIFsnJGNvcmRvdmFOZXR3b3JrJywgZnVuY3Rpb24oJGNvcmRvdmFOZXR3b3JrKXtcblxuICByZXR1cm4ge1xuICAgIGlzT25saW5lOiBmdW5jdGlvbigpe1xuICAgICAgLyppZihpb25pYy5QbGF0Zm9ybS5pc1dlYlZpZXcoKSl7XG4gICAgICAgIHJldHVybiAkY29yZG92YU5ldHdvcmsuaXNPbmxpbmUoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBuYXZpZ2F0b3Iub25MaW5lO1xuICAgICAgICAvL3JldHVybiBmYWxzZTtcbiAgICAgIH0qL1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSxcbiAgICBpc09mZmxpbmU6IGZ1bmN0aW9uKCl7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAvKmlmKGlvbmljLlBsYXRmb3JtLmlzV2ViVmlldygpKXtcbiAgICAgICAgcmV0dXJuICEkY29yZG92YU5ldHdvcmsuaXNPbmxpbmUoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiAhbmF2aWdhdG9yLm9uTGluZTtcbiAgICAgIH0qL1xuICAgIH1cbiAgfVxufV0pXG4iLCJwbWJfaW0uc2VydmljZXMuZmFjdG9yeSgnREJTZXJ2aWNlJywgWyckcScsIGZ1bmN0aW9uKCRxKSB7XG4gICB2YXIgX2RiO1xuXG4gICByZXR1cm4ge1xuICAgICAgIGluaXREQjogaW5pdERCLFxuICAgICAgIHNhdmVVc2VyOiBzYXZlVXNlcixcbiAgICAgICBnZXRVc2VyOiBnZXRVc2VyLFxuICAgICAgIGVyYXNlVXNlcjogZXJhc2VVc2VyLFxuICAgICAgIHNhdmVSZXBvcnQ6IHNhdmVSZXBvcnQsXG4gICAgICAgZ2V0UmVwb3J0OiBnZXRSZXBvcnQsXG4gICAgICAgZ2V0QWxsUmVwb3J0czogZ2V0QWxsUmVwb3J0cyxcbiAgICAgICB1cGRhdGVSZXBvcnQ6IHVwZGF0ZVJlcG9ydCxcbiAgICAgICBkZWxldGVSZXBvcnQ6IGRlbGV0ZVJlcG9ydCxcbiAgICAgICBkZWxldGVHaXZlblJlcG9ydDogZGVsZXRlR2l2ZW5SZXBvcnQsXG4gICAgICAgZ2V0Q2F0ZWdvcmllczogZ2V0Q2F0ZWdvcmllcyxcbiAgICAgICBzYXZlQ2F0ZWdvcmllczogc2F2ZUNhdGVnb3JpZXNcbiAgIH07XG5cbiAgIGZ1bmN0aW9uIHNhdmVVc2VyKHVzZXJfbmFtZSwgdXNlcl9wYXNzd29yZCwgdXNlcl9waWN0dXJlX3VybCxzaG93X2xvY2F0aW9uLCB1aWQsIHN0YXR1cywgZ2VuZGVyLCBpbnRlcmVzdGVkKSB7XG4gICAgICAgICB2YXIgdXNlciA9IHtcbiAgICAgICAgICAgIF9pZDogJ3VzZXItbG9nZ2VkJyxcbiAgICAgICAgICAgIG5hbWU6IHVzZXJfbmFtZSxcbiAgICAgICAgICAgIHBhc3N3b3JkOiB1c2VyX3Bhc3N3b3JkLFxuICAgICAgICAgICAgcGljdHVyZV91cmw6IHVzZXJfcGljdHVyZV91cmwsXG4gICAgICAgICAgICBzaG93X2xvY2F0aW9uOiBzaG93X2xvY2F0aW9uLFxuICAgICAgICAgICAgdWlkOiB1aWQsXG4gICAgICAgICAgICBzdGF0dXM6IHN0YXR1cyxcbiAgICAgICAgICAgIGdlbmRlcjogZ2VuZGVyLFxuICAgICAgICAgICAgaW50ZXJlc3RlZDogaW50ZXJlc3RlZFxuICAgICAgICAgfTtcbiAgICAgICAgIGdldFVzZXIoKS50aGVuKGZ1bmN0aW9uIChkb2MpIHtcbiAgICAgICAgICAgdXNlci5fcmV2ID0gZG9jLl9yZXY7XG4gICAgICAgICAgIHJldHVybiBfZGIucHV0KHVzZXIpO1xuICAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycikge1xuICAgICAgICAgICByZXR1cm4gX2RiLnB1dCh1c2VyKTtcbiAgICAgICAgIH0pXG4gICB9O1xuXG4gIGZ1bmN0aW9uIGdldFVzZXIoKSB7XG4gICAgIHJldHVybiBfZGIuZ2V0KCd1c2VyLWxvZ2dlZCcpO1xuICB9O1xuXG4gIGZ1bmN0aW9uIGVyYXNlVXNlcigpIHtcbiAgICBfZGIuZ2V0KCd1c2VyLWxvZ2dlZCcpLnRoZW4oZnVuY3Rpb24oZG9jKSB7XG4gICAgICByZXR1cm4gX2RiLnJlbW92ZShkb2MpO1xuICAgIH0pO1xuICB9XG5cbiAgIGZ1bmN0aW9uIGluaXREQigpIHtcbiAgICAgICAvLyBDcmVhdGVzIHRoZSBkYXRhYmFzZSBvciBvcGVucyBpZiBpdCBhbHJlYWR5IGV4aXN0c1xuICAgICAgIF9kYiA9IG5ldyBQb3VjaERCKCd0b21hbW9zdW5hX2xvY2FsX2RiJyk7XG4gICAgICAgcmV0dXJuIF9kYjtcbiAgIH07XG5cbiAgIGZ1bmN0aW9uIHNhdmVSZXBvcnQocmVwb3J0KSB7XG4gICAgICAvL25ld19yZXBvcnRfaWQgPSBcInJlcG9ydF9cIiArIHBvdWNoQ29sbGF0ZS50b0luZGV4YWJsZVN0cmluZyhbcmVwb3J0XSk7XG4gICAgICB2YXIgZGF0ZSA9IG5ldyBEYXRlKCk7XG4gICAgICB2YXIgbmV3X3JlcG9ydF9pZCA9IFwicmVwb3J0X1wiICsgZGF0ZS5nZXRGdWxsWWVhcigpICsgKGRhdGUuZ2V0TW9udGgoKSArIDEpICsgZGF0ZS5nZXREYXRlKCkgKyBkYXRlLmdldE1pbGxpc2Vjb25kcygpO1xuICAgICAgcmVwb3J0Ll9pZCA9IG5ld19yZXBvcnRfaWQ7XG4gICAgICByZXR1cm4gX2RiLnB1dChyZXBvcnQpO1xuICAgfTtcblxuICAgZnVuY3Rpb24gdXBkYXRlUmVwb3J0KHJlcG9ydCkge1xuICAgICByZXR1cm4gX2RiLnB1dChyZXBvcnQpO1xuICB9O1xuXG4gICBmdW5jdGlvbiBnZXRDYXRlZ29yaWVzKCkge1xuICAgICByZXR1cm4gX2RiLmdldCgnY2F0ZWdvcmllcy1saXN0Jyk7XG4gICB9O1xuXG4gICBmdW5jdGlvbiBzYXZlQ2F0ZWdvcmllcyhjYXRlZ29yaWVzKSB7XG4gICAgIGdldENhdGVnb3JpZXMoKS50aGVuKGZ1bmN0aW9uIChkb2MpIHtcbiAgICAgICBjYXRlZ29yaWVzLl9yZXYgPSBkb2MuX3JldjtcbiAgICAgICByZXR1cm4gX2RiLnB1dChjYXRlZ29yaWVzKTtcbiAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycikge1xuICAgICAgIGNhdGVnb3JpZXMuX2lkID0gXCJjYXRlZ29yaWVzLWxpc3RcIjtcbiAgICAgICByZXR1cm4gX2RiLnB1dChjYXRlZ29yaWVzKTtcbiAgICAgfSlcbiAgIH07XG5cbiAgZnVuY3Rpb24gZ2V0UmVwb3J0KHJlcG9ydElkKSB7XG4gICAgIHJldHVybiBfZGIuZ2V0KHJlcG9ydElkKTtcbiAgfTtcblxuICAgZnVuY3Rpb24gZ2V0QWxsUmVwb3J0cygpIHtcbiAgICAgcmV0dXJuIF9kYi5hbGxEb2NzKHtcbiAgICAgIGluY2x1ZGVfZG9jczogdHJ1ZSxcbiAgICAgIGF0dGFjaG1lbnRzOiBmYWxzZSxcbiAgICAgIHN0YXJ0a2V5OiAncmVwb3J0XycsXG4gICAgICBlbmRrZXk6ICdyZXBvcnRfXFx1ZmZmZidcbiAgICAgfSk7LyoudGhlbihmdW5jdGlvbiAocmVzdWx0KSB7XG4gICAgICAvLyBoYW5kbGUgcmVzdWx0XG4gICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycikge1xuICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICB9KTsqL1xuICB9O1xuXG4gIGZ1bmN0aW9uIGRlbGV0ZVJlcG9ydChyZXBvcnRfaWQpIHtcbiAgICBfZGIuZ2V0KHJlcG9ydF9pZCkudGhlbihmdW5jdGlvbihkb2MpIHtcbiAgICAgIHJldHVybiBfZGIucmVtb3ZlKGRvYyk7XG4gICAgfSk7XG4gIH07XG5cbiAgZnVuY3Rpb24gZGVsZXRlR2l2ZW5SZXBvcnQocmVwb3J0KSB7XG4gICAgcmV0dXJuIF9kYi5yZW1vdmUocmVwb3J0KTtcbiAgfTtcblxufV0pO1xuIiwicG1iX2ltLnNlcnZpY2VzLmZhY3RvcnkoJ0Vycm9yU2VydmljZScsIFsnJGh0dHAnLCckaW9uaWNQb3B1cCcsICdWYWxpZGF0aW9uU2VydmljZScsIGZ1bmN0aW9uKCRodHRwLCRpb25pY1BvcHVwLFZhbGlkYXRpb25TZXJ2aWNlKSB7XG5cbiAgcmV0dXJuIHtcbiAgICBodHRwX3Jlc3BvbnNlX2lzX3N1Y2Nlc3NmdWw6IGZ1bmN0aW9uIChqc29uUmVzdWx0LCBlcnJvckNvbnRhaW5lcklkKSB7XG4gICAgICB2YXIgZXJyb3JEaXYgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChlcnJvckNvbnRhaW5lcklkKTtcbiAgICAgIGlmKGpzb25SZXN1bHQuZGF0YSAmJiBqc29uUmVzdWx0LmRhdGEuU3RhdHVzPT1cInN1Y2Nlc3NcIiB8fCBqc29uUmVzdWx0LlN0YXR1cz09XCJzdWNjZXNzXCIpe1xuICAgICAgICBlcnJvckRpdi5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfWVsc2V7XG4gICAgICAgIGlmKGpzb25SZXN1bHQuZGF0YSl7XG4gICAgICAgICAgZXJyb3JEaXYuaW5uZXJIVE1MPVwiPGgzPlwiICsganNvblJlc3VsdC5kYXRhLk1lc3NhZ2UgKyBcIjwvaDM+XCI7XG4gICAgICAgIH1lbHNle1xuICAgICAgICAgIGVycm9yRGl2LmlubmVySFRNTD1cIjxoMz5cIiArIGpzb25SZXN1bHQuTWVzc2FnZSArIFwiPC9oMz5cIjtcbiAgICAgICAgfVxuICAgICAgICBlcnJvckRpdi5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiO1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgfSxcblxuICAgIGh0dHBfcmVzcG9uc2VfaXNfc3VjY2Vzc2Z1bF9hamF4OiBmdW5jdGlvbiAoanNvblJlc3VsdCkge1xuICAgICAgaWYoanNvblJlc3VsdC5kYXRhLnJlc3VsdD09MCl7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1lbHNle1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cbiAgICB9LFxuXG4gICAgaHR0cF9yZXNwb25zZV9pc19zdWNjZXNzZnVsX3BvcHVwOiBmdW5jdGlvbiAoanNvblJlc3VsdCkge1xuICAgICAgaWYoanNvblJlc3VsdC5kYXRhLnJlc3VsdD09MCl7XG4gICAgICAgIHZhciBhbGVydFBvcHVwID0gJGlvbmljUG9wdXAuYWxlcnQoe1xuICAgICAgICAgdGl0bGU6IFwiRXJyb3JcIixcbiAgICAgICAgIHRlbXBsYXRlOiBqc29uUmVzdWx0LmRhdGEubWVzc2FnZVxuICAgICAgICB9KTtcbiAgICAgICAgYWxlcnRQb3B1cC50aGVuKGZ1bmN0aW9uKHJlcykge1xuICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1lbHNle1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cbiAgICB9LFxuXG4gICAgaHR0cF9kYXRhX3Jlc3BvbnNlX2lzX3N1Y2Nlc3NmdWw6IGZ1bmN0aW9uIChkYXRhLCBlcnJvckNvbnRhaW5lcklkKSB7XG4gICAgICB2YXIgZXJyb3JEaXYgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChlcnJvckNvbnRhaW5lcklkKTtcbiAgICAgIGlmKGRhdGEuU3RhdHVzIT0nc3VjY2Vzcycpe1xuICAgICAgICBlcnJvckRpdi5pbm5lckhUTUw9XCI8aDM+XCIgKyBkYXRhLk1lc3NhZ2UgKyBcIjwvaDM+XCI7XG4gICAgICAgIGVycm9yRGl2LnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1lbHNle1xuICAgICAgICBlcnJvckRpdi5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuICAgIH0sXG5cbiAgICBodHRwX2RhdGFfcmVzcG9uc2VfaXNfc3VjY2Vzc2Z1bF9hamF4OiBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgaWYoZGF0YS5yZXN1bHQ9PTApe1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9ZWxzZXtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gICAgfSxcblxuICAgIHNob3dfZXJyb3JfbWVzc2FnZTogZnVuY3Rpb24gKGVycm9yQ29udGFpbmVySWQsIG1lc3NhZ2UpIHtcbiAgICAgICAgdmFyIGVycm9yRGl2ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoZXJyb3JDb250YWluZXJJZCk7XG4gICAgICAgIGVycm9yRGl2LmlubmVySFRNTD1cIjxoMz5cIiArIG1lc3NhZ2UgKyBcIjwvaDM+XCI7XG4gICAgICAgIGVycm9yRGl2LnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9LFxuXG4gICAgc2hvd19lcnJvcl9tZXNzYWdlX3BvcHVwOiBmdW5jdGlvbiAobWVzc2FnZSkge1xuICAgICAgICB2YXIgYWxlcnRQb3B1cCA9ICRpb25pY1BvcHVwLmFsZXJ0KHtcbiAgICAgICAgIHRpdGxlOiBcIkVycm9yXCIsXG4gICAgICAgICB0ZW1wbGF0ZTogbWVzc2FnZVxuICAgICAgICB9KTtcbiAgICAgICAgYWxlcnRQb3B1cC50aGVuKGZ1bmN0aW9uKHJlcykge1xuICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9LFxuXG4gICAgY2hlY2tfZmllbGRzOiBmdW5jdGlvbiAoZmllbGRzLCBlcnJvckNvbnRhaW5lcklkKSB7XG4gICAgICB2YXIgZXJyb3JzID0gXCJcIjtcbiAgICAgIGZpZWxkcy5mb3JFYWNoKGZ1bmN0aW9uKGZpZWxkKSB7XG4gICAgICAgIGlmKGZpZWxkLnR5cGU9PVwibm90TnVsbFwiKXtcbiAgICAgICAgICBpZighVmFsaWRhdGlvblNlcnZpY2UudmFsaWRhdGVfbm90X2VtcHR5KGZpZWxkLnZhbHVlKSl7XG4gICAgICAgICAgICBlcnJvcnMgPSBlcnJvcnMgKyAnPGgzPi0gRWwgY2FtcG8gXCInICsgZmllbGQubmFtZSArICdcIiBubyBwdWVkZSBlc3RhciB2YWPDrW8uPC9oMz4nO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZihmaWVsZC50eXBlPT1cImVtYWlsXCIpe1xuICAgICAgICAgIGlmKCFWYWxpZGF0aW9uU2VydmljZS52YWxpZGF0ZV9lbWFpbChmaWVsZC52YWx1ZSkpe1xuICAgICAgICAgICAgZXJyb3JzID0gZXJyb3JzICsgJzxoMz4tIEVsIGNhbXBvIFwiJyArIGZpZWxkLm5hbWUgKyAnXCIgbm8gZXMgdW5hIGRpcmVjY2nDs24gZGUgY29ycmVvIHbDoWxpZGEuPC9oMz4nO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZihmaWVsZC50eXBlPT1cImlkZG9jX3V5XCIpe1xuICAgICAgICAgIGlmKCFWYWxpZGF0aW9uU2VydmljZS52YWxpZGF0ZV9pZGRvY191eShmaWVsZC52YWx1ZSkpe1xuICAgICAgICAgICAgZXJyb3JzID0gZXJyb3JzICsgJzxoMz4tIEVsIGNhbXBvIFwiJyArIGZpZWxkLm5hbWUgKyAnXCIgbm8gZXMgdW5hIGPDqWR1bGEgdXJ1Z3VheWEgdsOhbGlkYS48L2gzPic7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmKGZpZWxkLnR5cGU9PVwidHdvX3dvcmRzXCIpe1xuICAgICAgICAgIGlmKCFWYWxpZGF0aW9uU2VydmljZS52YWxpZGF0ZV90d29fd29yZHMoZmllbGQudmFsdWUpKXtcbiAgICAgICAgICAgIGVycm9ycyA9IGVycm9ycyArICc8aDM+LSBFbCBjYW1wbyBcIicgKyBmaWVsZC5uYW1lICsgJ1wiIGRlYmUgY29udGVuZXIgYWwgbWVub3MgZG9zIHBhbGFicmFzLjwvaDM+JztcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYoZmllbGQudHlwZT09XCJlcXVhbHNUb1wiKXtcbiAgICAgICAgICBpZighVmFsaWRhdGlvblNlcnZpY2UudmFsaWRhdGVfZXF1YWxzVG8oZmllbGQudmFsdWUsIGZpZWxkLnNlY29uZFZhbHVlKSl7XG4gICAgICAgICAgICBlcnJvcnMgPSBlcnJvcnMgKyAnPGgzPi0gTG9zIGNhbXBvcyBcIicgKyBmaWVsZC5uYW1lICsgJ1wiIG5vIGNvaW5jaWRlbi48L2gzPic7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIGlmKGVycm9ycyA9PVwiXCIpe1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1lbHNle1xuICAgICAgICB2YXIgZXJyb3JEaXYgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChlcnJvckNvbnRhaW5lcklkKTtcbiAgICAgICAgZXJyb3JEaXYuaW5uZXJIVE1MPSBlcnJvcnM7XG4gICAgICAgIGVycm9yRGl2LnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICB9XG5cblxuICB9O1xufV0pO1xuIiwicG1iX2ltLnNlcnZpY2VzLmZhY3RvcnkoJ0xvYWRlcicsIFsnJGlvbmljTG9hZGluZycsICckdGltZW91dCcsJyRpb25pY1BvcHVwJyxmdW5jdGlvbigkaW9uaWNMb2FkaW5nLCR0aW1lb3V0LCRpb25pY1BvcHVwKSB7XG5cbiAgdmFyIExPQURFUkFQSSA9IHtcblxuICAgIHNob3dMb2FkaW5nOiBmdW5jdGlvbih0ZXh0KSB7XG4gICAgICB0ZXh0ID0gdGV4dCB8fCAnTG9hZGluZy4uLic7XG4gICAgICAkaW9uaWNMb2FkaW5nLnNob3coe1xuICAgICAgICB0ZW1wbGF0ZTogdGV4dFxuICAgICAgfSk7XG4gICAgfSxcblxuICAgIGhpZGVMb2FkaW5nOiBmdW5jdGlvbigpIHtcbiAgICAgICRpb25pY0xvYWRpbmcuaGlkZSgpO1xuICAgIH0sXG5cbiAgICB0b2dnbGVMb2FkaW5nV2l0aE1lc3NhZ2U6IGZ1bmN0aW9uKHRleHQsIHRpbWVvdXQpIHtcbiAgICAgIHZhciBzZWxmID0gdGhpcztcblxuICAgICAgc2VsZi5zaG93TG9hZGluZyh0ZXh0KTtcblxuICAgICAgJHRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICAgIHNlbGYuaGlkZUxvYWRpbmcoKTtcbiAgICAgIH0sIHRpbWVvdXQgfHwgMzAwMCk7XG4gICAgfSxcblxuICAgIGNvbmZpcm1Qb3B1cDpmdW5jdGlvbih0aXRsZSx0ZXh0KXtcbiAgICAgIHZhciBjb25maXJtUG9wdXAgPSAkaW9uaWNQb3B1cC5jb25maXJtKHtcbiAgICAgdGl0bGU6IHRpdGxlLFxuICAgICB0ZW1wbGF0ZTogdGV4dFxuICAgfSk7XG4gICByZXR1cm4gY29uZmlybVBvcHVwO1xuIH0sXG5cblxuICAgIHNob3dBbGVydDpmdW5jdGlvbihfdGl0bGUsX3RlbXBsYXRlKSB7XG4gICAgICB2YXIgYWxlcnRQb3B1cCA9ICRpb25pY1BvcHVwLmFsZXJ0KHtcbiAgICAgICAgdGl0bGU6IF90aXRsZSxcbiAgICAgICAgdGVtcGxhdGU6IF90ZW1wbGF0ZVxuICAgICAgfSk7XG4gICAgICByZXR1cm4gYWxlcnRQb3B1cDtcbiB9XG5cbiAgfTtcbiAgcmV0dXJuIExPQURFUkFQSTtcbn1dKTtcbiIsInBtYl9pbS5zZXJ2aWNlcy5mYWN0b3J5KCdMb2NhdGlvbnNTZXJ2aWNlJywgWyBmdW5jdGlvbigpIHtcblxuICB2YXIgbG9jYXRpb25zT2JqID0ge307XG4gIGxvY2F0aW9uc09iai5pbml0aWFsX2xhdCA9IFwiXCI7XG4gIGxvY2F0aW9uc09iai5pbml0aWFsX2xuZyA9IFwiXCI7XG4gIGxvY2F0aW9uc09iai5sYXN0X3VzZXJfbGF0ID0gXCJcIjtcbiAgbG9jYXRpb25zT2JqLmxhc3RfdXNlcl9sbmcgPSBcIlwiO1xuICBsb2NhdGlvbnNPYmouY291bmNpbF9tb2RhbCA9IG51bGw7XG4gIGxvY2F0aW9uc09iai5zZWxlY3RlZF9jb3VuY2lsID0gbnVsbDtcblxuICBsb2NhdGlvbnNPYmouc2VsZWN0Q291bmNpbCA9IGZ1bmN0aW9uKGNvdW5jaWxOYW1lKSB7XG4gICAgbG9jYXRpb25zT2JqLnNlbGVjdGVkX2NvdW5jaWwgPSAgY291bmNpbE5hbWU7XG4gIH1cblxuICBsb2NhdGlvbnNPYmouc2F2ZV9pbml0aWFsX3Bvc2l0aW9uID0gZnVuY3Rpb24ocG9zaXRpb24pIHtcbiAgICBsb2NhdGlvbnNPYmouaW5pdGlhbF9sYXQgPSAgcG9zaXRpb24uY29vcmRzLmxhdGl0dWRlO1xuICAgIGxvY2F0aW9uc09iai5pbml0aWFsX2xuZyA9ICBwb3NpdGlvbi5jb29yZHMubG9uZ2l0dWRlO1xuICB9XG5cbiAgbG9jYXRpb25zT2JqLnNhdmVfbGFzdF91c2VyX3Bvc2l0aW9uID0gZnVuY3Rpb24obGF0LGxuZyl7XG4gICAgbG9jYXRpb25zT2JqLmxhc3RfdXNlcl9sYXQgPSBsYXQ7XG4gICAgbG9jYXRpb25zT2JqLmxhc3RfdXNlcl9sbmcgPSBsbmc7XG4gIH1cblxuICBsb2NhdGlvbnNPYmouc2F2ZWRMb2NhdGlvbnMgPSBbXTtcblxuICByZXR1cm4gbG9jYXRpb25zT2JqO1xuXG59XSk7XG4iLCIgLy9wbWJfaW0uc2VydmljZXMuZmFjdG9yeSgnTWFwU2VydmljZScsIFsgZnVuY3Rpb24oKSB7XG4gcG1iX2ltLnNlcnZpY2VzLmZhY3RvcnkoJ01hcFNlcnZpY2UnLCBbJ2xlYWZsZXREYXRhJywgJyRjb21waWxlJywgZnVuY3Rpb24obGVhZmxldERhdGEsICRjb21waWxlKSB7XG5cbiAgIC8vRGVmaW5pY2lvbiBkZSBsYSBwcm95ZWNjY2lvbiBVVE0gMjEgc1xuICAgcHJvajQuZGVmcygnRVBTRzozMjcyMScsICcrcHJvaj11dG0gK3pvbmU9MjEgK3NvdXRoICtlbGxwcz1XR1M4NCArZGF0dW09V0dTODQgK3VuaXRzPW0gK25vX2RlZnMnKTtcblxuXG4gICB2YXIgbWFwU2VydmljZSA9IHt9O1xuXG4gICBtYXBTZXJ2aWNlLmdvVG9QbGFjZSA9IGZ1bmN0aW9uKG5hbWUsbGF0LGxvbixzY29wZSkge1xuICAgIHZhciBfZ2VvSnNvbiA9IHtcbiAgICAgICAgICAgICAgXCJ0eXBlXCI6IFwiRmVhdHVyZUNvbGxlY3Rpb25cIixcbiAgICAgICAgICAgICAgXCJjcnNcIjogeyBcInR5cGVcIjogXCJuYW1lXCIsXG4gICAgICAgICAgICAgICAgICAgICAgXCJwcm9wZXJ0aWVzXCI6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwibmFtZVwiOiAndXJuOm9nYzpkZWY6Y3JzOkVQU0c6OjMyNzIxJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBcImZlYXR1cmVzXCI6IFtcbiAgICAgICAgICAgICAgICB7IFwidHlwZVwiOiBcIkZlYXR1cmVcIixcbiAgICAgICAgICAgICAgICBcImdlb21ldHJ5XCI6e1xuICAgICAgICAgICAgICAgICAgICAgICBcInR5cGVcIjpcIlBvaW50XCIsXG4gICAgICAgICAgICAgICAgICAgICAgIFwiY29vcmRpbmF0ZXNcIjpbbGF0LGxvbl1cbiAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIFwicHJvcGVydGllc1wiOntcbiAgICAgICAgICAgICAgICAgICAgICBcIm5vbWJyZVwiOiBuYW1lXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIF1cbiAgICAgICAgICAgIH07XG4gICAgIGxlYWZsZXREYXRhLmdldE1hcCgpLnRoZW4oZnVuY3Rpb24obWFwKSB7XG4gICAgICB2YXIgX2xhdGxuZztcbiAgICAgICB2YXIgbGF5ZXIgPSBMLlByb2ouZ2VvSnNvbihfZ2VvSnNvbiwge1xuICAgICAgICAgJ3BvaW50VG9MYXllcic6IGZ1bmN0aW9uKGZlYXR1cmUsIGxhdGxuZykge1xuICAgICAgICAgICBfbGF0bG5nID0gbGF0bG5nO1xuICAgICAgICAgICB2YXIgaHRtbFBvcFVwID0gXCI8cCBhbGlnbj0nY2VudGVyJz5cIitmZWF0dXJlLnByb3BlcnRpZXMubm9tYnJlK1wiIDxici8+IDxhIG5nLWNsaWNrPSduZXdfcmVwb3J0X2Zyb21fbGF0bG9uKFwiK19sYXRsbmcubGF0K1wiLFwiK19sYXRsbmcubG5nK1wiKTsnPkluaWNpYXIgcmVwb3J0ZSBhcXXDrTwvYT48L3A+XCI7XG4gICAgICAgICAgIHZhciBjb21waWxlZCA9ICRjb21waWxlKGh0bWxQb3BVcCkoc2NvcGUpO1xuICAgICAgICAgICByZXR1cm4gTC5tYXJrZXIobGF0bG5nKS5iaW5kUG9wdXAoY29tcGlsZWRbMF0pO1xuICAgICAgICAgfVxuICAgICAgIH0pO1xuXG4gICAgICAgbGF5ZXIuYWRkVG8obWFwKTtcbiAgICAgICBtYXAuc2V0VmlldyhfbGF0bG5nLCAxOCk7XG4gICAgICAgbGF5ZXIub3BlblBvcHVwKCk7XG4gICAgIH0pO1xuICAgfTtcblxuICBtYXBTZXJ2aWNlLmNlbnRlck1hcE9uQ29vcmRzID0gZnVuY3Rpb24obGF0LGxuZyx6b29tKSB7XG4gICAgIGxlYWZsZXREYXRhLmdldE1hcCgpLnRoZW4oZnVuY3Rpb24obWFwKSB7XG4gICAgICAgIG1hcC5zZXRWaWV3KG5ldyBMLkxhdExuZyhsYXQsIGxuZyksem9vbSk7XG4gICAgICAgfSk7XG4gICAgIH1cblxuICAgcmV0dXJuIG1hcFNlcnZpY2U7XG5cbiB9XSk7XG4iLCJwbWJfaW0uc2VydmljZXMuZmFjdG9yeSgnTW9kYWxTZXJ2aWNlJywgWyBmdW5jdGlvbigpIHtcblxuICB2YXIgbW9kYWxPQkogPSB7fTtcbiAgbW9kYWxPQkouYWN0aXZlTW9kYWwgPSBudWxsO1xuXG4gIG1vZGFsT0JKLmNoZWNrTm9Nb2RhbElzT3BlbiA9IGZ1bmN0aW9uKCkge1xuICAgIGlmKG1vZGFsT0JKLmFjdGl2ZU1vZGFsKXtcbiAgICAgIG1vZGFsT0JKLmFjdGl2ZU1vZGFsLmhpZGUoKTtcbiAgICAgIG1vZGFsT0JKLmFjdGl2ZU1vZGFsLnJlbW92ZSgpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBtb2RhbE9CSjtcblxufV0pO1xuIiwicG1iX2ltLnNlcnZpY2VzLmZhY3RvcnkoJ1BpblNlcnZpY2UnLCBbJyRodHRwJywgJ2xlYWZsZXREYXRhJywnQ29uZmlnU2VydmljZScsIGZ1bmN0aW9uKCRodHRwLCBsZWFmbGV0RGF0YSwgQ29uZmlnU2VydmljZSkge1xuXG4gIHZhciBwaW5zVVJMID0gQ29uZmlnU2VydmljZS5iYXNlVVJMICsgXCIvb2ZlcnRhLmdlb2pzb24vLTM0LjgyODUxOCwtNTUuOTUxMzc2L01BVFVUSU5PXCI7XG4gIHZhciBhcGlVUkwgPSBDb25maWdTZXJ2aWNlLmJhc2VVUkwgKyBcIi9hcGkvXCJcbi8qKlxuICAgKiBDb25zdHJ1Y3Rvciwgd2l0aCBjbGFzcyBuYW1lXG4gICAqL1xuICBmdW5jdGlvbiBQaW4oX2RhdGEpIHtcbiAgICBhbmd1bGFyLmV4dGVuZCh0aGlzLCBfZGF0YSk7XG4gIH1cblxuXG4gIFBpbi5nZXRBbGwgPSBmdW5jdGlvbigpe1xuICAgIHJldHVybiAkaHR0cC5nZXQocGluc1VSTCwge2NhY2hlOiBmYWxzZSwgcGFyYW1zOiB7aGFzaF9pZDpNYXRoLnJhbmRvbSgpfX0pO1xuICB9XG5cbiAgUGluLnNlbmRVc2VyTG9jYXRpb24gPSBmdW5jdGlvbihsYXRpdHVkZSxsb25naXR1ZGUsdXNlcm5hbWUscGFzc3dvcmQsdWlkKXtcbiAgICB2YXIgYm9keSA9ICd1c2VyPScrdXNlcm5hbWUrJyZwYXNzd29yZD0nK3Bhc3N3b3JkKycmbGF0PScrbGF0aXR1ZGUrJyZsb249Jytsb25naXR1ZGUrXCImdWlkPVwiK3VpZDtcbiAgICByZXR1cm4gJGh0dHAucG9zdChhcGlVUkwgKyAnc2VuZF91c2VyX3Bvc2l0aW9uJywgYm9keSx7d2l0aENyZWRlbnRpYWxzOiB0cnVlLCBoZWFkZXJzOiB7J0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnfX0pO1xuXG4gIH1cblxuXG4gICAgUGluLl9hbGwgPSBbXTtcbiAgICBQaW4uY3VycmVudCA9IHt9O1xuICAgIFBpbi5sYXN0UGluc1Jlc3BvbnNlID0gbnVsbDtcblxuXG5cblxuICAgIC8qKlxuICAgICAqIFN0YXRpYyBtZXRob2QsIGFzc2lnbmVkIHRvIGNsYXNzXG4gICAgICogSW5zdGFuY2UgKCd0aGlzJykgaXMgbm90IGF2YWlsYWJsZSBpbiBzdGF0aWMgY29udGV4dFxuICAgICAqL1xuICAgIFBpbi5idWlsZCA9IGZ1bmN0aW9uKF9kYXRhKSB7XG5cbiAgICAgIHJldHVybiBuZXcgUGluKFxuICAgICAgICBfZGF0YVxuICAgICAgKTtcbiAgICB9O1xuXG4gICAgUGluLnByb3RvdHlwZS5zZXRMYXRMbmcgPSBmdW5jdGlvbiAobGF0bG5nKSB7XG5cbiAgICAgIHRoaXMubGF0ID0gbGF0bG5nLmxhdDtcbiAgICAgIHRoaXMubG9uID0gbGF0bG5nLmxuZztcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogUmV0dXJuIHRoZSBjb25zdHJ1Y3RvciBmdW5jdGlvblxuICAgICAqL1xuICAgIHJldHVybiBQaW47XG5cbn1dKTtcbiIsInBtYl9pbS5zZXJ2aWNlcy5mYWN0b3J5KCdQb3BVcFNlcnZpY2UnLCBbJyRpb25pY1BvcHVwJywnVmFsaWRhdGlvblNlcnZpY2UnLCBmdW5jdGlvbigkaW9uaWNQb3B1cCxWYWxpZGF0aW9uU2VydmljZSkge1xuXG4gIHJldHVybiB7XG4gICAgc2hvd19hbGVydDogZnVuY3Rpb24gKGFsZXJ0X3RpdGxlLGFsZXJ0X21lc3NhZ2UpIHtcbiAgICAgICAgdmFyIGFsZXJ0UG9wdXAgPSAkaW9uaWNQb3B1cC5hbGVydCh7XG4gICAgICAgICB0aXRsZTogYWxlcnRfdGl0bGUsXG4gICAgICAgICB0ZW1wbGF0ZTogYWxlcnRfbWVzc2FnZVxuICAgICAgICB9KTtcbiAgICAgICAgYWxlcnRQb3B1cC50aGVuKGZ1bmN0aW9uKHJlcykge1xuICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSxcblxuICAgY29uZmlybVBvcHVwOiBmdW5jdGlvbih0aXRsZSx0ZXh0KXtcbiAgICAgdmFyIGNvbmZpcm1Qb3B1cCA9ICRpb25pY1BvcHVwLmNvbmZpcm0oe1xuICAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlOiB0aXRsZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZTogdGV4dFxuICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgcmV0dXJuIGNvbmZpcm1Qb3B1cDtcbiAgIH0sXG5cbiAgIGFza0Zvck9uZVZhbHVlUG9wVXA6IGZ1bmN0aW9uKHNjb3BlLHRpdGxlLHRleHQsZmllbGRfbmFtZSx2YWxpZGF0aW9uVHlwZSl7XG4gICAgICAkc2NvcGUgPSBzY29wZTtcbiAgICAgIHZhciBteVBvcHVwID0gJGlvbmljUG9wdXAuc2hvdyh7XG4gICAgICB0ZW1wbGF0ZTogZmllbGRfbmFtZSArICc6IDxpbnB1dCB0eXBlPVwidGV4dFwiIGlkPVwib25lX3ZhbHVlX3BvcHVwXCI+PGRpdiBpZD1cImVycm9yX2NvbnRhaW5lcl9pbnNpZGVcIj48L2Rpdj4nLFxuICAgICAgdGl0bGU6IHRpdGxlLFxuICAgICAgc3ViVGl0bGU6IHRleHQsXG4gICAgICBzY29wZTogJHNjb3BlLFxuICAgICAgYnV0dG9uczogW1xuICAgICAgICB7IHRleHQ6ICdDYW5jZWxhcicgfSxcbiAgICAgICAge1xuICAgICAgICAgIHRleHQ6ICc8Yj5FbnZpYXI8L2I+JyxcbiAgICAgICAgICB0eXBlOiAnYnV0dG9uLXBvc2l0aXZlJyxcbiAgICAgICAgICBvblRhcDogZnVuY3Rpb24oZSkge1xuICAgICAgICAgICAgdmFyIGVycm9ycyA9IFwiXCI7XG4gICAgICAgICAgICB2YXIgdmFsdWUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm9uZV92YWx1ZV9wb3B1cFwiKS52YWx1ZTtcbiAgICAgICAgICAgIGlmKHZhbGlkYXRpb25UeXBlPT1cIm5vdE51bGxcIil7XG4gICAgICAgICAgICAgIGlmKCFWYWxpZGF0aW9uU2VydmljZS52YWxpZGF0ZV9ub3RfZW1wdHkodmFsdWUpKXtcbiAgICAgICAgICAgICAgICBlcnJvcnMgPSBlcnJvcnMgKyAnPGgzPi0gRWwgY2FtcG8gXCInICsgZmllbGRfbmFtZSArICdcIiBubyBwdWVkZSBlc3RhciB2YWPDrW8uPC9oMz4nO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZih2YWxpZGF0aW9uVHlwZT09XCJlbWFpbFwiKXtcbiAgICAgICAgICAgICAgaWYoIVZhbGlkYXRpb25TZXJ2aWNlLnZhbGlkYXRlX2VtYWlsKHZhbHVlKSl7XG4gICAgICAgICAgICAgICAgZXJyb3JzID0gZXJyb3JzICsgJzxoMz4tIEVsIGNhbXBvIFwiJyArIGZpZWxkX25hbWUgKyAnXCIgbm8gZXMgdW5hIGRpcmVjY2nDs24gZGUgY29ycmVvIHbDoWxpZGEuPC9oMz4nO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZih2YWxpZGF0aW9uVHlwZT09XCJpZGRvY191eVwiKXtcbiAgICAgICAgICAgICAgaWYoIVZhbGlkYXRpb25TZXJ2aWNlLnZhbGlkYXRlX2lkZG9jX3V5KHZhbHVlKSl7XG4gICAgICAgICAgICAgICAgZXJyb3JzID0gZXJyb3JzICsgJzxoMz4tIEVsIGNhbXBvIFwiJyArIGZpZWxkX25hbWUgKyAnXCIgbm8gZXMgdW5hIGPDqWR1bGEgdXJ1Z3VheWEgdsOhbGlkYS48L2gzPic7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmKHZhbGlkYXRpb25UeXBlPT1cInR3b193b3Jkc1wiKXtcbiAgICAgICAgICAgICAgaWYoIVZhbGlkYXRpb25TZXJ2aWNlLnZhbGlkYXRlX3R3b193b3Jkcyh2YWx1ZSkpe1xuICAgICAgICAgICAgICAgIGVycm9ycyA9IGVycm9ycyArICc8aDM+LSBFbCBjYW1wbyBcIicgKyBmaWVsZF9uYW1lICsgJ1wiIGRlYmUgY29udGVuZXIgYWwgbWVub3MgZG9zIHBhbGFicmFzLjwvaDM+JztcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYoZXJyb3JzIT1cIlwiKXtcbiAgICAgICAgICAgICAgdmFyIGVycm9yRGl2ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJlcnJvcl9jb250YWluZXJfaW5zaWRlXCIpO1xuICAgICAgICAgICAgICBlcnJvckRpdi5pbm5lckhUTUw9IGVycm9ycztcbiAgICAgICAgICAgICAgZXJyb3JEaXYuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcbiAgICAgICAgICAgICAgLy9kb24ndCBhbGxvdyB0aGUgdXNlciB0byBjbG9zZSB1bmxlc3MgaGUgZW50ZXJzIHdpZmkgcGFzc3dvcmRcbiAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgXVxuICAgIH0pO1xuICAgIHJldHVybiBteVBvcHVwO1xuICAgfVxuXG5cbiAgfTtcbn1dKTtcbiIsInBtYl9pbS5zZXJ2aWNlcy5mYWN0b3J5KCdTZW1hcGhvcmVTZXJ2aWNlJywgW2Z1bmN0aW9uKCkge1xuXG4gIHZhciBzZW1hcGhvcmVPYmogPSB7fTtcbiAgc2VtYXBob3JlT2JqLnNlbWFwaG9yZXMgPSBuZXcgQXJyYXkoKTtcbiAgc2VtYXBob3JlT2JqLnNlbWFwaG9yZXNbJ29wZW4tbW9kYWwnXSA9IFwiYXZhaWxhYmxlXCI7XG4gIHNlbWFwaG9yZU9iai5zZW1hcGhvcmVzWydzdWJtaXQtZm9ybSddID0gXCJhdmFpbGFibGVcIjtcbiAgc2VtYXBob3JlT2JqLnNlbWFwaG9yZXNbJ3N1Ym1pdC1sb2NhdGlvbiddID0gXCJhdmFpbGFibGVcIjtcbiAgc2VtYXBob3JlT2JqLnNlbWFwaG9yZXNbJ2Nhbl90YWxrJ10gPSBcImF2YWlsYWJsZVwiO1xuXG5cblxuXG4gIHNlbWFwaG9yZU9iai50YWtlSWZBdmFpbGFibGUgPSBmdW5jdGlvbihzZW1hcGhvcmVJZCkge1xuICAgIC8vY29uc29sZS5sb2coc2VtYXBob3JlSWQgKyBcIjpcIiArIHNlbWFwaG9yZU9iai5zZW1hcGhvcmVzW3NlbWFwaG9yZUlkXSk7XG4gICAgaWYoc2VtYXBob3JlT2JqLnNlbWFwaG9yZXNbc2VtYXBob3JlSWRdPT1cImF2YWlsYWJsZVwiKXtcbiAgICAgICAgc2VtYXBob3JlT2JqLnNlbWFwaG9yZXNbc2VtYXBob3JlSWRdID0gXCJvY2N1cGllZFwiO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9ZWxzZXtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cblxuICBzZW1hcGhvcmVPYmoubWFrZUF2YWlsYWJsZUFnYWluID0gZnVuY3Rpb24oc2VtYXBob3JlSWQpIHtcbiAgICBpZihzZW1hcGhvcmVPYmouc2VtYXBob3Jlc1tzZW1hcGhvcmVJZF09PVwib2NjdXBpZWRcIil7XG4gICAgICAgIHNlbWFwaG9yZU9iai5zZW1hcGhvcmVzW3NlbWFwaG9yZUlkXSA9IFwiYXZhaWxhYmxlXCI7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1lbHNle1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBzZW1hcGhvcmVPYmo7XG5cbn1dKTtcbiIsInBtYl9pbS5zZXJ2aWNlcy5mYWN0b3J5KCdsb2NhdGlvbkFQSScsIFsnJGh0dHAnLCAnJHEnLCAnQXBpSW1FbmRwb2ludCcsICdBcGlEYXRhRW5kcG9pbnQnLCAnQ29uZmlnU2VydmljZScsICdMb2NhdGlvbnNTZXJ2aWNlJywgZnVuY3Rpb24oJGh0dHAsICRxLCBBcGlJbUVuZHBvaW50LCBBcGlEYXRhRW5kcG9pbnQsIENvbmZpZ1NlcnZpY2UsIExvY2F0aW9uc1NlcnZpY2UpIHtcblxuICB2YXIgcmVzdFByZWZmaXggPSBcInViaWNhY2lvbmVzUmVzdFByb2RcIjtcblxuXG4gIHZhciBsb2NhdGlvbkFQSSA9IHt9O1xuXG4gIGxvY2F0aW9uQVBJLnNlYXJjaExvY2F0aW9uQnlTdHIgPSBmdW5jdGlvbihfbG9jYXRpb24pIHtcbiAgICAvKnJldHVybiAkaHR0cC5nZXQoQXBpSW1FbmRwb2ludC51cmwgKyAnLycgKyByZXN0UHJlZmZpeCArICcvY2FsbGVzJywge1xuICAgICAgbWV0aG9kOiAnR0VUJyxcbiAgICAgIHBhcmFtczoge1xuICAgICAgICBub21icmU6IF9sb2NhdGlvblxuICAgICAgfVxuICAgIH0pOyovXG4gICAgdmFyIGJhc2VVUkwgPSBDb25maWdTZXJ2aWNlLmJhc2VVUkwgKyBcIi9hamF4L2dlb2NvZGU/dGVybT1cIiArIExvY2F0aW9uc1NlcnZpY2Uuc2VsZWN0ZWRfY291bmNpbCArIFwiLFwiICsgX2xvY2F0aW9uO1xuICAgIHJldHVybiAkaHR0cC5nZXQoYmFzZVVSTCwge1xuICAgICAgbWV0aG9kOiAnR0VUJyxcbiAgICAgIHBhcmFtczoge31cbiAgICB9KTtcbiAgfTtcblxuXG4gIGxvY2F0aW9uQVBJLnNlYXJjaEVzcXVpbmFCeVN0ciA9IGZ1bmN0aW9uKF9sb2NhdGlvbikge1xuICAgIC8vY29uc29sZS5sb2coXCJzZWFyY2hFc3F1aW5hQnlTdHIgPSBcIiArIEpTT04uc3RyaW5naWZ5KF9sb2NhdGlvbikpO1xuICAgIC8vcmV0dXJuICRodHRwLmdldChBcGlJbUVuZHBvaW50LnVybCArICcvJyArIHJlc3RQcmVmZml4ICsgJy9lc3F1aW5hLycgKyBfbG9jYXRpb24uY2FsbGUgKyAnLycgKyBfbG9jYXRpb24uZXNxdWluYSwge1xuICAgICAgLypyZXR1cm4gJGh0dHAuZ2V0KEFwaUltRW5kcG9pbnQudXJsICsgJy8nICsgcmVzdFByZWZmaXggKyAnL2NydWNlcy8nICsgX2xvY2F0aW9uLmNhbGxlICsgJy8nLFxuICAgICAge1xuICAgICAgICBwYXJhbXM6IHtcbiAgICAgICAgICBub21icmU6IF9sb2NhdGlvbi5lc3F1aW5hXG4gICAgICAgIH1cbiAgICAgIH0pOyovXG5cbiAgICAgIHZhciBiYXNlVVJMID0gQ29uZmlnU2VydmljZS5iYXNlVVJMICsgXCIvYWpheC9nZW9jb2RlP3Rlcm09XCIgKyBMb2NhdGlvbnNTZXJ2aWNlLnNlbGVjdGVkX2NvdW5jaWwgKyBcIixcIlxuICAgICAgICAgICAgICAgICAgICArIF9sb2NhdGlvbi5jYWxsZSArIFwiLFwiICsgX2xvY2F0aW9uLmVzcXVpbmE7XG4gICAgICByZXR1cm4gJGh0dHAuZ2V0KGJhc2VVUkwsIHtcbiAgICAgICAgbWV0aG9kOiAnR0VUJyxcbiAgICAgICAgcGFyYW1zOiB7fVxuICAgICAgfSk7XG4gIH07XG5cbiAgbG9jYXRpb25BUEkuZ2V0TG9jYXRpb25HZW9tID0gZnVuY3Rpb24oX2xvY2F0aW9uKSB7XG4gICAgdmFyIHVybCA9IEFwaUltRW5kcG9pbnQudXJsICsgJy8nICsgcmVzdFByZWZmaXggKyBsb2NhdGlvbkFQSS5nZXRQYXJhbVBhdGhCeVRpcG8oX2xvY2F0aW9uLnRpcG8pO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgX2xvY2F0aW9uLnBhdGhQYXJhbXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHVybCArPSAnLycgKyBfbG9jYXRpb24ucGF0aFBhcmFtc1tpXTtcbiAgICB9XG4gICAgcmV0dXJuICRodHRwLmdldChiYXNlVVJMKS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKXtcbiAgICAgIHJldHVybiByZXNwb25zZS5kYXRhO1xuICAgIH0pO1xuICB9O1xuXG4gIGxvY2F0aW9uQVBJLmdldExvY2F0aW9uR2VvbVBNQiA9IGZ1bmN0aW9uKGNhbGxlLGVzcXVpbmFfbnVtZXJvLHRpcG8pIHtcbiAgICB2YXIgYmFzZVVSTCA9IENvbmZpZ1NlcnZpY2UuYmFzZVVSTCArIFwiL2FqYXgvZ2VvY29kZT90ZXJtPVwiICsgTG9jYXRpb25zU2VydmljZS5zZWxlY3RlZF9jb3VuY2lsICsgXCIsXCJcbiAgICAgICAgICAgICAgKyBjYWxsZSArIFwiLFwiICsgZXNxdWluYV9udW1lcm8gKyBcIixcIiArIHRpcG87XG5cbiAgICByZXR1cm4gJGh0dHAuZ2V0KGJhc2VVUkwpO1xuXG4gIH07XG5cbiAgbG9jYXRpb25BUEkuZ2V0UGFyYW1QYXRoQnlUaXBvID0gZnVuY3Rpb24oX3RpcG8pIHtcblxuICAgIHZhciByZXN0R2VvRGF0YVNlcnZpY2VQYXRoID0ge1xuICAgICAgJ0VTUVVJTkEnOlwiL2VzcXVpbmFcIixcbiAgICAgICdESVJFQ0NJT04nOlwiL2RpcmVjY2lvblwiXG4gICAgfTtcblxuICAgIHJldHVybiByZXN0R2VvRGF0YVNlcnZpY2VQYXRoW190aXBvXTtcblxuXG4gIH07XG5cbiAgcmV0dXJuIGxvY2F0aW9uQVBJO1xuXG59XSk7XG4iLCJwbWJfaW0uc2VydmljZXMuZmFjdG9yeSgnXycsIFtmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHdpbmRvdy5fOyAvL1VuZGVyc2NvcmUgbXVzdCBhbHJlYWR5IGJlIGxvYWRlZCBvbiB0aGUgcGFnZVxufV0pO1xuIiwicG1iX2ltLnNlcnZpY2VzLmZhY3RvcnkoJ1VzZXJTZXJ2aWNlJywgWyckaHR0cCcsIGZ1bmN0aW9uKCRodHRwKSB7XG5cbiAgLy92YXIgYmFzZVVSTCA9IFwiaHR0cDovL3BtYnV5LmRldmVsb3BtZW50LmRhdGF1eS5vcmcvYXV0aC9hamF4L1wiO1xuICB2YXIgVXNlck9iaiA9IHt9O1xuICBVc2VyT2JqLnVpZCA9IG51bGw7XG4gIFVzZXJPYmoubmFtZSA9IG51bGw7XG4gIFVzZXJPYmouZW1haWwgPSBudWxsO1xuICBVc2VyT2JqLnBhc3N3b3JkID0gbnVsbDtcbiAgVXNlck9iai5waWN0dXJlX3VybCA9IFwidXJsKC4vaW1nL2ljb24tdXNlci1hbm9ueW1vdXMucG5nKVwiO1xuICBVc2VyT2JqLnNob3dfbG9jYXRpb24gPSBudWxsO1xuXG5cbiAgVXNlck9iai5zYXZlX3VzZXJfZGF0YSA9IGZ1bmN0aW9uICh1c2VyX25hbWUsIHVzZXJfcGFzc3dvcmQsIHVzZXJfcGljdHVyZV91cmwsIHNob3dfbG9jYXRpb24sIHVpZCwgc3RhdHVzLCBnZW5kZXIsIGludGVyZXN0ZWQpIHtcbiAgICAgIFVzZXJPYmoudWlkID0gdWlkO1xuICAgICAgVXNlck9iai5uYW1lID0gdXNlcl9uYW1lO1xuICAgICAgVXNlck9iai5wYXNzd29yZCA9IHVzZXJfcGFzc3dvcmQ7XG4gICAgICBVc2VyT2JqLnBpY3R1cmVfdXJsID0gdXNlcl9waWN0dXJlX3VybDtcbiAgICAgIFVzZXJPYmouc2hvd19sb2NhdGlvbiA9IHNob3dfbG9jYXRpb247XG4gICAgICBVc2VyT2JqLnN0YXR1cyA9IHN0YXR1cztcbiAgICAgIFVzZXJPYmouZ2VuZGVyID0gZ2VuZGVyO1xuICAgICAgVXNlck9iai5pbnRlcmVzdGVkID0gaW50ZXJlc3RlZDtcblxuICAgICAgLy9TQVZFIElOIFBPVUNIREJcbiAgfVxuXG4gIFVzZXJPYmouZXJhc2VfdXNlcl9kYXRhID0gZnVuY3Rpb24gKCkge1xuICAgIFVzZXJPYmoubmFtZSA9IG51bGw7XG4gICAgVXNlck9iai5lbWFpbCA9IG51bGw7XG4gICAgVXNlck9iai5wYXNzd29yZCA9IG51bGw7XG4gICAgVXNlck9iai5pZGVudGl0eV9kb2N1bWVudCA9IG51bGw7XG4gICAgVXNlck9iai5waG9uZSA9IG51bGw7XG4gICAgVXNlck9iai5waWN0dXJlX3VybCA9IG51bGw7XG4gICAgLy9ERUxFVEUgSU4gUE9VQ0hEQlxuICB9XG5cbiAgVXNlck9iai5nZXRfdXNlcl9kYXRhID0gZnVuY3Rpb24gKCkge1xuICAgIC8vTEVWQU5UQSBERSBQT1VDSERCIExPUyBEQVRPUyBERUwgVVNVQVJJTy4gU0kgSEFZIExPUyBQT05FIEVOIExBUyBWQVJJQUJMRVMgREVMIFNFUlZJQ0lPLiBTSSBOTyBIQVkgUE9ORSBUT0RPIE5VTExcbiAgfVxuXG4gIFVzZXJPYmouYWRkX3Bob3RvID0gZnVuY3Rpb24gKHVzZXJfcGljdHVyZV91cmwpIHtcbiAgICBVc2VyT2JqLnBpY3R1cmVfdXJsID0gdXNlcl9waWN0dXJlX3VybDtcbiAgfVxuXG4gIFVzZXJPYmouaXNMb2dnZWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgaWYoVXNlck9iai5uYW1lIT1udWxsICYmIFVzZXJPYmoubmFtZSE9XCJcIil7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9ZWxzZXtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cblxuXG4gIHJldHVybiBVc2VyT2JqO1xuXG59XSk7XG4iLCJwbWJfaW0uc2VydmljZXMuZmFjdG9yeSgnVmFsaWRhdGlvblNlcnZpY2UnLCBbJyRodHRwJywnJGlvbmljUG9wdXAnLCBmdW5jdGlvbigkaHR0cCwkaW9uaWNQb3B1cCkge1xuXG4gIHJldHVybiB7XG4gICAgaXNNb2JpbGVEZXZpY2U6IGZ1bmN0aW9uKCl7XG4gICAgICBpZih3aW5kb3cuY29yZG92YSl7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuXG4gICAgfSxcblxuICAgIHZhbGlkYXRlX25vdF9lbXB0eTogZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICAgIGlmKHZhbHVlIT1udWxsICYmIHZhbHVlIT1cInVuZGVmaW5lZFwiICYmIHZhbHVlIT1cIlwiKXtcbiAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfWVsc2V7XG4gICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfSxcblxuICAgIHZhbGlkYXRlX3R3b193b3JkczogZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICAgIGlmKHZhbHVlIT1udWxsICYmIHZhbHVlIT1cInVuZGVmaW5lZFwiICYmIHZhbHVlIT1cIlwiKXtcbiAgICAgICAgICB2YXIgdmFsdWVzID0gdmFsdWUuc3BsaXQoJyAnKS5maWx0ZXIoZnVuY3Rpb24odil7cmV0dXJuIHYhPT0nJ30pO1xuICAgICAgICAgIGlmICh2YWx1ZXMubGVuZ3RoID4gMSkge1xuICAgICAgICAgICAgICAvL3R3byBvciBtb3JlIHdvcmRzXG4gICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIC8vbm90IGVub3VnaCB3b3Jkc1xuICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgfVxuICAgICAgICB9ZWxzZXtcbiAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9LFxuXG4gICAgdmFsaWRhdGVfZXF1YWxzVG86IGZ1bmN0aW9uICh2YWx1ZSxzZWNvbmRWYWx1ZSkge1xuICAgICAgaWYodmFsdWU9PXNlY29uZFZhbHVlKXtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9ZWxzZXtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgIH0sXG5cbiAgICB2YWxpZGF0ZV9lbWFpbDogZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICAgIGlmKHZhbHVlIT1udWxsICYmIHZhbHVlIT1cInVuZGVmaW5lZFwiICYmIHZhbHVlIT1cIlwiKXtcbiAgICAgICAgICB2YXIgcmUgPSAvXigoW148PigpXFxbXFxdXFxcXC4sOzpcXHNAXCJdKyhcXC5bXjw+KClcXFtcXF1cXFxcLiw7Olxcc0BcIl0rKSopfChcIi4rXCIpKUAoKFxcW1swLTldezEsM31cXC5bMC05XXsxLDN9XFwuWzAtOV17MSwzfVxcLlswLTldezEsM31dKXwoKFthLXpBLVpcXC0wLTldK1xcLikrW2EtekEtWl17Mix9KSkkLztcbiAgICAgICAgICByZXR1cm4gcmUudGVzdCh2YWx1ZSk7XG4gICAgICAgIH1lbHNle1xuICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgIH0sXG5cbiAgICB2YWxpZGF0ZV9pZGRvY191eTogZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICBpZih2YWx1ZSE9bnVsbCAmJiB2YWx1ZSE9XCJ1bmRlZmluZWRcIiAmJiB2YWx1ZSE9XCJcIil7XG4gICAgICAgICAgdmFsdWUgPSB2YWx1ZS5yZXBsYWNlKC9cXEQvZywgJycpO1xuICAgICAgICAgIHZhciBkaWcgPSB2YWx1ZVt2YWx1ZS5sZW5ndGggLSAxXTtcbiAgICAgICAgICB2YXIgYSA9IDA7IHZhciBpID0gMDtcbiAgICAgICAgICBpZih2YWx1ZS5sZW5ndGggPD0gNil7XG4gICAgICAgICAgICBmb3IoaSA9IHZhbHVlLmxlbmd0aDsgaSA8IDc7IGkrKyl7XG4gICAgICAgICAgICAgIHZhbHVlID0gJzAnICsgdmFsdWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIGZvcihpID0gMDsgaSA8IDc7IGkrKyl7XG4gICAgICAgICAgICBhICs9IChwYXJzZUludChcIjI5ODc2MzRcIltpXSkgKiBwYXJzZUludCh2YWx1ZVtpXSkpICUgMTA7XG4gICAgICAgICAgfVxuICAgICAgICAgIHZhciByZXN1bHQ7XG4gICAgICAgICAgaWYoYSUxMCA9PT0gMCl7XG4gICAgICAgICAgICByZXN1bHQgPSAwO1xuICAgICAgICAgIH1lbHNle1xuICAgICAgICAgICAgcmVzdWx0ID0gMTAgLSBhICUgMTA7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmKGRpZyA9PSByZXN1bHQpe1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgfVxuICAgICAgfWVsc2V7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICB9XG4gIH07XG59XSk7XG4iXX0=
